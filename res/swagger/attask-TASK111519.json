{
  "openapi": "3.0.0",
  "info": {
    "title": "Attask TASK API v10.0",
    "version": "v10.0",
    "contact": {
      "email": "support@workfront.com"
    }
  },
  "servers": [
    {
      "url": "https://*.my.workfront.com/attask/api/v10.0",
      "description": "My Workfront API v10.0 Server"
    }
  ],
  "components": {
    "securitySchemes": {
      "apiKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "apiKey"
      },
      "apiKeyQuery": {
        "type": "apiKey",
        "in": "query",
        "name": "apiKey"
      },
      "sessionCookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "sessionID"
      },
      "sessionHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "sessionID"
      },
      "sessionQuery": {
        "type": "apiKey",
        "in": "query",
        "name": "sessionID"
      },
      "usernameBody": {
        "type": "http",
        "scheme": "custom",
        "x-custom-schema": {
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": true
                }
              }
            }
          }
        }
      },
      "usernameHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "username"
      },
      "usernameQuery": {
        "type": "apiKey",
        "in": "query",
        "name": "username"
      },
      "passwordBody": {
        "type": "http",
        "scheme": "custom",
        "x-custom-schema": {
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "password": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": true
                }
              }
            }
          }
        }
      },
      "passwordHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "password"
      },
      "passwordQuery": {
        "type": "apiKey",
        "in": "query",
        "name": "password"
      }
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    },
    {
      "apiKeyQuery": []
    },
    {
      "sessionCookie": []
    },
    {
      "sessionHeader": []
    },
    {
      "sessionQuery": []
    },
    {
      "usernameHeader": [],
      "passwordHeader": []
    },
    {
      "usernameQuery": [],
      "passwordQuery": []
    }
  ],
  "tags": [
    {
      "name": "authentication",
      "description": "Requests related to ensuring follow-up requests have the proper access."
    },
    {
      "name": "general",
      "description": "General purpose requests"
    }
  ],
  "paths": {
    "/task/metadata": {
      "get": {
        "operationId": "getTASKMetadata",
        "summary": "Task Metadata",
        "description": "Gets the Resource Metadata information for Task",
        "tags": [
          "TASK",
          "general"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "objects": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "label": {
                                "type": "string"
                              },
                              "objCode": {
                                "type": "string"
                              },
                              "url": {
                                "type": "string"
                              },
                              "flags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "fields": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "flags": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "label": {
                                      "type": "string"
                                    },
                                    "typeObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "targetTypeObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "fieldType": {
                                      "type": "string"
                                    },
                                    "enumTargetObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "enumType": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "url": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "possibleValues": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "references": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "typeObjCode": {
                                      "type": "string"
                                    },
                                    "targetTypeObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "fieldType": {
                                      "type": "string"
                                    },
                                    "enumTargetObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "enumType": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "url": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                }
                              },
                              "collections": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "typeObjCode": {
                                      "type": "string"
                                    },
                                    "targetTypeObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "fieldType": {
                                      "type": "string"
                                    },
                                    "enumTargetObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "enumType": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "url": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                }
                              },
                              "search": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "typeObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "targetTypeObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "fieldType": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "enumTargetObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "enumType": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "url": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                }
                              },
                              "custom": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "categories": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "ID": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "objCode": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "actions": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "arguments": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "label": {
                                      "type": "string"
                                    },
                                    "resultType": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "queries": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "arguments": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "label": {
                                      "type": "string"
                                    },
                                    "resultType": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "operations": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "name": "Task",
                    "label": "Task",
                    "objCode": "TASK",
                    "flags": [
                      "DATA_EXTENDIBLE",
                      "INLINE_EDITABLE",
                      "REPORTABLE",
                      "RESTORABLE",
                      "SHARABLE"
                    ],
                    "url": "https://hub.workfront.com/attask/api/v10.0/task/metadata",
                    "fields": {
                      "ID": {
                        "label": "ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "URL": {
                        "label": "URL",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "accessorIDs": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "accessorIDs",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string[]",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "actualCompletionDate": {
                        "label": "Actual Completion Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "actualCost": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "CURRENCY"
                        ],
                        "label": "Actual Cost",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "actualDuration": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Actual Duration",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "actualDurationMinutes": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Actual Duration Minutes",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "actualExpenseCost": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "CURRENCY"
                        ],
                        "label": "Actual Expense Cost",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "actualLaborCost": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "CURRENCY"
                        ],
                        "label": "Actual Labor Cost",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "actualRevenue": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "CURRENCY"
                        ],
                        "label": "Actual Revenue",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "actualStartDate": {
                        "label": "Actual Start Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "actualWork": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Actual Hours",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "actualWorkRequired": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Actual Hours",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "approvalCompletionDate": {
                        "label": "Approval Path Completion Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "approvalEstStartDate": {
                        "label": "Approval Estimated Start Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "approvalPlannedStartDate": {
                        "label": "Approval Planned Start Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "approvalPlannedStartDay": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "approvalPlannedStartDay",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "approvalProcessID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Approval Processes ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "approvalProjectedStartDate": {
                        "label": "Approval Projected Start Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "approvalStartDate": {
                        "label": "Approval Path Start Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "approversString": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "approversString",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "assignedToID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Assigned To ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "assignmentsListString": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "assignmentsListString",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "auditNote": {
                        "flags": [
                          "WRITE_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "auditNote",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "auditTypes": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Audit Types",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string[]",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.AuditTypeEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "Status Change",
                            "value": "ST"
                          },
                          {
                            "label": "Attachment Action",
                            "value": "AA"
                          },
                          {
                            "label": "Scope Change",
                            "value": "SC"
                          },
                          {
                            "label": "Note",
                            "value": "NO"
                          },
                          {
                            "label": "General Edit",
                            "value": "GE"
                          },
                          {
                            "label": "Combined Entry",
                            "value": "CM"
                          },
                          {
                            "label": "Error Entry",
                            "value": "ER"
                          },
                          {
                            "label": "Subscription Change",
                            "value": "SB"
                          }
                        ]
                      },
                      "auditUserIDs": {
                        "flags": [
                          "WRITE_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "auditUserIDs",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string[]",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "backlogOrder": {
                        "label": "Order",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "backlogParent": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Parent",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "billingAmount": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "CURRENCY"
                        ],
                        "label": "Cap or Fixed Amount",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "billingRecordID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Billing Record ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "canStart": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Can Start",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "categoryID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Category ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "color": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Color",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "commitDate": {
                        "label": "Commit Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "commitDateRange": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "commitDateRange",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "completionPendingDate": {
                        "label": "Completion Pending Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "condition": {
                        "label": "Condition",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.ConditionEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "Going Smoothly",
                            "value": 0
                          },
                          {
                            "label": "Some Concerns",
                            "value": 1
                          },
                          {
                            "label": "Major Roadblocks",
                            "value": 2
                          }
                        ]
                      },
                      "constraintDate": {
                        "label": "Constraint Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "convertedOpTaskEntryDate": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "convertedOpTaskEntryDate",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "convertedOpTaskName": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "convertedOpTaskName",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "convertedOpTaskOriginatorID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "convertedOpTaskOriginatorID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "costAmount": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "CURRENCY"
                        ],
                        "label": "Cost Amount",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "costType": {
                        "label": "Cost Type",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.CostTypeEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "No Cost",
                            "value": "NOC"
                          },
                          {
                            "label": "Fixed Hourly",
                            "value": "FHR"
                          },
                          {
                            "label": "User Hourly",
                            "value": "UHR"
                          },
                          {
                            "label": "Role Hourly",
                            "value": "RHC"
                          }
                        ]
                      },
                      "cpi": {
                        "label": "Cost Performance Index",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "csi": {
                        "label": "Cost Schedule Performance Index",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "currentApprovalStepID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Current Approval Stage ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "customerID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Customer ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "daysLate": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Days Late",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "description": {
                        "label": "Description",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "dueDate": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Due Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "duration": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Duration",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "durationExpression": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "durationExpression",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "durationMinutes": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Duration in Minutes",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "durationType": {
                        "label": "Duration Type",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.DurationTypeEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "Calculated Work",
                            "value": "W"
                          },
                          {
                            "label": "Effort Driven",
                            "value": "D"
                          },
                          {
                            "label": "Calculated Assignment",
                            "value": "A"
                          },
                          {
                            "label": "Simple",
                            "value": "S"
                          }
                        ]
                      },
                      "durationUnit": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Duration Unit",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.DurationUnitEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "Minutes",
                            "value": "M"
                          },
                          {
                            "label": "Hours",
                            "value": "H"
                          },
                          {
                            "label": "Days",
                            "value": "D"
                          },
                          {
                            "label": "Weeks",
                            "value": "W"
                          },
                          {
                            "label": "Months",
                            "value": "T"
                          },
                          {
                            "label": "Elapsed Minutes",
                            "value": "EM"
                          },
                          {
                            "label": "Elapsed Hours",
                            "value": "EH"
                          },
                          {
                            "label": "Elapsed Days",
                            "value": "ED"
                          },
                          {
                            "label": "Elapsed Weeks",
                            "value": "EW"
                          }
                        ]
                      },
                      "eac": {
                        "label": "EAC",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "enteredByID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Entered By ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "entryDate": {
                        "label": "Entry Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "estCompletionDate": {
                        "label": "Estimated Due Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "estStartDate": {
                        "label": "Estimated Start Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "estimate": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Estimate",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "extRefID": {
                        "label": "External Reference ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "groupID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Group ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "handoffDate": {
                        "label": "Handoff Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "hasCompletionConstraint": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "AUTO_LOAD",
                          "DYNAMIC"
                        ],
                        "label": "hasCompletionConstraint",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "hasDocuments": {
                        "label": "Has Documents",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "hasExpenses": {
                        "label": "Has Expenses",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "hasMessages": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Has Messages",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "hasNotes": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Has Notes",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "hasResolvables": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Has Resolvables",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "hasStartConstraint": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "AUTO_LOAD",
                          "DYNAMIC"
                        ],
                        "label": "hasStartConstraint",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "hasTimedNotifications": {
                        "label": "Has Reminder Notifications",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "hoursPerPoint": {
                        "label": "hoursPerPoint",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "indent": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Indent",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "isAgile": {
                        "label": "Agile",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "isCritical": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Is Critical",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "isDurationLocked": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Duration Locked",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "isLevelingExcluded": {
                        "label": "Exclude from Leveling",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "isReady": {
                        "label": "Ready",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "isStatusComplete": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "AUTO_LOAD",
                          "DYNAMIC"
                        ],
                        "label": "isStatusComplete",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "isWorkRequiredLocked": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Worked Locked",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "iterationID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Iteration ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "kanbanBoardID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Kanban Board ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "kanbanFlag": {
                        "label": "Kanban Flag",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.KanbanFlagEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "On Track",
                            "value": "ONTRACK"
                          },
                          {
                            "label": "Is Blocked",
                            "value": "ISBLOCKED"
                          },
                          {
                            "label": "Ready to Pull",
                            "value": "READYTOPULL"
                          }
                        ]
                      },
                      "lastConditionNoteID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Last Condition Note ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "lastNoteID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Last Note ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "lastUpdateDate": {
                        "label": "Last Update Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "lastUpdatedByID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Last Updated By ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "levelingStartDelay": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Leveling Delay",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "levelingStartDelayExpression": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "levelingStartDelayExpression",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "levelingStartDelayMinutes": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "levelingStartDelayMinutes",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "milestoneID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Milestone ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "name": {
                        "label": "Name",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "numberOfChildren": {
                        "label": "Number of Children",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "numberOpenOpTasks": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Number of Open Issues",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "originalDuration": {
                        "label": "Original Duration",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "originalWorkRequired": {
                        "label": "Original Planned Hours",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "parentID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Parent ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "parentLag": {
                        "label": "Parent Lag",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "parentLagType": {
                        "label": "Parent Lag Type",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.LagTypeEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "Days",
                            "value": "d"
                          },
                          {
                            "label": "Calendar Days",
                            "value": "c"
                          },
                          {
                            "label": "Percent",
                            "value": "p"
                          },
                          {
                            "label": "Day of Week",
                            "value": "w"
                          },
                          {
                            "label": "Day of Week (Non-Zero)",
                            "value": "k"
                          }
                        ]
                      },
                      "pendingCalculation": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE"
                        ],
                        "label": "pendingCalculation",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "pendingPredecessors": {
                        "flags": [
                          "READ_ONLY",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Pending Predecessors",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "pendingUpdateMethods": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE"
                        ],
                        "label": "pendingUpdateMethods",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string[]",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "percentComplete": {
                        "flags": [
                          "PERCENT"
                        ],
                        "label": "Percent Complete",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "personal": {
                        "label": "Personal",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "plannedCompletionDate": {
                        "label": "Planned Completion Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "plannedCost": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "CURRENCY"
                        ],
                        "label": "Planned Cost",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "plannedDateAlignment": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Planned Date Alignment",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.PlannedDatesAlignmentEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "Will be done after the planned completion date",
                            "value": 0
                          },
                          {
                            "label": "Will be done on the planned completion date",
                            "value": 1
                          },
                          {
                            "label": "Will be done before the planned completion date",
                            "value": 2
                          },
                          {
                            "label": "No set planned date",
                            "value": 3
                          }
                        ]
                      },
                      "plannedDuration": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Planned Duration",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "plannedDurationMinutes": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Planned Duration Minutes",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "plannedExpenseCost": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "CURRENCY"
                        ],
                        "label": "Planned Expense Cost",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "plannedHoursAlignment": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Planned Hours Alignment",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.PlannedHoursAlignmentEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "More hours than planned",
                            "value": 0
                          },
                          {
                            "label": "Same hours as planned",
                            "value": 1
                          },
                          {
                            "label": "Less hours than planned",
                            "value": 2
                          },
                          {
                            "label": "No planned hours set",
                            "value": 3
                          }
                        ]
                      },
                      "plannedLaborCost": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "CURRENCY"
                        ],
                        "label": "Planned Labor Cost",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "plannedRevenue": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "CURRENCY"
                        ],
                        "label": "Planned Revenue",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "plannedStartDate": {
                        "label": "Planned Start Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "predecessorExpression": {
                        "flags": [
                          "WRITE_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "predecessorExpression",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "previousStatus": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Previous Status",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.TaskStatusEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "New",
                            "value": "NEW"
                          },
                          {
                            "label": "In Progress",
                            "value": "INP"
                          },
                          {
                            "label": "Complete",
                            "value": "CPL"
                          },
                          {
                            "label": "Complete - Pending Approval",
                            "value": "CPA"
                          },
                          {
                            "label": "Complete - Pending Issues",
                            "value": "CPI"
                          }
                        ]
                      },
                      "priority": {
                        "label": "Priority",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.TimelinePriorityEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "None",
                            "value": 0
                          },
                          {
                            "label": "Low",
                            "value": 1
                          },
                          {
                            "label": "Normal",
                            "value": 2
                          },
                          {
                            "label": "High",
                            "value": 3
                          },
                          {
                            "label": "Urgent",
                            "value": 4
                          }
                        ]
                      },
                      "priorityColor": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "priorityColor",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "progressStatus": {
                        "label": "Progress Status",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.ProgressStatusEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "Late",
                            "value": "LT"
                          },
                          {
                            "label": "On Time",
                            "value": "ON"
                          },
                          {
                            "label": "Behind",
                            "value": "BH"
                          },
                          {
                            "label": "At Risk",
                            "value": "RK"
                          }
                        ]
                      },
                      "projectID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Project ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "projectedCompletionDate": {
                        "label": "Projected Completion Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "projectedDurationMinutes": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Projected Duration Minutes",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "projectedStartDate": {
                        "label": "Projected Start Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "recurrenceNumber": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Recurrence Number",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "recurrenceRuleID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Recurrence Rule ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "referenceNumber": {
                        "label": "Reference Number",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "rejectionIssueID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Rejection Issue ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "remainingDurationMinutes": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Remaining Duration Minutes",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "reservedTimeID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Time Off ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "resourceScope": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Resource Scope",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.TaskResourceScopeEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "None",
                            "value": "NONE"
                          },
                          {
                            "label": "Global",
                            "value": "GLOB"
                          }
                        ]
                      },
                      "revenueType": {
                        "label": "Revenue Type",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.RevenueTypeEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "Not Billable",
                            "value": "NOB"
                          },
                          {
                            "label": "User Hourly",
                            "value": "UHR"
                          },
                          {
                            "label": "Role Hourly",
                            "value": "RHR"
                          },
                          {
                            "label": "Fixed Hourly",
                            "value": "FHR"
                          },
                          {
                            "label": "User Hourly w/Cap",
                            "value": "UHC"
                          },
                          {
                            "label": "Role Hourly w/Cap",
                            "value": "RHC"
                          },
                          {
                            "label": "User Hourly Plus Fixed",
                            "value": "UHF"
                          },
                          {
                            "label": "Role Hourly Plus Fixed",
                            "value": "RHF"
                          },
                          {
                            "label": "Fixed Revenue",
                            "value": "FRV"
                          }
                        ]
                      },
                      "roleID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Role ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "securityRootID": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE"
                        ],
                        "label": "securityRootID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "securityRootObjCode": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE"
                        ],
                        "label": "securityRootObjCode",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "showCommitDate": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "showCommitDate",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "showCondition": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "showCondition",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "showStatus": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "showStatus",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "slackDate": {
                        "label": "Slack Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "date",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "spi": {
                        "label": "Schedule Performance Index",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "status": {
                        "label": "Status",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.TaskStatusEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "New",
                            "value": "NEW"
                          },
                          {
                            "label": "In Progress",
                            "value": "INP"
                          },
                          {
                            "label": "Complete",
                            "value": "CPL"
                          },
                          {
                            "label": "Complete - Pending Approval",
                            "value": "CPA"
                          },
                          {
                            "label": "Complete - Pending Issues",
                            "value": "CPI"
                          }
                        ]
                      },
                      "statusEquatesWith": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Status Equates With",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "statusUpdate": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Status Update",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "submittedByID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Submitted By ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "taskConstraint": {
                        "label": "Task Constraint",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.TaskConstraintEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "Fixed Dates",
                            "value": "FIXT"
                          },
                          {
                            "label": "Must Start On",
                            "value": "MSO"
                          },
                          {
                            "label": "Must Finish On",
                            "value": "MFO"
                          },
                          {
                            "label": "As Soon As Possible",
                            "value": "ASAP"
                          },
                          {
                            "label": "As Late As Possible",
                            "value": "ALAP"
                          },
                          {
                            "label": "Earliest Available Time",
                            "value": "EAT"
                          },
                          {
                            "label": "Latest Available Time",
                            "value": "LAT"
                          },
                          {
                            "label": "Start No Later Than",
                            "value": "SNLT"
                          },
                          {
                            "label": "Start No Earlier Than",
                            "value": "SNET"
                          },
                          {
                            "label": "Finish No Later Than",
                            "value": "FNLT"
                          },
                          {
                            "label": "Finish No Earlier Than",
                            "value": "FNET"
                          }
                        ]
                      },
                      "taskNumber": {
                        "label": "Task Number",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "taskNumberPredecessorString": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "taskNumberPredecessorString",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "teamID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Team ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "templateTaskID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Template Task ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "trackingMode": {
                        "label": "Tracking Mode",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.TaskTrackingModeEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "User Must Update",
                            "value": "USER"
                          },
                          {
                            "label": "Assume On Time",
                            "value": "ONTM"
                          },
                          {
                            "label": "Ignore Late Warnings",
                            "value": "IGNR"
                          },
                          {
                            "label": "Auto Complete",
                            "value": "AUTO"
                          },
                          {
                            "label": "Predecessor",
                            "value": "PRED"
                          }
                        ]
                      },
                      "version": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Version",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "wbs": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Work Breakdown Structure",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "work": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Work",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "workPerDayList": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "workPerDayList",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string[]",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "workRequired": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "NOT_FILTERABLE"
                        ],
                        "label": "Planned Hours",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "workRequiredExpression": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "workRequiredExpression",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "workUnit": {
                        "flags": [
                          "WRITE_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "workUnit",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.DurationUnitEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "Minutes",
                            "value": "M"
                          },
                          {
                            "label": "Hours",
                            "value": "H"
                          },
                          {
                            "label": "Days",
                            "value": "D"
                          },
                          {
                            "label": "Weeks",
                            "value": "W"
                          },
                          {
                            "label": "Months",
                            "value": "T"
                          },
                          {
                            "label": "Elapsed Minutes",
                            "value": "EM"
                          },
                          {
                            "label": "Elapsed Hours",
                            "value": "EH"
                          },
                          {
                            "label": "Elapsed Days",
                            "value": "ED"
                          },
                          {
                            "label": "Elapsed Weeks",
                            "value": "EW"
                          }
                        ]
                      }
                    },
                    "references": {
                      "approvalProcess": {
                        "label": "Approval Process",
                        "typeObjCode": "ARVPRC",
                        "targetTypeObjCode": null,
                        "fieldType": "ApprovalProcess",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/arvprc/metadata"
                      },
                      "assignedTo": {
                        "label": "Assigned To",
                        "typeObjCode": "USER",
                        "targetTypeObjCode": null,
                        "fieldType": "User",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/user/metadata"
                      },
                      "billingRecord": {
                        "label": "Billing Record",
                        "typeObjCode": "BILL",
                        "targetTypeObjCode": null,
                        "fieldType": "BillingRecord",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/bill/metadata"
                      },
                      "category": {
                        "label": "Category",
                        "typeObjCode": "CTGY",
                        "targetTypeObjCode": null,
                        "fieldType": "Category",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/ctgy/metadata"
                      },
                      "convertedOpTaskOriginator": {
                        "label": "Converted Issue Originator",
                        "typeObjCode": "USER",
                        "targetTypeObjCode": null,
                        "fieldType": "User",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/user/metadata"
                      },
                      "currentApprovalStep": {
                        "label": "Current Approval Stage",
                        "typeObjCode": "ARVSTP",
                        "targetTypeObjCode": null,
                        "fieldType": "ApprovalStep",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/arvstp/metadata"
                      },
                      "customer": {
                        "label": "Customer",
                        "typeObjCode": "CUST",
                        "targetTypeObjCode": null,
                        "fieldType": "Customer",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/cust/metadata"
                      },
                      "defaultBaselineTask": {
                        "label": "Default Baseline Task",
                        "typeObjCode": "BSTSK",
                        "targetTypeObjCode": null,
                        "fieldType": "BaselineTask",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/bstsk/metadata"
                      },
                      "enteredBy": {
                        "label": "Entered By",
                        "typeObjCode": "USER",
                        "targetTypeObjCode": null,
                        "fieldType": "User",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/user/metadata"
                      },
                      "group": {
                        "label": "Group",
                        "typeObjCode": "GROUP",
                        "targetTypeObjCode": null,
                        "fieldType": "Group",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/group/metadata"
                      },
                      "iteration": {
                        "label": "Iteration",
                        "typeObjCode": "ITRN",
                        "targetTypeObjCode": null,
                        "fieldType": "Iteration",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/itrn/metadata"
                      },
                      "kanbanBoard": {
                        "label": "Kanban Board",
                        "typeObjCode": "KNBNBD",
                        "targetTypeObjCode": null,
                        "fieldType": "KanbanBoard",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/knbnbd/metadata"
                      },
                      "lastConditionNote": {
                        "label": "Last Condition Note",
                        "typeObjCode": "NOTE",
                        "targetTypeObjCode": null,
                        "fieldType": "Note",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/note/metadata"
                      },
                      "lastNote": {
                        "label": "Last Note",
                        "typeObjCode": "NOTE",
                        "targetTypeObjCode": null,
                        "fieldType": "Note",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/note/metadata"
                      },
                      "lastUpdatedBy": {
                        "label": "Last Updated By",
                        "typeObjCode": "USER",
                        "targetTypeObjCode": null,
                        "fieldType": "User",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/user/metadata"
                      },
                      "milestone": {
                        "label": "Milestone",
                        "typeObjCode": "MILE",
                        "targetTypeObjCode": null,
                        "fieldType": "Milestone",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/mile/metadata"
                      },
                      "parent": {
                        "label": "Parent",
                        "typeObjCode": "TASK",
                        "targetTypeObjCode": null,
                        "fieldType": "Task",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/task/metadata"
                      },
                      "primaryAssignment": {
                        "label": "Primary Assignment",
                        "typeObjCode": "ASSGN",
                        "targetTypeObjCode": null,
                        "fieldType": "Assignment",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/assgn/metadata"
                      },
                      "project": {
                        "label": "Project",
                        "typeObjCode": "PROJ",
                        "targetTypeObjCode": null,
                        "fieldType": "Project",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/proj/metadata"
                      },
                      "rejectionIssue": {
                        "label": "Rejection Issue",
                        "typeObjCode": "OPTASK",
                        "targetTypeObjCode": null,
                        "fieldType": "OpTask",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/optask/metadata"
                      },
                      "reservedTime": {
                        "label": "Time Off",
                        "typeObjCode": "RESVT",
                        "targetTypeObjCode": null,
                        "fieldType": "ReservedTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/resvt/metadata"
                      },
                      "role": {
                        "label": "Job Role",
                        "typeObjCode": "ROLE",
                        "targetTypeObjCode": null,
                        "fieldType": "Role",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/role/metadata"
                      },
                      "submittedBy": {
                        "label": "Submitted By",
                        "typeObjCode": "USER",
                        "targetTypeObjCode": null,
                        "fieldType": "User",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/user/metadata"
                      },
                      "team": {
                        "label": "Team",
                        "typeObjCode": "TEAMOB",
                        "targetTypeObjCode": null,
                        "fieldType": "Team",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/teamob/metadata"
                      },
                      "teamAssignment": {
                        "label": "Team Assignment",
                        "typeObjCode": "ASSGN",
                        "targetTypeObjCode": null,
                        "fieldType": "Assignment",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/assgn/metadata"
                      },
                      "templateTask": {
                        "label": "Template Task",
                        "typeObjCode": "TTSK",
                        "targetTypeObjCode": null,
                        "fieldType": "TemplateTask",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/ttsk/metadata"
                      },
                      "workItem": {
                        "label": "Work Item",
                        "typeObjCode": "WRKITM",
                        "targetTypeObjCode": null,
                        "fieldType": "WorkItem",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/wrkitm/metadata"
                      }
                    },
                    "collections": {
                      "accessRules": {
                        "label": "accessRules",
                        "typeObjCode": "ACSRUL",
                        "targetTypeObjCode": null,
                        "fieldType": "AccessRule",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/acsrul/metadata"
                      },
                      "allPriorities": {
                        "label": "allPriorities",
                        "typeObjCode": "CSTEM",
                        "targetTypeObjCode": null,
                        "fieldType": "CustomEnum",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/cstem/metadata"
                      },
                      "allStatuses": {
                        "label": "allStatuses",
                        "typeObjCode": "CSTEM",
                        "targetTypeObjCode": null,
                        "fieldType": "CustomEnum",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/cstem/metadata"
                      },
                      "approverStatuses": {
                        "label": "approverStatuses",
                        "typeObjCode": "ARVSTS",
                        "targetTypeObjCode": null,
                        "fieldType": "ApproverStatus",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/arvsts/metadata"
                      },
                      "assignments": {
                        "label": "Assignments",
                        "typeObjCode": "ASSGN",
                        "targetTypeObjCode": null,
                        "fieldType": "Assignment",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/assgn/metadata"
                      },
                      "awaitingApprovals": {
                        "label": "awaitingApprovals",
                        "typeObjCode": "AWAPVL",
                        "targetTypeObjCode": null,
                        "fieldType": "AwaitingApproval",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/awapvl/metadata"
                      },
                      "children": {
                        "label": "children",
                        "typeObjCode": "TASK",
                        "targetTypeObjCode": null,
                        "fieldType": "Task",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/task/metadata"
                      },
                      "documentRequests": {
                        "label": "Document Requests",
                        "typeObjCode": "DOCREQ",
                        "targetTypeObjCode": null,
                        "fieldType": "DocumentRequest",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/docreq/metadata"
                      },
                      "documents": {
                        "label": "Documents",
                        "typeObjCode": "DOCU",
                        "targetTypeObjCode": null,
                        "fieldType": "Document",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/docu/metadata"
                      },
                      "doneStatuses": {
                        "label": "doneStatuses",
                        "typeObjCode": "CSTEM",
                        "targetTypeObjCode": null,
                        "fieldType": "CustomEnum",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/cstem/metadata"
                      },
                      "expenses": {
                        "label": "Expenses",
                        "typeObjCode": "EXPNS",
                        "targetTypeObjCode": null,
                        "fieldType": "Expense",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/expns/metadata"
                      },
                      "hours": {
                        "label": "Hours",
                        "typeObjCode": "HOUR",
                        "targetTypeObjCode": null,
                        "fieldType": "Hour",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/hour/metadata"
                      },
                      "objectCategories": {
                        "label": "objectCategories",
                        "typeObjCode": "OBJCAT",
                        "targetTypeObjCode": null,
                        "fieldType": "ObjectCategory",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/objcat/metadata"
                      },
                      "opTasks": {
                        "label": "Issues",
                        "typeObjCode": "OPTASK",
                        "targetTypeObjCode": null,
                        "fieldType": "OpTask",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/optask/metadata"
                      },
                      "openOpTasks": {
                        "label": "openOpTasks",
                        "typeObjCode": "OPTASK",
                        "targetTypeObjCode": null,
                        "fieldType": "OpTask",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/optask/metadata"
                      },
                      "predecessors": {
                        "label": "Predecessors",
                        "typeObjCode": "PRED",
                        "targetTypeObjCode": null,
                        "fieldType": "Predecessor",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/pred/metadata"
                      },
                      "resolvables": {
                        "label": "resolvables",
                        "typeObjCode": "OPTASK",
                        "targetTypeObjCode": null,
                        "fieldType": "OpTask",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/optask/metadata"
                      },
                      "successors": {
                        "label": "Successors",
                        "typeObjCode": "PRED",
                        "targetTypeObjCode": null,
                        "fieldType": "Predecessor",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/pred/metadata"
                      },
                      "updates": {
                        "label": "Updates",
                        "typeObjCode": "UPDATE",
                        "targetTypeObjCode": null,
                        "fieldType": "Update",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/update/metadata"
                      }
                    },
                    "search": {
                      "allNotesOM": {
                        "label": "All Notes",
                        "typeObjCode": "NOTE",
                        "targetTypeObjCode": null,
                        "fieldType": "Note",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/note/metadata"
                      },
                      "approvalRequired": {
                        "label": "Approval Required",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "assignmentsRolesMM": {
                        "label": "Assignment Roles",
                        "typeObjCode": "ROLE",
                        "targetTypeObjCode": null,
                        "fieldType": "Role",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/role/metadata"
                      },
                      "assignmentsUsersMM": {
                        "label": "Assignment Users",
                        "typeObjCode": "USER",
                        "targetTypeObjCode": null,
                        "fieldType": "User",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/user/metadata"
                      },
                      "awaitingApprovalStepApproversMM": {
                        "label": "Stage Approvers",
                        "typeObjCode": "SPAPVR",
                        "targetTypeObjCode": null,
                        "fieldType": "StepApprover",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/spapvr/metadata"
                      },
                      "currentRoleApproversMM": {
                        "label": "Current Role Approvers",
                        "typeObjCode": "ROLE",
                        "targetTypeObjCode": null,
                        "fieldType": "Role",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/role/metadata"
                      },
                      "currentUserApproversMM": {
                        "label": "Current User Approvers",
                        "typeObjCode": "USER",
                        "targetTypeObjCode": null,
                        "fieldType": "User",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/user/metadata"
                      },
                      "isApproval": {
                        "label": "Is Approval",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "isComplete": {
                        "label": "Is Complete",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "journalEntries": {
                        "label": "Journal Entries",
                        "typeObjCode": "JRNLE",
                        "targetTypeObjCode": null,
                        "fieldType": "JournalEntry",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/jrnle/metadata"
                      },
                      "notes": {
                        "label": "Notes",
                        "typeObjCode": "NOTE",
                        "targetTypeObjCode": null,
                        "fieldType": "Note",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/note/metadata"
                      },
                      "objectCategoriesMM": {
                        "label": "Categories",
                        "typeObjCode": "CTGY",
                        "targetTypeObjCode": null,
                        "fieldType": "Category",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/ctgy/metadata"
                      },
                      "pendingApproval": {
                        "label": "Pending Approval",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "pendingIssues": {
                        "label": "Pending Issues",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "predecessorsMM": {
                        "label": "Predecessors",
                        "typeObjCode": "TASK",
                        "targetTypeObjCode": null,
                        "fieldType": "Task",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/task/metadata"
                      },
                      "projectCompanyMM": {
                        "label": "Project Company",
                        "typeObjCode": "CMPY",
                        "targetTypeObjCode": null,
                        "fieldType": "Company",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/cmpy/metadata"
                      },
                      "projectMilestonePathMM": {
                        "label": "Project Milestone Path",
                        "typeObjCode": "MPATH",
                        "targetTypeObjCode": null,
                        "fieldType": "MilestonePath",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/mpath/metadata"
                      },
                      "projectOwnerID": {
                        "label": "Project Owner ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "projectOwnerMM": {
                        "label": "Project Owner",
                        "typeObjCode": "USER",
                        "targetTypeObjCode": null,
                        "fieldType": "User",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/user/metadata"
                      },
                      "projectPortfolioID": {
                        "label": "Project Portfolio ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "projectProgramID": {
                        "label": "Project Program ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "projectSponsorID": {
                        "label": "Project Sponsor ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "projectUserIDs": {
                        "label": "Project User IDs",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "projectUserRolesOM": {
                        "label": "Project User Roles",
                        "typeObjCode": "PTEAM",
                        "targetTypeObjCode": null,
                        "fieldType": "ProjectUserRole",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/pteam/metadata"
                      },
                      "projectUsersOM": {
                        "label": "Project Users",
                        "typeObjCode": "PRTU",
                        "targetTypeObjCode": null,
                        "fieldType": "ProjectUser",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/prtu/metadata"
                      },
                      "requeststatus": {
                        "label": "Request Status",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "statusModifier": {
                        "label": "Pending Status",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "successorsMM": {
                        "label": "Successors",
                        "typeObjCode": "TASK",
                        "targetTypeObjCode": null,
                        "fieldType": "Task",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/task/metadata"
                      },
                      "teamTimelineableID": {
                        "label": "Team Timelineable ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      }
                    },
                    "actions": {
                      "acceptWork": {
                        "flags": [],
                        "label": "acceptWork"
                      },
                      "approveApproval": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "userID",
                            "type": "string"
                          },
                          {
                            "name": "username",
                            "type": "string"
                          },
                          {
                            "name": "password",
                            "type": "string"
                          },
                          {
                            "name": "auditNote",
                            "type": "string"
                          },
                          {
                            "name": "auditUserIDs",
                            "type": "string[]"
                          },
                          {
                            "name": "sendNoteAsEmail",
                            "type": "boolean"
                          }
                        ],
                        "label": "approveApproval"
                      },
                      "assign": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "objID",
                            "type": "string"
                          },
                          {
                            "name": "objCode",
                            "type": "string"
                          }
                        ],
                        "label": "assign"
                      },
                      "assignMultiple": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "userIDs",
                            "type": "string[]"
                          },
                          {
                            "name": "roleIDs",
                            "type": "string[]"
                          },
                          {
                            "name": "teamID",
                            "type": "string"
                          }
                        ],
                        "label": "assignMultiple"
                      },
                      "bulkCopy": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "taskIDs",
                            "type": "string[]"
                          },
                          {
                            "name": "projectID",
                            "type": "string"
                          },
                          {
                            "name": "parentID",
                            "type": "string"
                          },
                          {
                            "name": "options",
                            "type": "string[]"
                          }
                        ],
                        "label": "bulkCopy",
                        "resultType": "string[]"
                      },
                      "bulkMove": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "taskIDs",
                            "type": "string[]"
                          },
                          {
                            "name": "projectID",
                            "type": "string"
                          },
                          {
                            "name": "parentID",
                            "type": "string"
                          },
                          {
                            "name": "options",
                            "type": "string[]"
                          }
                        ],
                        "label": "bulkMove"
                      },
                      "calculateDataExtension": {
                        "flags": [],
                        "label": "calculateDataExtension"
                      },
                      "calculateDataExtensions": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "ids",
                            "type": "string[]"
                          }
                        ],
                        "label": "calculateDataExtensions"
                      },
                      "convertToProject": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "project",
                            "type": "Project"
                          },
                          {
                            "name": "exchangeRate",
                            "type": "ExchangeRate"
                          }
                        ],
                        "label": "convertToProject",
                        "resultType": "string"
                      },
                      "linkExternalObject": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "objID",
                            "type": "string"
                          },
                          {
                            "name": "linkedObjectID",
                            "type": "string"
                          },
                          {
                            "name": "integrationType",
                            "type": "string"
                          },
                          {
                            "name": "URL",
                            "type": "string"
                          },
                          {
                            "name": "params",
                            "type": "string[]"
                          }
                        ],
                        "label": "linkExternalObject"
                      },
                      "markDone": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "status",
                            "type": "string"
                          }
                        ],
                        "label": "markDone"
                      },
                      "markNotDone": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "assignmentID",
                            "type": "string"
                          }
                        ],
                        "label": "markNotDone"
                      },
                      "move": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "projectID",
                            "type": "string"
                          },
                          {
                            "name": "parentID",
                            "type": "string"
                          },
                          {
                            "name": "options",
                            "type": "string[]"
                          }
                        ],
                        "label": "Move"
                      },
                      "recallApproval": {
                        "flags": [],
                        "label": "recallApproval"
                      },
                      "rejectApproval": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "userID",
                            "type": "string"
                          },
                          {
                            "name": "username",
                            "type": "string"
                          },
                          {
                            "name": "password",
                            "type": "string"
                          },
                          {
                            "name": "auditNote",
                            "type": "string"
                          },
                          {
                            "name": "auditUserIDs",
                            "type": "string[]"
                          },
                          {
                            "name": "sendNoteAsEmail",
                            "type": "boolean"
                          }
                        ],
                        "label": "rejectApproval"
                      },
                      "replyToAssignment": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "noteText",
                            "type": "string"
                          },
                          {
                            "name": "commitDate",
                            "type": "dateTime"
                          }
                        ],
                        "label": "replyToAssignment"
                      },
                      "unacceptWork": {
                        "flags": [],
                        "label": "unacceptWork"
                      },
                      "unassign": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "userID",
                            "type": "string"
                          }
                        ],
                        "label": "unassign"
                      },
                      "unassignOccurrences": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "userID",
                            "type": "string"
                          }
                        ],
                        "label": "unassignOccurrences",
                        "resultType": "string[]"
                      },
                      "unlinkExternalObject": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "objID",
                            "type": "string"
                          },
                          {
                            "name": "linkedObjectID",
                            "type": "string"
                          },
                          {
                            "name": "integrationType",
                            "type": "string"
                          }
                        ],
                        "label": "unlinkExternalObject"
                      }
                    },
                    "queries": {
                      "allTasksOnIterations": {
                        "arguments": [
                          {
                            "name": "iterationIDs",
                            "type": "string[]"
                          }
                        ],
                        "label": "allTasksOnIterations"
                      },
                      "defaultShownTimesheetTasks": {
                        "arguments": [
                          {
                            "name": "timesheetID",
                            "type": "string"
                          }
                        ],
                        "label": "defaultShownTimesheetTasks"
                      }
                    },
                    "operations": [
                      "add",
                      "copy",
                      "count",
                      "delete",
                      "edit",
                      "get",
                      "report",
                      "search"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task": {
      "post": {
        "operationId": "addTASKORcopyTASK",
        "summary": "Task Add OR Task Copy",
        "description": "Adds a Task object\nOR\nCopies the Task having {copySourceID}",
        "tags": [
          "TASK",
          "add",
          "copy"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            },
            "description": "Comma separated list of fields, references, and collections supported by this resource, or * for all. The list of fields to be included in the response."
          },
          {
            "in": "query",
            "name": "updates",
            "description": "JSON object whose fields represent the fields of the resource to set",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "URL": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "actualCompletionDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "actualCost": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "actualDuration": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "actualDurationMinutes": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "actualExpenseCost": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "actualLaborCost": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "actualRevenue": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "actualStartDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "actualWork": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "actualWorkRequired": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "approvalCompletionDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "approvalEstStartDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "approvalPlannedStartDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "approvalProcessID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "approvalProjectedStartDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "approvalStartDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "assignedToID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "auditNote": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "auditTypes": {
                      "$ref": "#/paths/~1task/post/parameters/22/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
                    },
                    "auditUserIDs": {
                      "$ref": "#/paths/~1task/put/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                    },
                    "backlogOrder": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "backlogParent": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "billingAmount": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "billingRecordID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "canStart": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "categoryID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "color": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "commitDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "completionPendingDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "condition": {
                      "$ref": "#/paths/~1task/post/parameters/33/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.ConditionEnum.json"
                    },
                    "constraintDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "convertedOpTaskEntryDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "convertedOpTaskName": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "convertedOpTaskOriginatorID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "costAmount": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "costType": {
                      "$ref": "#/paths/~1task/post/parameters/39/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.CostTypeEnum.json"
                    },
                    "cpi": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "csi": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "currentApprovalStepID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "customerID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "daysLate": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "description": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "duration": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "durationExpression": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "durationMinutes": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "durationType": {
                      "$ref": "#/paths/~1task/post/parameters/49/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationTypeEnum.json"
                    },
                    "durationUnit": {
                      "$ref": "#/paths/~1task/post/parameters/50/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationUnitEnum.json"
                    },
                    "eac": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "enteredByID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "entryDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "estCompletionDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "estStartDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "estimate": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "extRefID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "groupID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "handoffDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "hasDocuments": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hasExpenses": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hasMessages": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hasNotes": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hasResolvables": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hasTimedNotifications": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hoursPerPoint": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "indent": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "isAgile": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "isCritical": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "isDurationLocked": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "isLevelingExcluded": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "isReady": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "isWorkRequiredLocked": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "iterationID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "kanbanBoardID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "kanbanFlag": {
                      "$ref": "#/paths/~1task/post/parameters/76/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.KanbanFlagEnum.json"
                    },
                    "lastConditionNoteID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "lastNoteID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "lastUpdateDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "lastUpdatedByID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "levelingStartDelay": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "levelingStartDelayExpression": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "levelingStartDelayMinutes": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "milestoneID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "name": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "numberOfChildren": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "numberOpenOpTasks": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "originalDuration": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "originalWorkRequired": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "parentID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "parentLag": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "parentLagType": {
                      "$ref": "#/paths/~1task/post/parameters/92/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.LagTypeEnum.json"
                    },
                    "pendingCalculation": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "pendingUpdateMethods": {
                      "$ref": "#/paths/~1task/put/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                    },
                    "percentComplete": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "personal": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "plannedCompletionDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "plannedCost": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "plannedDuration": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "plannedDurationMinutes": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "plannedExpenseCost": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "plannedLaborCost": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "plannedRevenue": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "plannedStartDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "predecessorExpression": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "previousStatus": {
                      "$ref": "#/paths/~1task/post/parameters/106/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
                    },
                    "priority": {
                      "$ref": "#/paths/~1task/post/parameters/107/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
                    },
                    "priorityColor": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "progressStatus": {
                      "$ref": "#/paths/~1task/post/parameters/109/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.ProgressStatusEnum.json"
                    },
                    "projectID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "projectedCompletionDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "projectedDurationMinutes": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "projectedStartDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "recurrenceNumber": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "recurrenceRuleID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "referenceNumber": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "rejectionIssueID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "remainingDurationMinutes": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "reservedTimeID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "resourceScope": {
                      "$ref": "#/paths/~1task/post/parameters/120/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskResourceScopeEnum.json"
                    },
                    "revenueType": {
                      "$ref": "#/paths/~1task/post/parameters/121/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.RevenueTypeEnum.json"
                    },
                    "roleID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "securityRootID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "securityRootObjCode": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "slackDate": {
                      "$ref": "#/paths/~1task/post/parameters/125/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/date.json"
                    },
                    "spi": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "status": {
                      "$ref": "#/paths/~1task/post/parameters/106/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
                    },
                    "statusEquatesWith": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "statusUpdate": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "submittedByID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "taskConstraint": {
                      "$ref": "#/paths/~1task/post/parameters/131/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskConstraintEnum.json"
                    },
                    "taskNumber": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "teamID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "templateTaskID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "trackingMode": {
                      "$ref": "#/paths/~1task/post/parameters/135/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskTrackingModeEnum.json"
                    },
                    "version": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "wbs": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "work": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "workRequired": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "workRequiredExpression": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "workUnit": {
                      "$ref": "#/paths/~1task/post/parameters/50/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationUnitEnum.json"
                    }
                  }
                }
              }
            }
          },
          {
            "in": "query",
            "name": "ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "ID"
          },
          {
            "in": "query",
            "name": "URL",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "URL"
          },
          {
            "in": "query",
            "name": "actualCompletionDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Actual Completion Date"
          },
          {
            "in": "query",
            "name": "actualCost",
            "schema": {
              "type": "number",
              "format": "double"
            },
            "required": false,
            "description": "Actual Cost"
          },
          {
            "in": "query",
            "name": "actualDuration",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Actual Duration"
          },
          {
            "in": "query",
            "name": "actualDurationMinutes",
            "schema": {
              "type": "number",
              "format": "int32"
            },
            "required": false,
            "description": "Actual Duration Minutes"
          },
          {
            "in": "query",
            "name": "actualExpenseCost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Actual Expense Cost"
          },
          {
            "in": "query",
            "name": "actualLaborCost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Actual Labor Cost"
          },
          {
            "in": "query",
            "name": "actualRevenue",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Actual Revenue"
          },
          {
            "in": "query",
            "name": "actualStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Actual Start Date"
          },
          {
            "in": "query",
            "name": "actualWork",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Actual Hours"
          },
          {
            "in": "query",
            "name": "actualWorkRequired",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Actual Hours"
          },
          {
            "in": "query",
            "name": "approvalCompletionDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Approval Path Completion Date"
          },
          {
            "in": "query",
            "name": "approvalEstStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Approval Estimated Start Date"
          },
          {
            "in": "query",
            "name": "approvalPlannedStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Approval Planned Start Date"
          },
          {
            "in": "query",
            "name": "approvalProcessID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Approval Processes ID"
          },
          {
            "in": "query",
            "name": "approvalProjectedStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Approval Projected Start Date"
          },
          {
            "in": "query",
            "name": "approvalStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Approval Path Start Date"
          },
          {
            "in": "query",
            "name": "assignedToID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Assigned To ID"
          },
          {
            "in": "query",
            "name": "auditNote",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "auditNote"
          },
          {
            "in": "query",
            "name": "auditTypes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ST",
                  "AA",
                  "SC",
                  "NO",
                  "GE",
                  "CM",
                  "ER",
                  "SB"
                ]
              }
            },
            "required": false,
            "description": "Audit Types"
          },
          {
            "in": "query",
            "name": "auditUserIDs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false,
            "description": "auditUserIDs"
          },
          {
            "in": "query",
            "name": "backlogOrder",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Order"
          },
          {
            "in": "query",
            "name": "backlogParent",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Parent"
          },
          {
            "in": "query",
            "name": "billingAmount",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Cap or Fixed Amount"
          },
          {
            "in": "query",
            "name": "billingRecordID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Billing Record ID"
          },
          {
            "in": "query",
            "name": "canStart",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Can Start"
          },
          {
            "in": "query",
            "name": "categoryID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Category ID"
          },
          {
            "in": "query",
            "name": "color",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Color"
          },
          {
            "in": "query",
            "name": "commitDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Commit Date"
          },
          {
            "in": "query",
            "name": "completionPendingDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Completion Pending Date"
          },
          {
            "in": "query",
            "name": "condition",
            "schema": {
              "type": "number",
              "enum": [
                0,
                1,
                2
              ]
            },
            "required": false,
            "description": "Condition"
          },
          {
            "in": "query",
            "name": "constraintDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Constraint Date"
          },
          {
            "in": "query",
            "name": "convertedOpTaskEntryDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "convertedOpTaskEntryDate"
          },
          {
            "in": "query",
            "name": "convertedOpTaskName",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "convertedOpTaskName"
          },
          {
            "in": "query",
            "name": "convertedOpTaskOriginatorID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "convertedOpTaskOriginatorID"
          },
          {
            "in": "query",
            "name": "costAmount",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Cost Amount"
          },
          {
            "in": "query",
            "name": "costType",
            "schema": {
              "type": "string",
              "enum": [
                "NOC",
                "FHR",
                "UHR",
                "RHC"
              ]
            },
            "required": false,
            "description": "Cost Type"
          },
          {
            "in": "query",
            "name": "cpi",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Cost Performance Index"
          },
          {
            "in": "query",
            "name": "csi",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Cost Schedule Performance Index"
          },
          {
            "in": "query",
            "name": "currentApprovalStepID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Current Approval Stage ID"
          },
          {
            "in": "query",
            "name": "customerID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Customer ID"
          },
          {
            "in": "query",
            "name": "daysLate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Days Late"
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Description"
          },
          {
            "in": "query",
            "name": "duration",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Duration"
          },
          {
            "in": "query",
            "name": "durationExpression",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "durationExpression"
          },
          {
            "in": "query",
            "name": "durationMinutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Duration in Minutes"
          },
          {
            "in": "query",
            "name": "durationType",
            "schema": {
              "type": "string",
              "enum": [
                "W",
                "D",
                "A",
                "S"
              ]
            },
            "required": false,
            "description": "Duration Type"
          },
          {
            "in": "query",
            "name": "durationUnit",
            "schema": {
              "type": "string",
              "enum": [
                "M",
                "H",
                "D",
                "W",
                "T",
                "EM",
                "EH",
                "ED",
                "EW"
              ]
            },
            "required": false,
            "description": "Duration Unit"
          },
          {
            "in": "query",
            "name": "eac",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "EAC"
          },
          {
            "in": "query",
            "name": "enteredByID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Entered By ID"
          },
          {
            "in": "query",
            "name": "entryDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Entry Date"
          },
          {
            "in": "query",
            "name": "estCompletionDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Estimated Due Date"
          },
          {
            "in": "query",
            "name": "estStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Estimated Start Date"
          },
          {
            "in": "query",
            "name": "estimate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Estimate"
          },
          {
            "in": "query",
            "name": "extRefID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "External Reference ID"
          },
          {
            "in": "query",
            "name": "groupID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Group ID"
          },
          {
            "in": "query",
            "name": "handoffDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Handoff Date"
          },
          {
            "in": "query",
            "name": "hasDocuments",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Documents"
          },
          {
            "in": "query",
            "name": "hasExpenses",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Expenses"
          },
          {
            "in": "query",
            "name": "hasMessages",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Messages"
          },
          {
            "in": "query",
            "name": "hasNotes",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Notes"
          },
          {
            "in": "query",
            "name": "hasResolvables",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Resolvables"
          },
          {
            "in": "query",
            "name": "hasTimedNotifications",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Reminder Notifications"
          },
          {
            "in": "query",
            "name": "hoursPerPoint",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "hoursPerPoint"
          },
          {
            "in": "query",
            "name": "indent",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Indent"
          },
          {
            "in": "query",
            "name": "isAgile",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Agile"
          },
          {
            "in": "query",
            "name": "isCritical",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Is Critical"
          },
          {
            "in": "query",
            "name": "isDurationLocked",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Duration Locked"
          },
          {
            "in": "query",
            "name": "isLevelingExcluded",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Exclude from Leveling"
          },
          {
            "in": "query",
            "name": "isReady",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Ready"
          },
          {
            "in": "query",
            "name": "isWorkRequiredLocked",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Worked Locked"
          },
          {
            "in": "query",
            "name": "iterationID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Iteration ID"
          },
          {
            "in": "query",
            "name": "kanbanBoardID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Kanban Board ID"
          },
          {
            "in": "query",
            "name": "kanbanFlag",
            "schema": {
              "type": "string",
              "enum": [
                "ONTRACK",
                "ISBLOCKED",
                "READYTOPULL"
              ]
            },
            "required": false,
            "description": "Kanban Flag"
          },
          {
            "in": "query",
            "name": "lastConditionNoteID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Last Condition Note ID"
          },
          {
            "in": "query",
            "name": "lastNoteID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Last Note ID"
          },
          {
            "in": "query",
            "name": "lastUpdateDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Last Update Date"
          },
          {
            "in": "query",
            "name": "lastUpdatedByID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Last Updated By ID"
          },
          {
            "in": "query",
            "name": "levelingStartDelay",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Leveling Delay"
          },
          {
            "in": "query",
            "name": "levelingStartDelayExpression",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "levelingStartDelayExpression"
          },
          {
            "in": "query",
            "name": "levelingStartDelayMinutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "levelingStartDelayMinutes"
          },
          {
            "in": "query",
            "name": "milestoneID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Milestone ID"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Name"
          },
          {
            "in": "query",
            "name": "numberOfChildren",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Number of Children"
          },
          {
            "in": "query",
            "name": "numberOpenOpTasks",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Number of Open Issues"
          },
          {
            "in": "query",
            "name": "originalDuration",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Original Duration"
          },
          {
            "in": "query",
            "name": "originalWorkRequired",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Original Planned Hours"
          },
          {
            "in": "query",
            "name": "parentID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Parent ID"
          },
          {
            "in": "query",
            "name": "parentLag",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Parent Lag"
          },
          {
            "in": "query",
            "name": "parentLagType",
            "schema": {
              "type": "string",
              "enum": [
                "d",
                "c",
                "p",
                "w",
                "k"
              ]
            },
            "required": false,
            "description": "Parent Lag Type"
          },
          {
            "in": "query",
            "name": "pendingCalculation",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "pendingCalculation"
          },
          {
            "in": "query",
            "name": "pendingUpdateMethods",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false,
            "description": "pendingUpdateMethods"
          },
          {
            "in": "query",
            "name": "percentComplete",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Percent Complete"
          },
          {
            "in": "query",
            "name": "personal",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Personal"
          },
          {
            "in": "query",
            "name": "plannedCompletionDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Planned Completion Date"
          },
          {
            "in": "query",
            "name": "plannedCost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Planned Cost"
          },
          {
            "in": "query",
            "name": "plannedDuration",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Planned Duration"
          },
          {
            "in": "query",
            "name": "plannedDurationMinutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Planned Duration Minutes"
          },
          {
            "in": "query",
            "name": "plannedExpenseCost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Planned Expense Cost"
          },
          {
            "in": "query",
            "name": "plannedLaborCost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Planned Labor Cost"
          },
          {
            "in": "query",
            "name": "plannedRevenue",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Planned Revenue"
          },
          {
            "in": "query",
            "name": "plannedStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Planned Start Date"
          },
          {
            "in": "query",
            "name": "predecessorExpression",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "predecessorExpression"
          },
          {
            "in": "query",
            "name": "previousStatus",
            "schema": {
              "type": "string",
              "enum": [
                "NEW",
                "INP",
                "CPL",
                "CPA",
                "CPI"
              ]
            },
            "required": false,
            "description": "Previous Status"
          },
          {
            "in": "query",
            "name": "priority",
            "schema": {
              "type": "number",
              "enum": [
                0,
                1,
                2,
                3,
                4
              ]
            },
            "required": false,
            "description": "Priority"
          },
          {
            "in": "query",
            "name": "priorityColor",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "priorityColor"
          },
          {
            "in": "query",
            "name": "progressStatus",
            "schema": {
              "type": "string",
              "enum": [
                "LT",
                "ON",
                "BH",
                "RK"
              ]
            },
            "required": false,
            "description": "Progress Status"
          },
          {
            "in": "query",
            "name": "projectID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Project ID"
          },
          {
            "in": "query",
            "name": "projectedCompletionDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Projected Completion Date"
          },
          {
            "in": "query",
            "name": "projectedDurationMinutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Projected Duration Minutes"
          },
          {
            "in": "query",
            "name": "projectedStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Projected Start Date"
          },
          {
            "in": "query",
            "name": "recurrenceNumber",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Recurrence Number"
          },
          {
            "in": "query",
            "name": "recurrenceRuleID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Recurrence Rule ID"
          },
          {
            "in": "query",
            "name": "referenceNumber",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Reference Number"
          },
          {
            "in": "query",
            "name": "rejectionIssueID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Rejection Issue ID"
          },
          {
            "in": "query",
            "name": "remainingDurationMinutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Remaining Duration Minutes"
          },
          {
            "in": "query",
            "name": "reservedTimeID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Time Off ID"
          },
          {
            "in": "query",
            "name": "resourceScope",
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "GLOB"
              ]
            },
            "required": false,
            "description": "Resource Scope"
          },
          {
            "in": "query",
            "name": "revenueType",
            "schema": {
              "type": "string",
              "enum": [
                "NOB",
                "UHR",
                "RHR",
                "FHR",
                "UHC",
                "RHC",
                "UHF",
                "RHF",
                "FRV"
              ]
            },
            "required": false,
            "description": "Revenue Type"
          },
          {
            "in": "query",
            "name": "roleID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Role ID"
          },
          {
            "in": "query",
            "name": "securityRootID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "securityRootID"
          },
          {
            "in": "query",
            "name": "securityRootObjCode",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "securityRootObjCode"
          },
          {
            "in": "query",
            "name": "slackDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "required": false,
            "description": "Slack Date"
          },
          {
            "in": "query",
            "name": "spi",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Schedule Performance Index"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/106/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
            },
            "required": false,
            "description": "Status"
          },
          {
            "in": "query",
            "name": "statusEquatesWith",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Status Equates With"
          },
          {
            "in": "query",
            "name": "statusUpdate",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Status Update"
          },
          {
            "in": "query",
            "name": "submittedByID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Submitted By ID"
          },
          {
            "in": "query",
            "name": "taskConstraint",
            "schema": {
              "type": "string",
              "enum": [
                "FIXT",
                "MSO",
                "MFO",
                "ASAP",
                "ALAP",
                "EAT",
                "LAT",
                "SNLT",
                "SNET",
                "FNLT",
                "FNET"
              ]
            },
            "required": false,
            "description": "Task Constraint"
          },
          {
            "in": "query",
            "name": "taskNumber",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Task Number"
          },
          {
            "in": "query",
            "name": "teamID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Team ID"
          },
          {
            "in": "query",
            "name": "templateTaskID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Template Task ID"
          },
          {
            "in": "query",
            "name": "trackingMode",
            "schema": {
              "type": "string",
              "enum": [
                "USER",
                "ONTM",
                "IGNR",
                "AUTO",
                "PRED"
              ]
            },
            "required": false,
            "description": "Tracking Mode"
          },
          {
            "in": "query",
            "name": "version",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Version"
          },
          {
            "in": "query",
            "name": "wbs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Work Breakdown Structure"
          },
          {
            "in": "query",
            "name": "work",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Work"
          },
          {
            "in": "query",
            "name": "workRequired",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Planned Hours"
          },
          {
            "in": "query",
            "name": "workRequiredExpression",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "workRequiredExpression"
          },
          {
            "in": "query",
            "name": "workUnit",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/50/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationUnitEnum.json"
            },
            "required": false,
            "description": "workUnit"
          },
          {
            "in": "query",
            "name": "copySourceID",
            "description": "The ID of the Task to copy",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Include all necessary fields to create a Task",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/paths/~1task/post/parameters/1/content/application~1json/schema",
                    "x-miro": "swagger/v10.0/schemas/resources/TASK/write.json"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "ID": {
                        "type": "string"
                      },
                      "URL": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "actualCompletionDate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "actualCost": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "actualDuration": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "actualDurationMinutes": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/indent",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "actualExpenseCost": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "actualLaborCost": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "actualRevenue": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "actualStartDate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "actualWork": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "actualWorkRequired": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/indent",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "approvalCompletionDate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "approvalEstStartDate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "approvalPlannedStartDate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "approvalProcessID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "approvalProjectedStartDate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "approvalStartDate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "assignedToID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "auditNote": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "auditTypes": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "ST",
                            "AA",
                            "SC",
                            "NO",
                            "GE",
                            "CM",
                            "ER",
                            "SB"
                          ]
                        }
                      },
                      "auditUserIDs": {
                        "type": "array",
                        "items": {
                          "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                          "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                        }
                      },
                      "backlogOrder": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/indent",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "backlogParent": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "billingAmount": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "billingRecordID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "canStart": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/isAgile",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/boolean.json"
                      },
                      "categoryID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "color": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "commitDate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "completionPendingDate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "condition": {
                        "type": "number",
                        "enum": [
                          0,
                          1,
                          2
                        ]
                      },
                      "constraintDate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "convertedOpTaskEntryDate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "convertedOpTaskName": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "convertedOpTaskOriginatorID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "costAmount": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "costType": {
                        "type": "string",
                        "enum": [
                          "NOC",
                          "FHR",
                          "UHR",
                          "RHC"
                        ]
                      },
                      "cpi": {
                        "type": "number",
                        "format": "double"
                      },
                      "csi": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "currentApprovalStepID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "customerID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "daysLate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/indent",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "description": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "duration": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "durationExpression": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "durationMinutes": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/indent",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "durationType": {
                        "type": "string",
                        "enum": [
                          "W",
                          "D",
                          "A",
                          "S"
                        ]
                      },
                      "durationUnit": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/workUnit",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.com.attask.common.constants.DurationUnitEnum.json"
                      },
                      "eac": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "enteredByID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "entryDate": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "estCompletionDate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "estStartDate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "estimate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "extRefID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "groupID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "handoffDate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "hasDocuments": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/isAgile",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/boolean.json"
                      },
                      "hasExpenses": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/isAgile",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/boolean.json"
                      },
                      "hasMessages": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/isAgile",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/boolean.json"
                      },
                      "hasNotes": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/isAgile",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/boolean.json"
                      },
                      "hasResolvables": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/isAgile",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/boolean.json"
                      },
                      "hasTimedNotifications": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/isAgile",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/boolean.json"
                      },
                      "hoursPerPoint": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "indent": {
                        "type": "number",
                        "format": "int32"
                      },
                      "isAgile": {
                        "type": "boolean"
                      },
                      "isCritical": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/isAgile",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/boolean.json"
                      },
                      "isDurationLocked": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/isAgile",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/boolean.json"
                      },
                      "isLevelingExcluded": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/isAgile",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/boolean.json"
                      },
                      "isReady": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/isAgile",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/boolean.json"
                      },
                      "isWorkRequiredLocked": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/isAgile",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/boolean.json"
                      },
                      "iterationID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "kanbanBoardID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "kanbanFlag": {
                        "type": "string",
                        "enum": [
                          "ONTRACK",
                          "ISBLOCKED",
                          "READYTOPULL"
                        ]
                      },
                      "lastConditionNoteID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "lastNoteID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "lastUpdateDate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "lastUpdatedByID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "levelingStartDelay": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "levelingStartDelayExpression": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "levelingStartDelayMinutes": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/indent",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "milestoneID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "name": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "numberOfChildren": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/indent",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "numberOpenOpTasks": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/indent",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "originalDuration": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/indent",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "originalWorkRequired": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/indent",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "parentID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "parentLag": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "parentLagType": {
                        "type": "string",
                        "enum": [
                          "d",
                          "c",
                          "p",
                          "w",
                          "k"
                        ]
                      },
                      "pendingCalculation": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "pendingUpdateMethods": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/auditUserIDs",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string[].json"
                      },
                      "percentComplete": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "personal": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/isAgile",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/boolean.json"
                      },
                      "plannedCompletionDate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "plannedCost": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "plannedDuration": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "plannedDurationMinutes": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/indent",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "plannedExpenseCost": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "plannedLaborCost": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "plannedRevenue": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "plannedStartDate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "predecessorExpression": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "previousStatus": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/status",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
                      },
                      "priority": {
                        "type": "number",
                        "enum": [
                          0,
                          1,
                          2,
                          3,
                          4
                        ]
                      },
                      "priorityColor": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "progressStatus": {
                        "type": "string",
                        "enum": [
                          "LT",
                          "ON",
                          "BH",
                          "RK"
                        ]
                      },
                      "projectID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "projectedCompletionDate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "projectedDurationMinutes": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/indent",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "projectedStartDate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "recurrenceNumber": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/indent",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "recurrenceRuleID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "referenceNumber": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/indent",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "rejectionIssueID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "remainingDurationMinutes": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/indent",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "reservedTimeID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "resourceScope": {
                        "type": "string",
                        "enum": [
                          "NONE",
                          "GLOB"
                        ]
                      },
                      "revenueType": {
                        "type": "string",
                        "enum": [
                          "NOB",
                          "UHR",
                          "RHR",
                          "FHR",
                          "UHC",
                          "RHC",
                          "UHF",
                          "RHF",
                          "FRV"
                        ]
                      },
                      "roleID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "securityRootID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "securityRootObjCode": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "slackDate": {
                        "type": "string",
                        "format": "date"
                      },
                      "spi": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "NEW",
                          "INP",
                          "CPL",
                          "CPA",
                          "CPI"
                        ]
                      },
                      "statusEquatesWith": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "statusUpdate": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "submittedByID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "taskConstraint": {
                        "type": "string",
                        "enum": [
                          "FIXT",
                          "MSO",
                          "MFO",
                          "ASAP",
                          "ALAP",
                          "EAT",
                          "LAT",
                          "SNLT",
                          "SNET",
                          "FNLT",
                          "FNET"
                        ]
                      },
                      "taskNumber": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/indent",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "teamID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "templateTaskID": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "trackingMode": {
                        "type": "string",
                        "enum": [
                          "USER",
                          "ONTM",
                          "IGNR",
                          "AUTO",
                          "PRED"
                        ]
                      },
                      "version": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/indent",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "wbs": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "work": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/cpi",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "workRequired": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/indent",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "workRequiredExpression": {
                        "$ref": "#/paths/~1task/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "workUnit": {
                        "type": "string",
                        "enum": [
                          "M",
                          "H",
                          "D",
                          "W",
                          "T",
                          "EM",
                          "EH",
                          "ED",
                          "EW"
                        ]
                      }
                    }
                  }
                ]
              },
              "examples": {
                "addTASK": {
                  "value": {}
                },
                "copyTASK": {
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/paths/~1task~1report/get/parameters/1/content/application~1json/schema",
                          "x-miro": "swagger/v10.0/schemas/resources/TASK/read.json"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "examples": {
                  "addTASK": {
                    "value": {}
                  },
                  "copyTASK": {
                    "value": {}
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putTASKActionacceptWorkORputTASKActionapproveApprovalORputTASKActionassignORputTASKActionassignMultipleORputTASKActionbulkCopyORputTASKActionbulkMoveORputTASKActioncalculateDataExtensionORputTASKActioncalculateDataExtensionsORputTASKActionconvertToProjectORputTASKActionlinkExternalObjectORputTASKActionmarkDoneORputTASKActionmarkNotDoneORputTASKActionmoveORputTASKActionrecallApprovalORputTASKActionrejectApprovalORputTASKActionreplyToAssignmentORputTASKActionunacceptWorkORputTASKActionunassignORputTASKActionunassignOccurrencesORputTASKActionunlinkExternalObject",
        "parameters": [
          {
            "in": "query",
            "name": "ID",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/142/schema",
              "x-miro": "swagger/v10.0/schemas/resourceID.yml"
            },
            "required": false,
            "description": "ID of the object"
          },
          {
            "in": "query",
            "name": "action",
            "description": "The action to perform on the Task",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "userID",
            "description": "userID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "username",
            "description": "username",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "password",
            "description": "password",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "auditNote",
            "description": "auditNote",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "auditUserIDs",
            "description": "auditUserIDs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/paths/~1task/put/parameters/1/schema",
                "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
              }
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sendNoteAsEmail",
            "description": "sendNoteAsEmail",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "objID",
            "description": "objID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "objCode",
            "description": "objCode",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "userIDs",
            "description": "userIDs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "roleIDs",
            "description": "roleIDs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "teamID",
            "description": "teamID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "taskIDs",
            "description": "taskIDs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "projectID",
            "description": "projectID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "parentID",
            "description": "parentID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "options",
            "description": "options",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ids",
            "description": "ids",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "project",
            "description": "project",
            "schema": {
              "type": "object",
              "properties": {
                "BCCompletionState": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "SUMMARY",
                      "INFO",
                      "DEL",
                      "RISK",
                      "COST",
                      "ALIGN",
                      "DE"
                    ]
                  }
                },
                "ID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "URL": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "actualBenefit": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "actualCompletionDate": {
                  "$ref": "#/paths/~1task/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "actualCost": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "actualDurationMinutes": {
                  "$ref": "#/paths/~1task/post/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "actualExpenseCost": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "actualLaborCost": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "actualRevenue": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "actualRiskCost": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "actualStartDate": {
                  "$ref": "#/paths/~1task/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "actualValue": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "actualWorkRequired": {
                  "$ref": "#/paths/~1task/post/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "alignment": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "alignmentScoreCardID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "approvalCompletionDate": {
                  "$ref": "#/paths/~1task/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "approvalProcessID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "approvalStartDate": {
                  "$ref": "#/paths/~1task/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "auditTypes": {
                  "$ref": "#/paths/~1task/post/parameters/22/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
                },
                "autoBaselineRecurOn": {
                  "$ref": "#/paths/~1task/post/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "autoBaselineRecurrenceType": {
                  "type": "string",
                  "enum": [
                    "D",
                    "W",
                    "BW",
                    "SM",
                    "M",
                    "C"
                  ]
                },
                "billedRevenue": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "budget": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "budgetStatus": {
                  "type": "number",
                  "enum": [
                    0,
                    1,
                    2
                  ]
                },
                "budgetedCompletionDate": {
                  "$ref": "#/paths/~1task/post/parameters/125/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/date.json"
                },
                "budgetedCost": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "budgetedHours": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "budgetedLaborCost": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "budgetedStartDate": {
                  "$ref": "#/paths/~1task/post/parameters/125/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/date.json"
                },
                "categoryID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "companyID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "completionType": {
                  "type": "string",
                  "enum": [
                    "MAN",
                    "AUT"
                  ]
                },
                "condition": {
                  "type": "string",
                  "enum": [
                    "ON",
                    "AR",
                    "IT"
                  ]
                },
                "conditionType": {
                  "type": "string",
                  "enum": [
                    "PG",
                    "MN"
                  ]
                },
                "convertedOpTaskEntryDate": {
                  "$ref": "#/paths/~1task/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "convertedOpTaskName": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "convertedOpTaskOriginatorID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "cpi": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "csi": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "currency": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "currentApprovalStepID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "customerID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "deliverableScoreCardID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "deliverableSuccessScore": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "description": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "displayOrder": {
                  "$ref": "#/paths/~1task/post/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "durationMinutes": {
                  "$ref": "#/paths/~1task/post/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "eac": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "eacCalculationMethod": {
                  "type": "string",
                  "enum": [
                    "P",
                    "T"
                  ]
                },
                "enableAutoBaselines": {
                  "$ref": "#/paths/~1task/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "enteredByID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "entryDate": {
                  "$ref": "#/paths/~1task/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "estCompletionDate": {
                  "$ref": "#/paths/~1task/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "estStartDate": {
                  "$ref": "#/paths/~1task/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "extRefID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "filterHourTypes": {
                  "$ref": "#/paths/~1task/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "financeLastUpdateDate": {
                  "$ref": "#/paths/~1task/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "fixedCost": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "fixedEndDate": {
                  "$ref": "#/paths/~1task/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "fixedRevenue": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "fixedStartDate": {
                  "$ref": "#/paths/~1task/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "groupID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "hasBudgetConflict": {
                  "$ref": "#/paths/~1task/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasCalcError": {
                  "$ref": "#/paths/~1task/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasDocuments": {
                  "$ref": "#/paths/~1task/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasExpenses": {
                  "$ref": "#/paths/~1task/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasMessages": {
                  "$ref": "#/paths/~1task/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasNotes": {
                  "$ref": "#/paths/~1task/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasRateOverride": {
                  "$ref": "#/paths/~1task/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasResolvables": {
                  "$ref": "#/paths/~1task/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasTimedNotifications": {
                  "$ref": "#/paths/~1task/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasTimelineException": {
                  "$ref": "#/paths/~1task/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "isOriginalPlannedHoursSet": {
                  "$ref": "#/paths/~1task/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "lastCalcDate": {
                  "$ref": "#/paths/~1task/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "lastConditionNoteID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "lastNoteID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "lastUpdateDate": {
                  "$ref": "#/paths/~1task/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "lastUpdatedByID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "levelingMode": {
                  "type": "string",
                  "enum": [
                    "AUT",
                    "MAN"
                  ]
                },
                "milestonePathID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "name": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "nextAutoBaselineDate": {
                  "$ref": "#/paths/~1task/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "numberOpenOpTasks": {
                  "$ref": "#/paths/~1task/post/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "optimizationScore": {
                  "$ref": "#/paths/~1task/post/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "originalWorkRequired": {
                  "$ref": "#/paths/~1task/post/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "ownerID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "ownerPrivileges": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "APT"
                    ]
                  }
                },
                "pendingCalculation": {
                  "$ref": "#/paths/~1task/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "pendingUpdateMethods": {
                  "$ref": "#/paths/~1task/put/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                },
                "percentComplete": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "performanceIndexMethod": {
                  "type": "string",
                  "enum": [
                    "H",
                    "C"
                  ]
                },
                "personal": {
                  "$ref": "#/paths/~1task/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "plannedBenefit": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "plannedCompletionDate": {
                  "$ref": "#/paths/~1task/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "plannedCost": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "plannedExpenseCost": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "plannedLaborCost": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "plannedRevenue": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "plannedRiskCost": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "plannedStartDate": {
                  "$ref": "#/paths/~1task/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "plannedValue": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "popAccountID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "portfolioID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "portfolioPriority": {
                  "$ref": "#/paths/~1task/post/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "previousStatus": {
                  "$ref": "#/paths/~1task/put/parameters/18/schema/properties/status",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.ProjectStatusEnum.json"
                },
                "priority": {
                  "$ref": "#/paths/~1task/post/parameters/107/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
                },
                "programID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "progressStatus": {
                  "$ref": "#/paths/~1task/post/parameters/109/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.ProgressStatusEnum.json"
                },
                "projectedCompletionDate": {
                  "$ref": "#/paths/~1task/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "projectedStartDate": {
                  "$ref": "#/paths/~1task/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "queueDefID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "referenceNumber": {
                  "$ref": "#/paths/~1task/post/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "rejectionIssueID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "remainingCost": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "remainingRevenue": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "remainingRiskCost": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "resourcePlannerBudgetedLaborCost": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "resourcePoolID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "risk": {
                  "type": "number",
                  "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                },
                "riskPerformanceIndex": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "scheduleID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "scheduleMode": {
                  "type": "string",
                  "enum": [
                    "S",
                    "C"
                  ]
                },
                "selectedOnPortfolioOptimizer": {
                  "$ref": "#/paths/~1task/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "spi": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "sponsorID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "CUR",
                    "ONH",
                    "PLN",
                    "CPL",
                    "DED",
                    "REQ",
                    "APR",
                    "REJ",
                    "IDA"
                  ]
                },
                "statusUpdate": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "submittedByID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "summaryCompletionType": {
                  "$ref": "#/paths/~1task/put/parameters/18/schema/properties/completionType",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.CompletionTypeEnum.json"
                },
                "syncBurndownDate": {
                  "$ref": "#/paths/~1task/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "teamID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "templateID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "timelineExceptionInfo": {
                  "type": "object"
                },
                "totalOpTaskCount": {
                  "$ref": "#/paths/~1task/post/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "totalTaskCount": {
                  "$ref": "#/paths/~1task/post/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "updateType": {
                  "type": "string",
                  "enum": [
                    "AUTO",
                    "EVNT",
                    "ATYO",
                    "MANU"
                  ]
                },
                "version": {
                  "$ref": "#/paths/~1task/post/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "work": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "workRequired": {
                  "$ref": "#/paths/~1task/post/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                }
              }
            },
            "required": false
          },
          {
            "in": "query",
            "name": "exchangeRate",
            "description": "exchangeRate",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "currency": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "customerID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "extRefID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "projectID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "rate": {
                  "$ref": "#/paths/~1task/post/parameters/5/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "securityRootID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "securityRootObjCode": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "templateID": {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                }
              }
            },
            "required": false
          },
          {
            "in": "query",
            "name": "linkedObjectID",
            "description": "linkedObjectID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "integrationType",
            "description": "integrationType",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "URL",
            "description": "URL",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "params",
            "description": "params",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "status",
            "description": "status",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "assignmentID",
            "description": "assignmentID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "noteText",
            "description": "noteText",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "commitDate",
            "description": "commitDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false
          }
        ],
        "summary": "Task acceptWork OR Task approveApproval OR Task assign OR Task assignMultiple OR Task bulkCopy OR Task bulkMove OR Task calculateDataExtension OR Task calculateDataExtensions OR Task convertToProject OR Task linkExternalObject OR Task markDone OR Task markNotDone OR Task move OR Task recallApproval OR Task rejectApproval OR Task replyToAssignment OR Task unacceptWork OR Task unassign OR Task unassignOccurrences OR Task unlinkExternalObject",
        "description": "Performs the acceptWork action on the Task object\nOR\nPerforms the approveApproval action on the Task object\nOR\nPerforms the assign action on the Task object\nOR\nPerforms the assignMultiple action on the Task object\nOR\nPerforms the bulkCopy action on the Task object\nOR\nPerforms the bulkMove action on the Task object\nOR\nPerforms the calculateDataExtension action on the Task object\nOR\nPerforms the calculateDataExtensions action on the Task object\nOR\nPerforms the convertToProject action on the Task object\nOR\nPerforms the linkExternalObject action on the Task object\nOR\nPerforms the markDone action on the Task object\nOR\nPerforms the markNotDone action on the Task object\nOR\nPerforms the move action on the Task object\nOR\nPerforms the recallApproval action on the Task object\nOR\nPerforms the rejectApproval action on the Task object\nOR\nPerforms the replyToAssignment action on the Task object\nOR\nPerforms the unacceptWork action on the Task object\nOR\nPerforms the unassign action on the Task object\nOR\nPerforms the unassignOccurrences action on the Task object\nOR\nPerforms the unlinkExternalObject action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {}
                  },
                  {
                    "type": "object",
                    "properties": {
                      "userID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "username": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "password": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "auditNote": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "auditUserIDs": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "sendNoteAsEmail": {
                        "$ref": "#/paths/~1task/put/parameters/7/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "objCode": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "userIDs": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "roleIDs": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "teamID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "taskIDs": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "projectID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "parentID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "options": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "ids": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "project": {
                        "$ref": "#/paths/~1task/put/parameters/18/schema",
                        "x-miro": "swagger/v10.0/schemas/resources/PROJ/write.json"
                      },
                      "exchangeRate": {
                        "$ref": "#/paths/~1task/put/parameters/19/schema",
                        "x-miro": "swagger/v10.0/schemas/resources/EXRATE/write.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "linkedObjectID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "integrationType": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "URL": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "params": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "status": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "assignmentID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "projectID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "parentID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "options": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "noteText": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "commitDate": {
                        "$ref": "#/paths/~1task/post/parameters/4/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "userID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "linkedObjectID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "integrationType": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  }
                ]
              },
              "examples": {
                "putTASKActionacceptWork": {
                  "value": {}
                },
                "putTASKActionapproveApproval": {
                  "value": {}
                },
                "putTASKActionassign": {
                  "value": {}
                },
                "putTASKActionassignMultiple": {
                  "value": {}
                },
                "putTASKActionbulkCopy": {
                  "value": {}
                },
                "putTASKActionbulkMove": {
                  "value": {}
                },
                "putTASKActioncalculateDataExtension": {
                  "value": {}
                },
                "putTASKActioncalculateDataExtensions": {
                  "value": {}
                },
                "putTASKActionconvertToProject": {
                  "value": {}
                },
                "putTASKActionlinkExternalObject": {
                  "value": {}
                },
                "putTASKActionmarkDone": {
                  "value": {}
                },
                "putTASKActionmarkNotDone": {
                  "value": {}
                },
                "putTASKActionmove": {
                  "value": {}
                },
                "putTASKActionrecallApproval": {
                  "value": {}
                },
                "putTASKActionrejectApproval": {
                  "value": {}
                },
                "putTASKActionreplyToAssignment": {
                  "value": {}
                },
                "putTASKActionunacceptWork": {
                  "value": {}
                },
                "putTASKActionunassign": {
                  "value": {}
                },
                "putTASKActionunassignOccurrences": {
                  "value": {}
                },
                "putTASKActionunlinkExternalObject": {
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "class": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "putTASKActionacceptWork": {
                    "value": {}
                  },
                  "putTASKActionapproveApproval": {
                    "value": {}
                  },
                  "putTASKActionassign": {
                    "value": {}
                  },
                  "putTASKActionassignMultiple": {
                    "value": {}
                  },
                  "putTASKActionbulkCopy": {
                    "value": {}
                  },
                  "putTASKActionbulkMove": {
                    "value": {}
                  },
                  "putTASKActioncalculateDataExtension": {
                    "value": {}
                  },
                  "putTASKActioncalculateDataExtensions": {
                    "value": {}
                  },
                  "putTASKActionconvertToProject": {
                    "value": {}
                  },
                  "putTASKActionlinkExternalObject": {
                    "value": {}
                  },
                  "putTASKActionmarkDone": {
                    "value": {}
                  },
                  "putTASKActionmarkNotDone": {
                    "value": {}
                  },
                  "putTASKActionmove": {
                    "value": {}
                  },
                  "putTASKActionrecallApproval": {
                    "value": {}
                  },
                  "putTASKActionrejectApproval": {
                    "value": {}
                  },
                  "putTASKActionreplyToAssignment": {
                    "value": {}
                  },
                  "putTASKActionunacceptWork": {
                    "value": {}
                  },
                  "putTASKActionunassign": {
                    "value": {}
                  },
                  "putTASKActionunassignOccurrences": {
                    "value": {}
                  },
                  "putTASKActionunlinkExternalObject": {
                    "value": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/count": {
      "get": {
        "operationId": "countTASK",
        "summary": "Task Count",
        "description": "Counts the Task objects matching the given parameters",
        "tags": [
          "TASK",
          "count"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "updates",
            "description": "JSON object whose fields represent the fields of the resource to set",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1task/post/parameters/1/content/application~1json/schema",
                  "x-miro": "swagger/v10.0/schemas/resources/TASK/write.json"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "ID"
          },
          {
            "in": "query",
            "name": "URL",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "URL"
          },
          {
            "in": "query",
            "name": "actualCompletionDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Actual Completion Date"
          },
          {
            "in": "query",
            "name": "actualCost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Actual Cost"
          },
          {
            "in": "query",
            "name": "actualDuration",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Actual Duration"
          },
          {
            "in": "query",
            "name": "actualDurationMinutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Actual Duration Minutes"
          },
          {
            "in": "query",
            "name": "actualExpenseCost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Actual Expense Cost"
          },
          {
            "in": "query",
            "name": "actualLaborCost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Actual Labor Cost"
          },
          {
            "in": "query",
            "name": "actualRevenue",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Actual Revenue"
          },
          {
            "in": "query",
            "name": "actualStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Actual Start Date"
          },
          {
            "in": "query",
            "name": "actualWork",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Actual Hours"
          },
          {
            "in": "query",
            "name": "actualWorkRequired",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Actual Hours"
          },
          {
            "in": "query",
            "name": "approvalCompletionDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Approval Path Completion Date"
          },
          {
            "in": "query",
            "name": "approvalEstStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Approval Estimated Start Date"
          },
          {
            "in": "query",
            "name": "approvalPlannedStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Approval Planned Start Date"
          },
          {
            "in": "query",
            "name": "approvalProcessID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Approval Processes ID"
          },
          {
            "in": "query",
            "name": "approvalProjectedStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Approval Projected Start Date"
          },
          {
            "in": "query",
            "name": "approvalStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Approval Path Start Date"
          },
          {
            "in": "query",
            "name": "assignedToID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Assigned To ID"
          },
          {
            "in": "query",
            "name": "auditTypes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/22/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
            },
            "required": false,
            "description": "Audit Types"
          },
          {
            "in": "query",
            "name": "backlogOrder",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Order"
          },
          {
            "in": "query",
            "name": "billingAmount",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Cap or Fixed Amount"
          },
          {
            "in": "query",
            "name": "billingRecordID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Billing Record ID"
          },
          {
            "in": "query",
            "name": "canStart",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Can Start"
          },
          {
            "in": "query",
            "name": "categoryID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Category ID"
          },
          {
            "in": "query",
            "name": "color",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Color"
          },
          {
            "in": "query",
            "name": "commitDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Commit Date"
          },
          {
            "in": "query",
            "name": "completionPendingDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Completion Pending Date"
          },
          {
            "in": "query",
            "name": "condition",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/33/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.ConditionEnum.json"
            },
            "required": false,
            "description": "Condition"
          },
          {
            "in": "query",
            "name": "constraintDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Constraint Date"
          },
          {
            "in": "query",
            "name": "convertedOpTaskEntryDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "convertedOpTaskEntryDate"
          },
          {
            "in": "query",
            "name": "convertedOpTaskName",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "convertedOpTaskName"
          },
          {
            "in": "query",
            "name": "convertedOpTaskOriginatorID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "convertedOpTaskOriginatorID"
          },
          {
            "in": "query",
            "name": "costAmount",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Cost Amount"
          },
          {
            "in": "query",
            "name": "costType",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.CostTypeEnum.json"
            },
            "required": false,
            "description": "Cost Type"
          },
          {
            "in": "query",
            "name": "cpi",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Cost Performance Index"
          },
          {
            "in": "query",
            "name": "csi",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Cost Schedule Performance Index"
          },
          {
            "in": "query",
            "name": "currentApprovalStepID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Current Approval Stage ID"
          },
          {
            "in": "query",
            "name": "customerID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Customer ID"
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Description"
          },
          {
            "in": "query",
            "name": "duration",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Duration"
          },
          {
            "in": "query",
            "name": "durationMinutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Duration in Minutes"
          },
          {
            "in": "query",
            "name": "durationType",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/49/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationTypeEnum.json"
            },
            "required": false,
            "description": "Duration Type"
          },
          {
            "in": "query",
            "name": "durationUnit",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/50/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationUnitEnum.json"
            },
            "required": false,
            "description": "Duration Unit"
          },
          {
            "in": "query",
            "name": "eac",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "EAC"
          },
          {
            "in": "query",
            "name": "enteredByID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Entered By ID"
          },
          {
            "in": "query",
            "name": "entryDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Entry Date"
          },
          {
            "in": "query",
            "name": "estCompletionDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Estimated Due Date"
          },
          {
            "in": "query",
            "name": "estStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Estimated Start Date"
          },
          {
            "in": "query",
            "name": "extRefID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "External Reference ID"
          },
          {
            "in": "query",
            "name": "groupID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Group ID"
          },
          {
            "in": "query",
            "name": "handoffDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Handoff Date"
          },
          {
            "in": "query",
            "name": "hasDocuments",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Documents"
          },
          {
            "in": "query",
            "name": "hasExpenses",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Expenses"
          },
          {
            "in": "query",
            "name": "hasMessages",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Messages"
          },
          {
            "in": "query",
            "name": "hasNotes",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Notes"
          },
          {
            "in": "query",
            "name": "hasResolvables",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Resolvables"
          },
          {
            "in": "query",
            "name": "hasTimedNotifications",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Reminder Notifications"
          },
          {
            "in": "query",
            "name": "hoursPerPoint",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "hoursPerPoint"
          },
          {
            "in": "query",
            "name": "indent",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Indent"
          },
          {
            "in": "query",
            "name": "isAgile",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Agile"
          },
          {
            "in": "query",
            "name": "isCritical",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Is Critical"
          },
          {
            "in": "query",
            "name": "isDurationLocked",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Duration Locked"
          },
          {
            "in": "query",
            "name": "isLevelingExcluded",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Exclude from Leveling"
          },
          {
            "in": "query",
            "name": "isReady",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Ready"
          },
          {
            "in": "query",
            "name": "isWorkRequiredLocked",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Worked Locked"
          },
          {
            "in": "query",
            "name": "iterationID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Iteration ID"
          },
          {
            "in": "query",
            "name": "kanbanBoardID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Kanban Board ID"
          },
          {
            "in": "query",
            "name": "kanbanFlag",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/76/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.KanbanFlagEnum.json"
            },
            "required": false,
            "description": "Kanban Flag"
          },
          {
            "in": "query",
            "name": "lastConditionNoteID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Last Condition Note ID"
          },
          {
            "in": "query",
            "name": "lastNoteID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Last Note ID"
          },
          {
            "in": "query",
            "name": "lastUpdateDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Last Update Date"
          },
          {
            "in": "query",
            "name": "lastUpdatedByID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Last Updated By ID"
          },
          {
            "in": "query",
            "name": "levelingStartDelay",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Leveling Delay"
          },
          {
            "in": "query",
            "name": "levelingStartDelayMinutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "levelingStartDelayMinutes"
          },
          {
            "in": "query",
            "name": "milestoneID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Milestone ID"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Name"
          },
          {
            "in": "query",
            "name": "numberOfChildren",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Number of Children"
          },
          {
            "in": "query",
            "name": "numberOpenOpTasks",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Number of Open Issues"
          },
          {
            "in": "query",
            "name": "originalDuration",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Original Duration"
          },
          {
            "in": "query",
            "name": "originalWorkRequired",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Original Planned Hours"
          },
          {
            "in": "query",
            "name": "parentID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Parent ID"
          },
          {
            "in": "query",
            "name": "parentLag",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Parent Lag"
          },
          {
            "in": "query",
            "name": "parentLagType",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/92/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.LagTypeEnum.json"
            },
            "required": false,
            "description": "Parent Lag Type"
          },
          {
            "in": "query",
            "name": "pendingCalculation",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "pendingCalculation"
          },
          {
            "in": "query",
            "name": "pendingUpdateMethods",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false,
            "description": "pendingUpdateMethods"
          },
          {
            "in": "query",
            "name": "percentComplete",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Percent Complete"
          },
          {
            "in": "query",
            "name": "personal",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Personal"
          },
          {
            "in": "query",
            "name": "plannedCompletionDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Planned Completion Date"
          },
          {
            "in": "query",
            "name": "plannedCost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Planned Cost"
          },
          {
            "in": "query",
            "name": "plannedDuration",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Planned Duration"
          },
          {
            "in": "query",
            "name": "plannedDurationMinutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Planned Duration Minutes"
          },
          {
            "in": "query",
            "name": "plannedExpenseCost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Planned Expense Cost"
          },
          {
            "in": "query",
            "name": "plannedLaborCost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Planned Labor Cost"
          },
          {
            "in": "query",
            "name": "plannedRevenue",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Planned Revenue"
          },
          {
            "in": "query",
            "name": "plannedStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Planned Start Date"
          },
          {
            "in": "query",
            "name": "previousStatus",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/106/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
            },
            "required": false,
            "description": "Previous Status"
          },
          {
            "in": "query",
            "name": "priority",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/107/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
            },
            "required": false,
            "description": "Priority"
          },
          {
            "in": "query",
            "name": "progressStatus",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/109/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.ProgressStatusEnum.json"
            },
            "required": false,
            "description": "Progress Status"
          },
          {
            "in": "query",
            "name": "projectID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Project ID"
          },
          {
            "in": "query",
            "name": "projectedCompletionDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Projected Completion Date"
          },
          {
            "in": "query",
            "name": "projectedDurationMinutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Projected Duration Minutes"
          },
          {
            "in": "query",
            "name": "projectedStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Projected Start Date"
          },
          {
            "in": "query",
            "name": "recurrenceNumber",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Recurrence Number"
          },
          {
            "in": "query",
            "name": "recurrenceRuleID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Recurrence Rule ID"
          },
          {
            "in": "query",
            "name": "referenceNumber",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Reference Number"
          },
          {
            "in": "query",
            "name": "rejectionIssueID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Rejection Issue ID"
          },
          {
            "in": "query",
            "name": "remainingDurationMinutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Remaining Duration Minutes"
          },
          {
            "in": "query",
            "name": "reservedTimeID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Time Off ID"
          },
          {
            "in": "query",
            "name": "resourceScope",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/120/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskResourceScopeEnum.json"
            },
            "required": false,
            "description": "Resource Scope"
          },
          {
            "in": "query",
            "name": "revenueType",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/121/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.RevenueTypeEnum.json"
            },
            "required": false,
            "description": "Revenue Type"
          },
          {
            "in": "query",
            "name": "roleID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Role ID"
          },
          {
            "in": "query",
            "name": "securityRootID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "securityRootID"
          },
          {
            "in": "query",
            "name": "securityRootObjCode",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "securityRootObjCode"
          },
          {
            "in": "query",
            "name": "slackDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/125/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/date.json"
            },
            "required": false,
            "description": "Slack Date"
          },
          {
            "in": "query",
            "name": "spi",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Schedule Performance Index"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/106/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
            },
            "required": false,
            "description": "Status"
          },
          {
            "in": "query",
            "name": "statusUpdate",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Status Update"
          },
          {
            "in": "query",
            "name": "submittedByID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Submitted By ID"
          },
          {
            "in": "query",
            "name": "taskConstraint",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/131/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskConstraintEnum.json"
            },
            "required": false,
            "description": "Task Constraint"
          },
          {
            "in": "query",
            "name": "taskNumber",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Task Number"
          },
          {
            "in": "query",
            "name": "teamID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Team ID"
          },
          {
            "in": "query",
            "name": "templateTaskID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Template Task ID"
          },
          {
            "in": "query",
            "name": "trackingMode",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/135/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskTrackingModeEnum.json"
            },
            "required": false,
            "description": "Tracking Mode"
          },
          {
            "in": "query",
            "name": "version",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Version"
          },
          {
            "in": "query",
            "name": "wbs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Work Breakdown Structure"
          },
          {
            "in": "query",
            "name": "work",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Work"
          },
          {
            "in": "query",
            "name": "workRequired",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Planned Hours"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "$ref": "#/paths/~1task/post/parameters/7/schema",
                          "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                        }
                      }
                    }
                  }
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/{ID}": {
      "delete": {
        "operationId": "deleteTASKByID",
        "summary": "Task Delete",
        "description": "Deletes the Task object having {ID}",
        "tags": [
          "TASK",
          "delete"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "success": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {
                  "data": {
                    "success": true
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "editTASKByIDORputTASKActionacceptWorkWithIdORputTASKActionapproveApprovalWithIdORputTASKActionassignWithIdORputTASKActionassignMultipleWithIdORputTASKActionbulkCopyWithIdORputTASKActionbulkMoveWithIdORputTASKActioncalculateDataExtensionWithIdORputTASKActioncalculateDataExtensionsWithIdORputTASKActionconvertToProjectWithIdORputTASKActionlinkExternalObjectWithIdORputTASKActionmarkDoneWithIdORputTASKActionmarkNotDoneWithIdORputTASKActionmoveWithIdORputTASKActionrecallApprovalWithIdORputTASKActionrejectApprovalWithIdORputTASKActionreplyToAssignmentWithIdORputTASKActionunacceptWorkWithIdORputTASKActionunassignWithIdORputTASKActionunassignOccurrencesWithIdORputTASKActionunlinkExternalObjectWithId",
        "summary": "Task Edit OR Task acceptWork OR Task approveApproval OR Task assign OR Task assignMultiple OR Task bulkCopy OR Task bulkMove OR Task calculateDataExtension OR Task calculateDataExtensions OR Task convertToProject OR Task linkExternalObject OR Task markDone OR Task markNotDone OR Task move OR Task recallApproval OR Task rejectApproval OR Task replyToAssignment OR Task unacceptWork OR Task unassign OR Task unassignOccurrences OR Task unlinkExternalObject",
        "description": "Modifies the Task having {ID}\nOR\nPerforms the acceptWork action on the Task object\nOR\nPerforms the approveApproval action on the Task object\nOR\nPerforms the assign action on the Task object\nOR\nPerforms the assignMultiple action on the Task object\nOR\nPerforms the bulkCopy action on the Task object\nOR\nPerforms the bulkMove action on the Task object\nOR\nPerforms the calculateDataExtension action on the Task object\nOR\nPerforms the calculateDataExtensions action on the Task object\nOR\nPerforms the convertToProject action on the Task object\nOR\nPerforms the linkExternalObject action on the Task object\nOR\nPerforms the markDone action on the Task object\nOR\nPerforms the markNotDone action on the Task object\nOR\nPerforms the move action on the Task object\nOR\nPerforms the recallApproval action on the Task object\nOR\nPerforms the rejectApproval action on the Task object\nOR\nPerforms the replyToAssignment action on the Task object\nOR\nPerforms the unacceptWork action on the Task object\nOR\nPerforms the unassign action on the Task object\nOR\nPerforms the unassignOccurrences action on the Task object\nOR\nPerforms the unlinkExternalObject action on the Task object",
        "tags": [
          "TASK",
          "edit",
          "action"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/142/schema",
              "x-miro": "swagger/v10.0/schemas/resourceID.yml"
            },
            "required": true,
            "description": "ID of the object"
          },
          {
            "$ref": "#/paths/~1task/post/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/fields.yml"
          },
          {
            "in": "query",
            "name": "updates",
            "description": "JSON object whose fields represent the fields of the resource to set",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1task/post/parameters/1/content/application~1json/schema",
                  "x-miro": "swagger/v10.0/schemas/resources/TASK/write.json"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "ID",
            "description": "ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "URL",
            "description": "URL",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "actualCompletionDate",
            "description": "Actual Completion Date",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "actualCost",
            "description": "Actual Cost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "actualDuration",
            "description": "Actual Duration",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "actualDurationMinutes",
            "description": "Actual Duration Minutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "actualExpenseCost",
            "description": "Actual Expense Cost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "actualLaborCost",
            "description": "Actual Labor Cost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "actualRevenue",
            "description": "Actual Revenue",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "actualStartDate",
            "description": "Actual Start Date",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "actualWork",
            "description": "Actual Hours",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "actualWorkRequired",
            "description": "Actual Hours",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "approvalCompletionDate",
            "description": "Approval Path Completion Date",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "approvalEstStartDate",
            "description": "Approval Estimated Start Date",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "approvalPlannedStartDate",
            "description": "Approval Planned Start Date",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "approvalProcessID",
            "description": "Approval Processes ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "approvalProjectedStartDate",
            "description": "Approval Projected Start Date",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "approvalStartDate",
            "description": "Approval Path Start Date",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "assignedToID",
            "description": "Assigned To ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "auditNote",
            "description": "auditNote",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "auditTypes",
            "description": "Audit Types",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/22/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "auditUserIDs",
            "description": "auditUserIDs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "backlogOrder",
            "description": "Order",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "backlogParent",
            "description": "Parent",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "billingAmount",
            "description": "Cap or Fixed Amount",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "billingRecordID",
            "description": "Billing Record ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "canStart",
            "description": "Can Start",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "categoryID",
            "description": "Category ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "color",
            "description": "Color",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "commitDate",
            "description": "Commit Date\nOR\ncommitDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "completionPendingDate",
            "description": "Completion Pending Date",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "condition",
            "description": "Condition",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/33/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.ConditionEnum.json"
            }
          },
          {
            "in": "query",
            "name": "constraintDate",
            "description": "Constraint Date",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "convertedOpTaskEntryDate",
            "description": "convertedOpTaskEntryDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "convertedOpTaskName",
            "description": "convertedOpTaskName",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "convertedOpTaskOriginatorID",
            "description": "convertedOpTaskOriginatorID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "costAmount",
            "description": "Cost Amount",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "costType",
            "description": "Cost Type",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.CostTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "cpi",
            "description": "Cost Performance Index",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "csi",
            "description": "Cost Schedule Performance Index",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "currentApprovalStepID",
            "description": "Current Approval Stage ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "customerID",
            "description": "Customer ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "daysLate",
            "description": "Days Late",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "duration",
            "description": "Duration",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "durationExpression",
            "description": "durationExpression",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "durationMinutes",
            "description": "Duration in Minutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "durationType",
            "description": "Duration Type",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/49/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "durationUnit",
            "description": "Duration Unit",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/50/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationUnitEnum.json"
            }
          },
          {
            "in": "query",
            "name": "eac",
            "description": "EAC",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "enteredByID",
            "description": "Entered By ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "entryDate",
            "description": "Entry Date",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "estCompletionDate",
            "description": "Estimated Due Date",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "estStartDate",
            "description": "Estimated Start Date",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "estimate",
            "description": "Estimate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "extRefID",
            "description": "External Reference ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "groupID",
            "description": "Group ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "handoffDate",
            "description": "Handoff Date",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "hasDocuments",
            "description": "Has Documents",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "hasExpenses",
            "description": "Has Expenses",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "hasMessages",
            "description": "Has Messages",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "hasNotes",
            "description": "Has Notes",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "hasResolvables",
            "description": "Has Resolvables",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "hasTimedNotifications",
            "description": "Has Reminder Notifications",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "hoursPerPoint",
            "description": "hoursPerPoint",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "indent",
            "description": "Indent",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "isAgile",
            "description": "Agile",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "isCritical",
            "description": "Is Critical",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "isDurationLocked",
            "description": "Duration Locked",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "isLevelingExcluded",
            "description": "Exclude from Leveling",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "isReady",
            "description": "Ready",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "isWorkRequiredLocked",
            "description": "Worked Locked",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "iterationID",
            "description": "Iteration ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "kanbanBoardID",
            "description": "Kanban Board ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "kanbanFlag",
            "description": "Kanban Flag",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/76/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.KanbanFlagEnum.json"
            }
          },
          {
            "in": "query",
            "name": "lastConditionNoteID",
            "description": "Last Condition Note ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "lastNoteID",
            "description": "Last Note ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "lastUpdateDate",
            "description": "Last Update Date",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "lastUpdatedByID",
            "description": "Last Updated By ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "levelingStartDelay",
            "description": "Leveling Delay",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "levelingStartDelayExpression",
            "description": "levelingStartDelayExpression",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "levelingStartDelayMinutes",
            "description": "levelingStartDelayMinutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "milestoneID",
            "description": "Milestone ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "numberOfChildren",
            "description": "Number of Children",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "numberOpenOpTasks",
            "description": "Number of Open Issues",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "originalDuration",
            "description": "Original Duration",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "originalWorkRequired",
            "description": "Original Planned Hours",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "parentID",
            "description": "Parent ID\nOR\nparentID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "parentLag",
            "description": "Parent Lag",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "parentLagType",
            "description": "Parent Lag Type",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/92/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.LagTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "pendingCalculation",
            "description": "pendingCalculation",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "pendingUpdateMethods",
            "description": "pendingUpdateMethods",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "percentComplete",
            "description": "Percent Complete",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "personal",
            "description": "Personal",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "plannedCompletionDate",
            "description": "Planned Completion Date",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "plannedCost",
            "description": "Planned Cost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "plannedDuration",
            "description": "Planned Duration",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "plannedDurationMinutes",
            "description": "Planned Duration Minutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "plannedExpenseCost",
            "description": "Planned Expense Cost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "plannedLaborCost",
            "description": "Planned Labor Cost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "plannedRevenue",
            "description": "Planned Revenue",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "plannedStartDate",
            "description": "Planned Start Date",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "predecessorExpression",
            "description": "predecessorExpression",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "previousStatus",
            "description": "Previous Status",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/106/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "priority",
            "description": "Priority",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/107/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
            }
          },
          {
            "in": "query",
            "name": "priorityColor",
            "description": "priorityColor",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "progressStatus",
            "description": "Progress Status",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/109/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.ProgressStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "projectID",
            "description": "Project ID\nOR\nprojectID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "projectedCompletionDate",
            "description": "Projected Completion Date",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "projectedDurationMinutes",
            "description": "Projected Duration Minutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "projectedStartDate",
            "description": "Projected Start Date",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "recurrenceNumber",
            "description": "Recurrence Number",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "recurrenceRuleID",
            "description": "Recurrence Rule ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "referenceNumber",
            "description": "Reference Number",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "rejectionIssueID",
            "description": "Rejection Issue ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "remainingDurationMinutes",
            "description": "Remaining Duration Minutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "reservedTimeID",
            "description": "Time Off ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "resourceScope",
            "description": "Resource Scope",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/120/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskResourceScopeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "revenueType",
            "description": "Revenue Type",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/121/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.RevenueTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "roleID",
            "description": "Role ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "securityRootID",
            "description": "securityRootID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "securityRootObjCode",
            "description": "securityRootObjCode",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "slackDate",
            "description": "Slack Date",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/125/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/date.json"
            }
          },
          {
            "in": "query",
            "name": "spi",
            "description": "Schedule Performance Index",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "Status\nOR\nstatus",
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/paths/~1task/post/parameters/106/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
                },
                {
                  "$ref": "#/paths/~1task/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                }
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "statusEquatesWith",
            "description": "Status Equates With",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "statusUpdate",
            "description": "Status Update",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "submittedByID",
            "description": "Submitted By ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "taskConstraint",
            "description": "Task Constraint",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/131/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskConstraintEnum.json"
            }
          },
          {
            "in": "query",
            "name": "taskNumber",
            "description": "Task Number",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "teamID",
            "description": "Team ID\nOR\nteamID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "templateTaskID",
            "description": "Template Task ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "trackingMode",
            "description": "Tracking Mode",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/135/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskTrackingModeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "version",
            "description": "Version",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "wbs",
            "description": "Work Breakdown Structure",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "work",
            "description": "Work",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "workRequired",
            "description": "Planned Hours",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "workRequiredExpression",
            "description": "workRequiredExpression",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "workUnit",
            "description": "workUnit",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/50/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationUnitEnum.json"
            }
          },
          {
            "in": "query",
            "name": "action",
            "description": "The action to perform on the Task",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "userID",
            "description": "userID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "username",
            "description": "username",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "password",
            "description": "password",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sendNoteAsEmail",
            "description": "sendNoteAsEmail",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "objID",
            "description": "objID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "objCode",
            "description": "objCode",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "userIDs",
            "description": "userIDs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "roleIDs",
            "description": "roleIDs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "taskIDs",
            "description": "taskIDs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "options",
            "description": "options",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ids",
            "description": "ids",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "project",
            "description": "project",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/18/schema",
              "x-miro": "swagger/v10.0/schemas/resources/PROJ/write.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "exchangeRate",
            "description": "exchangeRate",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/19/schema",
              "x-miro": "swagger/v10.0/schemas/resources/EXRATE/write.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "linkedObjectID",
            "description": "linkedObjectID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "integrationType",
            "description": "integrationType",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "params",
            "description": "params",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "assignmentID",
            "description": "assignmentID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "noteText",
            "description": "noteText",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          }
        ],
        "requestBody": {
          "description": "",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/paths/~1task/post/parameters/1/content/application~1json/schema",
                    "x-miro": "swagger/v10.0/schemas/resources/TASK/write.json"
                  },
                  {
                    "type": "object",
                    "properties": {}
                  },
                  {
                    "type": "object",
                    "properties": {
                      "userID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "username": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "password": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "auditNote": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "auditUserIDs": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "sendNoteAsEmail": {
                        "$ref": "#/paths/~1task/put/parameters/7/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "objCode": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "userIDs": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "roleIDs": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "teamID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "taskIDs": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "projectID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "parentID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "options": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "ids": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "project": {
                        "$ref": "#/paths/~1task/put/parameters/18/schema",
                        "x-miro": "swagger/v10.0/schemas/resources/PROJ/write.json"
                      },
                      "exchangeRate": {
                        "$ref": "#/paths/~1task/put/parameters/19/schema",
                        "x-miro": "swagger/v10.0/schemas/resources/EXRATE/write.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "linkedObjectID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "integrationType": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "URL": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "params": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "status": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "assignmentID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "projectID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "parentID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "options": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "noteText": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "commitDate": {
                        "$ref": "#/paths/~1task/post/parameters/4/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "userID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "linkedObjectID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "integrationType": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  }
                ]
              },
              "examples": {
                "editTASKByID": {
                  "value": {}
                },
                "putTASKActionacceptWorkWithId": {
                  "value": {}
                },
                "putTASKActionapproveApprovalWithId": {
                  "value": {}
                },
                "putTASKActionassignWithId": {
                  "value": {}
                },
                "putTASKActionassignMultipleWithId": {
                  "value": {}
                },
                "putTASKActionbulkCopyWithId": {
                  "value": {}
                },
                "putTASKActionbulkMoveWithId": {
                  "value": {}
                },
                "putTASKActioncalculateDataExtensionWithId": {
                  "value": {}
                },
                "putTASKActioncalculateDataExtensionsWithId": {
                  "value": {}
                },
                "putTASKActionconvertToProjectWithId": {
                  "value": {}
                },
                "putTASKActionlinkExternalObjectWithId": {
                  "value": {}
                },
                "putTASKActionmarkDoneWithId": {
                  "value": {}
                },
                "putTASKActionmarkNotDoneWithId": {
                  "value": {}
                },
                "putTASKActionmoveWithId": {
                  "value": {}
                },
                "putTASKActionrecallApprovalWithId": {
                  "value": {}
                },
                "putTASKActionrejectApprovalWithId": {
                  "value": {}
                },
                "putTASKActionreplyToAssignmentWithId": {
                  "value": {}
                },
                "putTASKActionunacceptWorkWithId": {
                  "value": {}
                },
                "putTASKActionunassignWithId": {
                  "value": {}
                },
                "putTASKActionunassignOccurrencesWithId": {
                  "value": {}
                },
                "putTASKActionunlinkExternalObjectWithId": {
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/paths/~1task~1report/get/parameters/1/content/application~1json/schema",
                          "x-miro": "swagger/v10.0/schemas/resources/TASK/read.json"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "editTASKByID": {
                    "value": {}
                  },
                  "putTASKActionacceptWorkWithId": {
                    "value": {}
                  },
                  "putTASKActionapproveApprovalWithId": {
                    "value": {}
                  },
                  "putTASKActionassignWithId": {
                    "value": {}
                  },
                  "putTASKActionassignMultipleWithId": {
                    "value": {}
                  },
                  "putTASKActionbulkCopyWithId": {
                    "value": {}
                  },
                  "putTASKActionbulkMoveWithId": {
                    "value": {}
                  },
                  "putTASKActioncalculateDataExtensionWithId": {
                    "value": {}
                  },
                  "putTASKActioncalculateDataExtensionsWithId": {
                    "value": {}
                  },
                  "putTASKActionconvertToProjectWithId": {
                    "value": {}
                  },
                  "putTASKActionlinkExternalObjectWithId": {
                    "value": {}
                  },
                  "putTASKActionmarkDoneWithId": {
                    "value": {}
                  },
                  "putTASKActionmarkNotDoneWithId": {
                    "value": {}
                  },
                  "putTASKActionmoveWithId": {
                    "value": {}
                  },
                  "putTASKActionrecallApprovalWithId": {
                    "value": {}
                  },
                  "putTASKActionrejectApprovalWithId": {
                    "value": {}
                  },
                  "putTASKActionreplyToAssignmentWithId": {
                    "value": {}
                  },
                  "putTASKActionunacceptWorkWithId": {
                    "value": {}
                  },
                  "putTASKActionunassignWithId": {
                    "value": {}
                  },
                  "putTASKActionunassignOccurrencesWithId": {
                    "value": {}
                  },
                  "putTASKActionunlinkExternalObjectWithId": {
                    "value": {}
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getTASKByID",
        "summary": "Task Search",
        "description": "Searches through the Task objects",
        "tags": [
          "TASK",
          "search"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "$ref": "#/paths/~1task/post/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/fields.yml"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/paths/~1task~1report/get/parameters/1/content/application~1json/schema",
                          "x-miro": "swagger/v10.0/schemas/resources/TASK/read.json"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/report": {
      "get": {
        "operationId": "getTASKReport",
        "summary": "Task Report",
        "description": "Returns an aggregate of information about Task objects",
        "tags": [
          "TASK",
          "report"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "updates",
            "description": "JSON object whose fields represent the fields of the resource to set",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1task/post/parameters/1/content/application~1json/schema",
                  "x-miro": "swagger/v10.0/schemas/resources/TASK/write.json"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "filters",
            "description": "JSON object whose fields represent the fields of the resource to filter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "URL": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "accessorIDs": {
                      "$ref": "#/paths/~1task/put/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                    },
                    "actualCompletionDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "actualCost": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "actualDuration": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "actualDurationMinutes": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "actualExpenseCost": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "actualLaborCost": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "actualRevenue": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "actualStartDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "actualWork": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "actualWorkRequired": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "approvalCompletionDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "approvalEstStartDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "approvalPlannedStartDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "approvalPlannedStartDay": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "approvalProcessID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "approvalProjectedStartDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "approvalStartDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "approversString": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "assignedToID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "assignmentsListString": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "auditTypes": {
                      "$ref": "#/paths/~1task/post/parameters/22/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
                    },
                    "backlogOrder": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "backlogParent": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "billingAmount": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "billingRecordID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "canStart": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "categoryID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "color": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "commitDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "commitDateRange": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "completionPendingDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "condition": {
                      "$ref": "#/paths/~1task/post/parameters/33/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.ConditionEnum.json"
                    },
                    "constraintDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "convertedOpTaskEntryDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "convertedOpTaskName": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "convertedOpTaskOriginatorID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "costAmount": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "costType": {
                      "$ref": "#/paths/~1task/post/parameters/39/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.CostTypeEnum.json"
                    },
                    "cpi": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "csi": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "currentApprovalStepID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "customerID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "daysLate": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "description": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "dueDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "duration": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "durationExpression": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "durationMinutes": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "durationType": {
                      "$ref": "#/paths/~1task/post/parameters/49/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationTypeEnum.json"
                    },
                    "durationUnit": {
                      "$ref": "#/paths/~1task/post/parameters/50/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationUnitEnum.json"
                    },
                    "eac": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "enteredByID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "entryDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "estCompletionDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "estStartDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "estimate": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "extRefID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "groupID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "handoffDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "hasCompletionConstraint": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hasDocuments": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hasExpenses": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hasMessages": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hasNotes": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hasResolvables": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hasStartConstraint": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hasTimedNotifications": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hoursPerPoint": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "indent": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "isAgile": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "isCritical": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "isDurationLocked": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "isLevelingExcluded": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "isReady": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "isStatusComplete": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "isWorkRequiredLocked": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "iterationID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "kanbanBoardID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "kanbanFlag": {
                      "$ref": "#/paths/~1task/post/parameters/76/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.KanbanFlagEnum.json"
                    },
                    "lastConditionNoteID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "lastNoteID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "lastUpdateDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "lastUpdatedByID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "levelingStartDelay": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "levelingStartDelayExpression": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "levelingStartDelayMinutes": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "milestoneID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "name": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "numberOfChildren": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "numberOpenOpTasks": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "originalDuration": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "originalWorkRequired": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "parentID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "parentLag": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "parentLagType": {
                      "$ref": "#/paths/~1task/post/parameters/92/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.LagTypeEnum.json"
                    },
                    "pendingCalculation": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "pendingPredecessors": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "pendingUpdateMethods": {
                      "$ref": "#/paths/~1task/put/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                    },
                    "percentComplete": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "personal": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "plannedCompletionDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "plannedCost": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "plannedDateAlignment": {
                      "type": "number",
                      "enum": [
                        0,
                        1,
                        2,
                        3
                      ]
                    },
                    "plannedDuration": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "plannedDurationMinutes": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "plannedExpenseCost": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "plannedHoursAlignment": {
                      "type": "number",
                      "enum": [
                        0,
                        1,
                        2,
                        3
                      ]
                    },
                    "plannedLaborCost": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "plannedRevenue": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "plannedStartDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "previousStatus": {
                      "$ref": "#/paths/~1task/post/parameters/106/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
                    },
                    "priority": {
                      "$ref": "#/paths/~1task/post/parameters/107/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
                    },
                    "priorityColor": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "progressStatus": {
                      "$ref": "#/paths/~1task/post/parameters/109/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.ProgressStatusEnum.json"
                    },
                    "projectID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "projectedCompletionDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "projectedDurationMinutes": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "projectedStartDate": {
                      "$ref": "#/paths/~1task/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "recurrenceNumber": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "recurrenceRuleID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "referenceNumber": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "rejectionIssueID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "remainingDurationMinutes": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "reservedTimeID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "resourceScope": {
                      "$ref": "#/paths/~1task/post/parameters/120/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskResourceScopeEnum.json"
                    },
                    "revenueType": {
                      "$ref": "#/paths/~1task/post/parameters/121/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.RevenueTypeEnum.json"
                    },
                    "roleID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "securityRootID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "securityRootObjCode": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "showCommitDate": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "showCondition": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "showStatus": {
                      "$ref": "#/paths/~1task/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "slackDate": {
                      "$ref": "#/paths/~1task/post/parameters/125/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/date.json"
                    },
                    "spi": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "status": {
                      "$ref": "#/paths/~1task/post/parameters/106/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
                    },
                    "statusEquatesWith": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "statusUpdate": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "submittedByID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "taskConstraint": {
                      "$ref": "#/paths/~1task/post/parameters/131/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskConstraintEnum.json"
                    },
                    "taskNumber": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "taskNumberPredecessorString": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "teamID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "templateTaskID": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "trackingMode": {
                      "$ref": "#/paths/~1task/post/parameters/135/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskTrackingModeEnum.json"
                    },
                    "version": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "wbs": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "work": {
                      "$ref": "#/paths/~1task/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "workPerDayList": {
                      "$ref": "#/paths/~1task/put/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                    },
                    "workRequired": {
                      "$ref": "#/paths/~1task/post/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "workRequiredExpression": {
                      "$ref": "#/paths/~1task/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    }
                  }
                }
              }
            }
          },
          {
            "in": "query",
            "name": "ID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for ID"
          },
          {
            "in": "query",
            "name": "URL",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for URL"
          },
          {
            "in": "query",
            "name": "actualCompletionDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Actual Completion Date"
          },
          {
            "in": "query",
            "name": "actualCost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Actual Cost"
          },
          {
            "in": "query",
            "name": "actualDuration",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Actual Duration"
          },
          {
            "in": "query",
            "name": "actualDurationMinutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Actual Duration Minutes"
          },
          {
            "in": "query",
            "name": "actualExpenseCost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Actual Expense Cost"
          },
          {
            "in": "query",
            "name": "actualLaborCost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Actual Labor Cost"
          },
          {
            "in": "query",
            "name": "actualRevenue",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Actual Revenue"
          },
          {
            "in": "query",
            "name": "actualStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Actual Start Date"
          },
          {
            "in": "query",
            "name": "actualWork",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Actual Hours"
          },
          {
            "in": "query",
            "name": "actualWorkRequired",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Actual Hours"
          },
          {
            "in": "query",
            "name": "approvalCompletionDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Approval Path Completion Date"
          },
          {
            "in": "query",
            "name": "approvalEstStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Approval Estimated Start Date"
          },
          {
            "in": "query",
            "name": "approvalPlannedStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Approval Planned Start Date"
          },
          {
            "in": "query",
            "name": "approvalProcessID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Approval Processes ID"
          },
          {
            "in": "query",
            "name": "approvalProjectedStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Approval Projected Start Date"
          },
          {
            "in": "query",
            "name": "approvalStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Approval Path Start Date"
          },
          {
            "in": "query",
            "name": "assignedToID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Assigned To ID"
          },
          {
            "in": "query",
            "name": "auditTypes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/22/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Audit Types"
          },
          {
            "in": "query",
            "name": "backlogOrder",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Order"
          },
          {
            "in": "query",
            "name": "billingAmount",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Cap or Fixed Amount"
          },
          {
            "in": "query",
            "name": "billingRecordID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Billing Record ID"
          },
          {
            "in": "query",
            "name": "canStart",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Can Start"
          },
          {
            "in": "query",
            "name": "categoryID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Category ID"
          },
          {
            "in": "query",
            "name": "color",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Color"
          },
          {
            "in": "query",
            "name": "commitDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Commit Date"
          },
          {
            "in": "query",
            "name": "completionPendingDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Completion Pending Date"
          },
          {
            "in": "query",
            "name": "condition",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/33/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.ConditionEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Condition"
          },
          {
            "in": "query",
            "name": "constraintDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Constraint Date"
          },
          {
            "in": "query",
            "name": "convertedOpTaskEntryDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for convertedOpTaskEntryDate"
          },
          {
            "in": "query",
            "name": "convertedOpTaskName",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for convertedOpTaskName"
          },
          {
            "in": "query",
            "name": "convertedOpTaskOriginatorID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for convertedOpTaskOriginatorID"
          },
          {
            "in": "query",
            "name": "costAmount",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Cost Amount"
          },
          {
            "in": "query",
            "name": "costType",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.CostTypeEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Cost Type"
          },
          {
            "in": "query",
            "name": "cpi",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Cost Performance Index"
          },
          {
            "in": "query",
            "name": "csi",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Cost Schedule Performance Index"
          },
          {
            "in": "query",
            "name": "currentApprovalStepID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Current Approval Stage ID"
          },
          {
            "in": "query",
            "name": "customerID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Customer ID"
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Description"
          },
          {
            "in": "query",
            "name": "duration",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Duration"
          },
          {
            "in": "query",
            "name": "durationMinutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Duration in Minutes"
          },
          {
            "in": "query",
            "name": "durationType",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/49/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationTypeEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Duration Type"
          },
          {
            "in": "query",
            "name": "durationUnit",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/50/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationUnitEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Duration Unit"
          },
          {
            "in": "query",
            "name": "eac",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for EAC"
          },
          {
            "in": "query",
            "name": "enteredByID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Entered By ID"
          },
          {
            "in": "query",
            "name": "entryDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Entry Date"
          },
          {
            "in": "query",
            "name": "estCompletionDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Estimated Due Date"
          },
          {
            "in": "query",
            "name": "estStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Estimated Start Date"
          },
          {
            "in": "query",
            "name": "extRefID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for External Reference ID"
          },
          {
            "in": "query",
            "name": "groupID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Group ID"
          },
          {
            "in": "query",
            "name": "handoffDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Handoff Date"
          },
          {
            "in": "query",
            "name": "hasDocuments",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Has Documents"
          },
          {
            "in": "query",
            "name": "hasExpenses",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Has Expenses"
          },
          {
            "in": "query",
            "name": "hasMessages",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Has Messages"
          },
          {
            "in": "query",
            "name": "hasNotes",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Has Notes"
          },
          {
            "in": "query",
            "name": "hasResolvables",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Has Resolvables"
          },
          {
            "in": "query",
            "name": "hasTimedNotifications",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Has Reminder Notifications"
          },
          {
            "in": "query",
            "name": "hoursPerPoint",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for hoursPerPoint"
          },
          {
            "in": "query",
            "name": "indent",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Indent"
          },
          {
            "in": "query",
            "name": "isAgile",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Agile"
          },
          {
            "in": "query",
            "name": "isCritical",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Is Critical"
          },
          {
            "in": "query",
            "name": "isDurationLocked",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Duration Locked"
          },
          {
            "in": "query",
            "name": "isLevelingExcluded",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Exclude from Leveling"
          },
          {
            "in": "query",
            "name": "isReady",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Ready"
          },
          {
            "in": "query",
            "name": "isWorkRequiredLocked",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Worked Locked"
          },
          {
            "in": "query",
            "name": "iterationID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Iteration ID"
          },
          {
            "in": "query",
            "name": "kanbanBoardID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Kanban Board ID"
          },
          {
            "in": "query",
            "name": "kanbanFlag",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/76/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.KanbanFlagEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Kanban Flag"
          },
          {
            "in": "query",
            "name": "lastConditionNoteID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Last Condition Note ID"
          },
          {
            "in": "query",
            "name": "lastNoteID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Last Note ID"
          },
          {
            "in": "query",
            "name": "lastUpdateDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Last Update Date"
          },
          {
            "in": "query",
            "name": "lastUpdatedByID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Last Updated By ID"
          },
          {
            "in": "query",
            "name": "levelingStartDelay",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Leveling Delay"
          },
          {
            "in": "query",
            "name": "levelingStartDelayMinutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for levelingStartDelayMinutes"
          },
          {
            "in": "query",
            "name": "milestoneID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Milestone ID"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Name"
          },
          {
            "in": "query",
            "name": "numberOfChildren",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Number of Children"
          },
          {
            "in": "query",
            "name": "numberOpenOpTasks",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Number of Open Issues"
          },
          {
            "in": "query",
            "name": "originalDuration",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Original Duration"
          },
          {
            "in": "query",
            "name": "originalWorkRequired",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Original Planned Hours"
          },
          {
            "in": "query",
            "name": "parentID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Parent ID"
          },
          {
            "in": "query",
            "name": "parentLag",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Parent Lag"
          },
          {
            "in": "query",
            "name": "parentLagType",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/92/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.LagTypeEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Parent Lag Type"
          },
          {
            "in": "query",
            "name": "pendingCalculation",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for pendingCalculation"
          },
          {
            "in": "query",
            "name": "pendingUpdateMethods",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false,
            "description": "filter results with the given field value for pendingUpdateMethods"
          },
          {
            "in": "query",
            "name": "percentComplete",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Percent Complete"
          },
          {
            "in": "query",
            "name": "personal",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Personal"
          },
          {
            "in": "query",
            "name": "plannedCompletionDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Planned Completion Date"
          },
          {
            "in": "query",
            "name": "plannedCost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Planned Cost"
          },
          {
            "in": "query",
            "name": "plannedDuration",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Planned Duration"
          },
          {
            "in": "query",
            "name": "plannedDurationMinutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Planned Duration Minutes"
          },
          {
            "in": "query",
            "name": "plannedExpenseCost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Planned Expense Cost"
          },
          {
            "in": "query",
            "name": "plannedLaborCost",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Planned Labor Cost"
          },
          {
            "in": "query",
            "name": "plannedRevenue",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Planned Revenue"
          },
          {
            "in": "query",
            "name": "plannedStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Planned Start Date"
          },
          {
            "in": "query",
            "name": "previousStatus",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/106/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Previous Status"
          },
          {
            "in": "query",
            "name": "priority",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/107/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Priority"
          },
          {
            "in": "query",
            "name": "progressStatus",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/109/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.ProgressStatusEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Progress Status"
          },
          {
            "in": "query",
            "name": "projectID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Project ID"
          },
          {
            "in": "query",
            "name": "projectedCompletionDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Projected Completion Date"
          },
          {
            "in": "query",
            "name": "projectedDurationMinutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Projected Duration Minutes"
          },
          {
            "in": "query",
            "name": "projectedStartDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Projected Start Date"
          },
          {
            "in": "query",
            "name": "recurrenceNumber",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Recurrence Number"
          },
          {
            "in": "query",
            "name": "recurrenceRuleID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Recurrence Rule ID"
          },
          {
            "in": "query",
            "name": "referenceNumber",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Reference Number"
          },
          {
            "in": "query",
            "name": "rejectionIssueID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Rejection Issue ID"
          },
          {
            "in": "query",
            "name": "remainingDurationMinutes",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Remaining Duration Minutes"
          },
          {
            "in": "query",
            "name": "reservedTimeID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Time Off ID"
          },
          {
            "in": "query",
            "name": "resourceScope",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/120/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskResourceScopeEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Resource Scope"
          },
          {
            "in": "query",
            "name": "revenueType",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/121/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.RevenueTypeEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Revenue Type"
          },
          {
            "in": "query",
            "name": "roleID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Role ID"
          },
          {
            "in": "query",
            "name": "securityRootID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for securityRootID"
          },
          {
            "in": "query",
            "name": "securityRootObjCode",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for securityRootObjCode"
          },
          {
            "in": "query",
            "name": "slackDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/125/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/date.json"
            },
            "required": false,
            "description": "filter results with the given field value for Slack Date"
          },
          {
            "in": "query",
            "name": "spi",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Schedule Performance Index"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/106/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Status"
          },
          {
            "in": "query",
            "name": "statusUpdate",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Status Update"
          },
          {
            "in": "query",
            "name": "submittedByID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Submitted By ID"
          },
          {
            "in": "query",
            "name": "taskConstraint",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/131/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskConstraintEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Task Constraint"
          },
          {
            "in": "query",
            "name": "taskNumber",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Task Number"
          },
          {
            "in": "query",
            "name": "teamID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Team ID"
          },
          {
            "in": "query",
            "name": "templateTaskID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Template Task ID"
          },
          {
            "in": "query",
            "name": "trackingMode",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/135/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskTrackingModeEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Tracking Mode"
          },
          {
            "in": "query",
            "name": "version",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Version"
          },
          {
            "in": "query",
            "name": "wbs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Work Breakdown Structure"
          },
          {
            "in": "query",
            "name": "work",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Work"
          },
          {
            "in": "query",
            "name": "workRequired",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Planned Hours"
          },
          {
            "in": "query",
            "name": "ID_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by ID 4th"
          },
          {
            "in": "query",
            "name": "URL_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by URL 4th"
          },
          {
            "in": "query",
            "name": "actualCompletionDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Actual Completion Date 4th"
          },
          {
            "in": "query",
            "name": "actualStartDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Actual Start Date 4th"
          },
          {
            "in": "query",
            "name": "approvalCompletionDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Path Completion Date 4th"
          },
          {
            "in": "query",
            "name": "approvalEstStartDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Estimated Start Date 4th"
          },
          {
            "in": "query",
            "name": "approvalPlannedStartDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Planned Start Date 4th"
          },
          {
            "in": "query",
            "name": "approvalProjectedStartDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Projected Start Date 4th"
          },
          {
            "in": "query",
            "name": "approvalStartDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Path Start Date 4th"
          },
          {
            "in": "query",
            "name": "backlogOrder_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Order 4th"
          },
          {
            "in": "query",
            "name": "commitDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Commit Date 4th"
          },
          {
            "in": "query",
            "name": "completionPendingDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Completion Pending Date 4th"
          },
          {
            "in": "query",
            "name": "condition_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Condition 4th"
          },
          {
            "in": "query",
            "name": "constraintDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Constraint Date 4th"
          },
          {
            "in": "query",
            "name": "costType_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Cost Type 4th"
          },
          {
            "in": "query",
            "name": "cpi_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Cost Performance Index 4th"
          },
          {
            "in": "query",
            "name": "csi_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Cost Schedule Performance Index 4th"
          },
          {
            "in": "query",
            "name": "description_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Description 4th"
          },
          {
            "in": "query",
            "name": "durationType_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Duration Type 4th"
          },
          {
            "in": "query",
            "name": "eac_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by EAC 4th"
          },
          {
            "in": "query",
            "name": "entryDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Entry Date 4th"
          },
          {
            "in": "query",
            "name": "estCompletionDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Estimated Due Date 4th"
          },
          {
            "in": "query",
            "name": "estStartDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Estimated Start Date 4th"
          },
          {
            "in": "query",
            "name": "extRefID_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by External Reference ID 4th"
          },
          {
            "in": "query",
            "name": "handoffDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Handoff Date 4th"
          },
          {
            "in": "query",
            "name": "hasDocuments_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Documents 4th"
          },
          {
            "in": "query",
            "name": "hasExpenses_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Expenses 4th"
          },
          {
            "in": "query",
            "name": "hasTimedNotifications_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Reminder Notifications 4th"
          },
          {
            "in": "query",
            "name": "hoursPerPoint_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by hoursPerPoint 4th"
          },
          {
            "in": "query",
            "name": "isAgile_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Agile 4th"
          },
          {
            "in": "query",
            "name": "isLevelingExcluded_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Exclude from Leveling 4th"
          },
          {
            "in": "query",
            "name": "isReady_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Ready 4th"
          },
          {
            "in": "query",
            "name": "kanbanFlag_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Kanban Flag 4th"
          },
          {
            "in": "query",
            "name": "lastUpdateDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Last Update Date 4th"
          },
          {
            "in": "query",
            "name": "name_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Name 4th"
          },
          {
            "in": "query",
            "name": "numberOfChildren_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Number of Children 4th"
          },
          {
            "in": "query",
            "name": "originalDuration_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Original Duration 4th"
          },
          {
            "in": "query",
            "name": "originalWorkRequired_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Original Planned Hours 4th"
          },
          {
            "in": "query",
            "name": "parentLag_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Parent Lag 4th"
          },
          {
            "in": "query",
            "name": "parentLagType_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Parent Lag Type 4th"
          },
          {
            "in": "query",
            "name": "pendingPredecessors_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Pending Predecessors 4th"
          },
          {
            "in": "query",
            "name": "percentComplete_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Percent Complete 4th"
          },
          {
            "in": "query",
            "name": "personal_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Personal 4th"
          },
          {
            "in": "query",
            "name": "plannedCompletionDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Planned Completion Date 4th"
          },
          {
            "in": "query",
            "name": "plannedStartDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Planned Start Date 4th"
          },
          {
            "in": "query",
            "name": "priority_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Priority 4th"
          },
          {
            "in": "query",
            "name": "progressStatus_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Progress Status 4th"
          },
          {
            "in": "query",
            "name": "projectedCompletionDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Projected Completion Date 4th"
          },
          {
            "in": "query",
            "name": "projectedStartDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Projected Start Date 4th"
          },
          {
            "in": "query",
            "name": "referenceNumber_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Reference Number 4th"
          },
          {
            "in": "query",
            "name": "revenueType_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Revenue Type 4th"
          },
          {
            "in": "query",
            "name": "slackDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Slack Date 4th"
          },
          {
            "in": "query",
            "name": "spi_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Schedule Performance Index 4th"
          },
          {
            "in": "query",
            "name": "status_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Status 4th"
          },
          {
            "in": "query",
            "name": "taskConstraint_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Task Constraint 4th"
          },
          {
            "in": "query",
            "name": "taskNumber_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Task Number 4th"
          },
          {
            "in": "query",
            "name": "trackingMode_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Tracking Mode 4th"
          },
          {
            "in": "query",
            "name": "ID_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by ID 3rd"
          },
          {
            "in": "query",
            "name": "URL_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by URL 3rd"
          },
          {
            "in": "query",
            "name": "actualCompletionDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Actual Completion Date 3rd"
          },
          {
            "in": "query",
            "name": "actualStartDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Actual Start Date 3rd"
          },
          {
            "in": "query",
            "name": "approvalCompletionDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Path Completion Date 3rd"
          },
          {
            "in": "query",
            "name": "approvalEstStartDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Estimated Start Date 3rd"
          },
          {
            "in": "query",
            "name": "approvalPlannedStartDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Planned Start Date 3rd"
          },
          {
            "in": "query",
            "name": "approvalProjectedStartDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Projected Start Date 3rd"
          },
          {
            "in": "query",
            "name": "approvalStartDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Path Start Date 3rd"
          },
          {
            "in": "query",
            "name": "backlogOrder_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Order 3rd"
          },
          {
            "in": "query",
            "name": "commitDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Commit Date 3rd"
          },
          {
            "in": "query",
            "name": "completionPendingDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Completion Pending Date 3rd"
          },
          {
            "in": "query",
            "name": "condition_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Condition 3rd"
          },
          {
            "in": "query",
            "name": "constraintDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Constraint Date 3rd"
          },
          {
            "in": "query",
            "name": "costType_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Cost Type 3rd"
          },
          {
            "in": "query",
            "name": "cpi_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Cost Performance Index 3rd"
          },
          {
            "in": "query",
            "name": "csi_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Cost Schedule Performance Index 3rd"
          },
          {
            "in": "query",
            "name": "description_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Description 3rd"
          },
          {
            "in": "query",
            "name": "durationType_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Duration Type 3rd"
          },
          {
            "in": "query",
            "name": "eac_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by EAC 3rd"
          },
          {
            "in": "query",
            "name": "entryDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Entry Date 3rd"
          },
          {
            "in": "query",
            "name": "estCompletionDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Estimated Due Date 3rd"
          },
          {
            "in": "query",
            "name": "estStartDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Estimated Start Date 3rd"
          },
          {
            "in": "query",
            "name": "extRefID_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by External Reference ID 3rd"
          },
          {
            "in": "query",
            "name": "handoffDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Handoff Date 3rd"
          },
          {
            "in": "query",
            "name": "hasDocuments_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Documents 3rd"
          },
          {
            "in": "query",
            "name": "hasExpenses_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Expenses 3rd"
          },
          {
            "in": "query",
            "name": "hasTimedNotifications_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Reminder Notifications 3rd"
          },
          {
            "in": "query",
            "name": "hoursPerPoint_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by hoursPerPoint 3rd"
          },
          {
            "in": "query",
            "name": "isAgile_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Agile 3rd"
          },
          {
            "in": "query",
            "name": "isLevelingExcluded_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Exclude from Leveling 3rd"
          },
          {
            "in": "query",
            "name": "isReady_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Ready 3rd"
          },
          {
            "in": "query",
            "name": "kanbanFlag_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Kanban Flag 3rd"
          },
          {
            "in": "query",
            "name": "lastUpdateDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Last Update Date 3rd"
          },
          {
            "in": "query",
            "name": "name_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Name 3rd"
          },
          {
            "in": "query",
            "name": "numberOfChildren_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Number of Children 3rd"
          },
          {
            "in": "query",
            "name": "originalDuration_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Original Duration 3rd"
          },
          {
            "in": "query",
            "name": "originalWorkRequired_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Original Planned Hours 3rd"
          },
          {
            "in": "query",
            "name": "parentLag_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Parent Lag 3rd"
          },
          {
            "in": "query",
            "name": "parentLagType_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Parent Lag Type 3rd"
          },
          {
            "in": "query",
            "name": "pendingPredecessors_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Pending Predecessors 3rd"
          },
          {
            "in": "query",
            "name": "percentComplete_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Percent Complete 3rd"
          },
          {
            "in": "query",
            "name": "personal_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Personal 3rd"
          },
          {
            "in": "query",
            "name": "plannedCompletionDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Planned Completion Date 3rd"
          },
          {
            "in": "query",
            "name": "plannedStartDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Planned Start Date 3rd"
          },
          {
            "in": "query",
            "name": "priority_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Priority 3rd"
          },
          {
            "in": "query",
            "name": "progressStatus_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Progress Status 3rd"
          },
          {
            "in": "query",
            "name": "projectedCompletionDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Projected Completion Date 3rd"
          },
          {
            "in": "query",
            "name": "projectedStartDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Projected Start Date 3rd"
          },
          {
            "in": "query",
            "name": "referenceNumber_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Reference Number 3rd"
          },
          {
            "in": "query",
            "name": "revenueType_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Revenue Type 3rd"
          },
          {
            "in": "query",
            "name": "slackDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Slack Date 3rd"
          },
          {
            "in": "query",
            "name": "spi_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Schedule Performance Index 3rd"
          },
          {
            "in": "query",
            "name": "status_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Status 3rd"
          },
          {
            "in": "query",
            "name": "taskConstraint_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Task Constraint 3rd"
          },
          {
            "in": "query",
            "name": "taskNumber_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Task Number 3rd"
          },
          {
            "in": "query",
            "name": "trackingMode_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Tracking Mode 3rd"
          },
          {
            "in": "query",
            "name": "ID_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by ID 2nd"
          },
          {
            "in": "query",
            "name": "URL_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by URL 2nd"
          },
          {
            "in": "query",
            "name": "actualCompletionDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Actual Completion Date 2nd"
          },
          {
            "in": "query",
            "name": "actualStartDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Actual Start Date 2nd"
          },
          {
            "in": "query",
            "name": "approvalCompletionDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Path Completion Date 2nd"
          },
          {
            "in": "query",
            "name": "approvalEstStartDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Estimated Start Date 2nd"
          },
          {
            "in": "query",
            "name": "approvalPlannedStartDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Planned Start Date 2nd"
          },
          {
            "in": "query",
            "name": "approvalProjectedStartDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Projected Start Date 2nd"
          },
          {
            "in": "query",
            "name": "approvalStartDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Path Start Date 2nd"
          },
          {
            "in": "query",
            "name": "backlogOrder_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Order 2nd"
          },
          {
            "in": "query",
            "name": "commitDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Commit Date 2nd"
          },
          {
            "in": "query",
            "name": "completionPendingDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Completion Pending Date 2nd"
          },
          {
            "in": "query",
            "name": "condition_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Condition 2nd"
          },
          {
            "in": "query",
            "name": "constraintDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Constraint Date 2nd"
          },
          {
            "in": "query",
            "name": "costType_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Cost Type 2nd"
          },
          {
            "in": "query",
            "name": "cpi_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Cost Performance Index 2nd"
          },
          {
            "in": "query",
            "name": "csi_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Cost Schedule Performance Index 2nd"
          },
          {
            "in": "query",
            "name": "description_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Description 2nd"
          },
          {
            "in": "query",
            "name": "durationType_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Duration Type 2nd"
          },
          {
            "in": "query",
            "name": "eac_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by EAC 2nd"
          },
          {
            "in": "query",
            "name": "entryDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Entry Date 2nd"
          },
          {
            "in": "query",
            "name": "estCompletionDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Estimated Due Date 2nd"
          },
          {
            "in": "query",
            "name": "estStartDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Estimated Start Date 2nd"
          },
          {
            "in": "query",
            "name": "extRefID_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by External Reference ID 2nd"
          },
          {
            "in": "query",
            "name": "handoffDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Handoff Date 2nd"
          },
          {
            "in": "query",
            "name": "hasDocuments_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Documents 2nd"
          },
          {
            "in": "query",
            "name": "hasExpenses_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Expenses 2nd"
          },
          {
            "in": "query",
            "name": "hasTimedNotifications_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Reminder Notifications 2nd"
          },
          {
            "in": "query",
            "name": "hoursPerPoint_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by hoursPerPoint 2nd"
          },
          {
            "in": "query",
            "name": "isAgile_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Agile 2nd"
          },
          {
            "in": "query",
            "name": "isLevelingExcluded_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Exclude from Leveling 2nd"
          },
          {
            "in": "query",
            "name": "isReady_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Ready 2nd"
          },
          {
            "in": "query",
            "name": "kanbanFlag_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Kanban Flag 2nd"
          },
          {
            "in": "query",
            "name": "lastUpdateDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Last Update Date 2nd"
          },
          {
            "in": "query",
            "name": "name_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Name 2nd"
          },
          {
            "in": "query",
            "name": "numberOfChildren_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Number of Children 2nd"
          },
          {
            "in": "query",
            "name": "originalDuration_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Original Duration 2nd"
          },
          {
            "in": "query",
            "name": "originalWorkRequired_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Original Planned Hours 2nd"
          },
          {
            "in": "query",
            "name": "parentLag_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Parent Lag 2nd"
          },
          {
            "in": "query",
            "name": "parentLagType_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Parent Lag Type 2nd"
          },
          {
            "in": "query",
            "name": "pendingPredecessors_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Pending Predecessors 2nd"
          },
          {
            "in": "query",
            "name": "percentComplete_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Percent Complete 2nd"
          },
          {
            "in": "query",
            "name": "personal_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Personal 2nd"
          },
          {
            "in": "query",
            "name": "plannedCompletionDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Planned Completion Date 2nd"
          },
          {
            "in": "query",
            "name": "plannedStartDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Planned Start Date 2nd"
          },
          {
            "in": "query",
            "name": "priority_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Priority 2nd"
          },
          {
            "in": "query",
            "name": "progressStatus_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Progress Status 2nd"
          },
          {
            "in": "query",
            "name": "projectedCompletionDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Projected Completion Date 2nd"
          },
          {
            "in": "query",
            "name": "projectedStartDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Projected Start Date 2nd"
          },
          {
            "in": "query",
            "name": "referenceNumber_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Reference Number 2nd"
          },
          {
            "in": "query",
            "name": "revenueType_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Revenue Type 2nd"
          },
          {
            "in": "query",
            "name": "slackDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Slack Date 2nd"
          },
          {
            "in": "query",
            "name": "spi_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Schedule Performance Index 2nd"
          },
          {
            "in": "query",
            "name": "status_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Status 2nd"
          },
          {
            "in": "query",
            "name": "taskConstraint_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Task Constraint 2nd"
          },
          {
            "in": "query",
            "name": "taskNumber_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Task Number 2nd"
          },
          {
            "in": "query",
            "name": "trackingMode_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Tracking Mode 2nd"
          },
          {
            "in": "query",
            "name": "ID_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by ID 1st"
          },
          {
            "in": "query",
            "name": "URL_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by URL 1st"
          },
          {
            "in": "query",
            "name": "actualCompletionDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Actual Completion Date 1st"
          },
          {
            "in": "query",
            "name": "actualStartDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Actual Start Date 1st"
          },
          {
            "in": "query",
            "name": "approvalCompletionDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Path Completion Date 1st"
          },
          {
            "in": "query",
            "name": "approvalEstStartDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Estimated Start Date 1st"
          },
          {
            "in": "query",
            "name": "approvalPlannedStartDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Planned Start Date 1st"
          },
          {
            "in": "query",
            "name": "approvalProjectedStartDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Projected Start Date 1st"
          },
          {
            "in": "query",
            "name": "approvalStartDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Path Start Date 1st"
          },
          {
            "in": "query",
            "name": "backlogOrder_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Order 1st"
          },
          {
            "in": "query",
            "name": "commitDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Commit Date 1st"
          },
          {
            "in": "query",
            "name": "completionPendingDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Completion Pending Date 1st"
          },
          {
            "in": "query",
            "name": "condition_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Condition 1st"
          },
          {
            "in": "query",
            "name": "constraintDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Constraint Date 1st"
          },
          {
            "in": "query",
            "name": "costType_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Cost Type 1st"
          },
          {
            "in": "query",
            "name": "cpi_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Cost Performance Index 1st"
          },
          {
            "in": "query",
            "name": "csi_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Cost Schedule Performance Index 1st"
          },
          {
            "in": "query",
            "name": "description_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Description 1st"
          },
          {
            "in": "query",
            "name": "durationType_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Duration Type 1st"
          },
          {
            "in": "query",
            "name": "eac_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by EAC 1st"
          },
          {
            "in": "query",
            "name": "entryDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Entry Date 1st"
          },
          {
            "in": "query",
            "name": "estCompletionDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Estimated Due Date 1st"
          },
          {
            "in": "query",
            "name": "estStartDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Estimated Start Date 1st"
          },
          {
            "in": "query",
            "name": "extRefID_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by External Reference ID 1st"
          },
          {
            "in": "query",
            "name": "handoffDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Handoff Date 1st"
          },
          {
            "in": "query",
            "name": "hasDocuments_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Documents 1st"
          },
          {
            "in": "query",
            "name": "hasExpenses_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Expenses 1st"
          },
          {
            "in": "query",
            "name": "hasTimedNotifications_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Reminder Notifications 1st"
          },
          {
            "in": "query",
            "name": "hoursPerPoint_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by hoursPerPoint 1st"
          },
          {
            "in": "query",
            "name": "isAgile_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Agile 1st"
          },
          {
            "in": "query",
            "name": "isLevelingExcluded_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Exclude from Leveling 1st"
          },
          {
            "in": "query",
            "name": "isReady_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Ready 1st"
          },
          {
            "in": "query",
            "name": "kanbanFlag_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Kanban Flag 1st"
          },
          {
            "in": "query",
            "name": "lastUpdateDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Last Update Date 1st"
          },
          {
            "in": "query",
            "name": "name_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Name 1st"
          },
          {
            "in": "query",
            "name": "numberOfChildren_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Number of Children 1st"
          },
          {
            "in": "query",
            "name": "originalDuration_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Original Duration 1st"
          },
          {
            "in": "query",
            "name": "originalWorkRequired_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Original Planned Hours 1st"
          },
          {
            "in": "query",
            "name": "parentLag_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Parent Lag 1st"
          },
          {
            "in": "query",
            "name": "parentLagType_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Parent Lag Type 1st"
          },
          {
            "in": "query",
            "name": "pendingPredecessors_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Pending Predecessors 1st"
          },
          {
            "in": "query",
            "name": "percentComplete_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Percent Complete 1st"
          },
          {
            "in": "query",
            "name": "personal_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Personal 1st"
          },
          {
            "in": "query",
            "name": "plannedCompletionDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Planned Completion Date 1st"
          },
          {
            "in": "query",
            "name": "plannedStartDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Planned Start Date 1st"
          },
          {
            "in": "query",
            "name": "priority_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Priority 1st"
          },
          {
            "in": "query",
            "name": "progressStatus_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Progress Status 1st"
          },
          {
            "in": "query",
            "name": "projectedCompletionDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Projected Completion Date 1st"
          },
          {
            "in": "query",
            "name": "projectedStartDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Projected Start Date 1st"
          },
          {
            "in": "query",
            "name": "referenceNumber_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Reference Number 1st"
          },
          {
            "in": "query",
            "name": "revenueType_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Revenue Type 1st"
          },
          {
            "in": "query",
            "name": "slackDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Slack Date 1st"
          },
          {
            "in": "query",
            "name": "spi_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Schedule Performance Index 1st"
          },
          {
            "in": "query",
            "name": "status_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Status 1st"
          },
          {
            "in": "query",
            "name": "taskConstraint_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Task Constraint 1st"
          },
          {
            "in": "query",
            "name": "taskNumber_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Task Number 1st"
          },
          {
            "in": "query",
            "name": "trackingMode_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Tracking Mode 1st"
          },
          {
            "in": "query",
            "name": "ID_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by ID 0th"
          },
          {
            "in": "query",
            "name": "URL_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by URL 0th"
          },
          {
            "in": "query",
            "name": "actualCompletionDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Actual Completion Date 0th"
          },
          {
            "in": "query",
            "name": "actualStartDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Actual Start Date 0th"
          },
          {
            "in": "query",
            "name": "approvalCompletionDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Path Completion Date 0th"
          },
          {
            "in": "query",
            "name": "approvalEstStartDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Estimated Start Date 0th"
          },
          {
            "in": "query",
            "name": "approvalPlannedStartDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Planned Start Date 0th"
          },
          {
            "in": "query",
            "name": "approvalProjectedStartDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Projected Start Date 0th"
          },
          {
            "in": "query",
            "name": "approvalStartDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Path Start Date 0th"
          },
          {
            "in": "query",
            "name": "backlogOrder_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Order 0th"
          },
          {
            "in": "query",
            "name": "commitDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Commit Date 0th"
          },
          {
            "in": "query",
            "name": "completionPendingDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Completion Pending Date 0th"
          },
          {
            "in": "query",
            "name": "condition_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Condition 0th"
          },
          {
            "in": "query",
            "name": "constraintDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Constraint Date 0th"
          },
          {
            "in": "query",
            "name": "costType_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Cost Type 0th"
          },
          {
            "in": "query",
            "name": "cpi_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Cost Performance Index 0th"
          },
          {
            "in": "query",
            "name": "csi_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Cost Schedule Performance Index 0th"
          },
          {
            "in": "query",
            "name": "description_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Description 0th"
          },
          {
            "in": "query",
            "name": "durationType_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Duration Type 0th"
          },
          {
            "in": "query",
            "name": "eac_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by EAC 0th"
          },
          {
            "in": "query",
            "name": "entryDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Entry Date 0th"
          },
          {
            "in": "query",
            "name": "estCompletionDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Estimated Due Date 0th"
          },
          {
            "in": "query",
            "name": "estStartDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Estimated Start Date 0th"
          },
          {
            "in": "query",
            "name": "extRefID_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by External Reference ID 0th"
          },
          {
            "in": "query",
            "name": "handoffDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Handoff Date 0th"
          },
          {
            "in": "query",
            "name": "hasDocuments_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Documents 0th"
          },
          {
            "in": "query",
            "name": "hasExpenses_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Expenses 0th"
          },
          {
            "in": "query",
            "name": "hasTimedNotifications_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Reminder Notifications 0th"
          },
          {
            "in": "query",
            "name": "hoursPerPoint_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by hoursPerPoint 0th"
          },
          {
            "in": "query",
            "name": "isAgile_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Agile 0th"
          },
          {
            "in": "query",
            "name": "isLevelingExcluded_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Exclude from Leveling 0th"
          },
          {
            "in": "query",
            "name": "isReady_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Ready 0th"
          },
          {
            "in": "query",
            "name": "kanbanFlag_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Kanban Flag 0th"
          },
          {
            "in": "query",
            "name": "lastUpdateDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Last Update Date 0th"
          },
          {
            "in": "query",
            "name": "name_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Name 0th"
          },
          {
            "in": "query",
            "name": "numberOfChildren_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Number of Children 0th"
          },
          {
            "in": "query",
            "name": "originalDuration_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Original Duration 0th"
          },
          {
            "in": "query",
            "name": "originalWorkRequired_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Original Planned Hours 0th"
          },
          {
            "in": "query",
            "name": "parentLag_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Parent Lag 0th"
          },
          {
            "in": "query",
            "name": "parentLagType_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Parent Lag Type 0th"
          },
          {
            "in": "query",
            "name": "pendingPredecessors_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Pending Predecessors 0th"
          },
          {
            "in": "query",
            "name": "percentComplete_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Percent Complete 0th"
          },
          {
            "in": "query",
            "name": "personal_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Personal 0th"
          },
          {
            "in": "query",
            "name": "plannedCompletionDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Planned Completion Date 0th"
          },
          {
            "in": "query",
            "name": "plannedStartDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Planned Start Date 0th"
          },
          {
            "in": "query",
            "name": "priority_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Priority 0th"
          },
          {
            "in": "query",
            "name": "progressStatus_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Progress Status 0th"
          },
          {
            "in": "query",
            "name": "projectedCompletionDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Projected Completion Date 0th"
          },
          {
            "in": "query",
            "name": "projectedStartDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Projected Start Date 0th"
          },
          {
            "in": "query",
            "name": "referenceNumber_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Reference Number 0th"
          },
          {
            "in": "query",
            "name": "revenueType_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Revenue Type 0th"
          },
          {
            "in": "query",
            "name": "slackDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Slack Date 0th"
          },
          {
            "in": "query",
            "name": "spi_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Schedule Performance Index 0th"
          },
          {
            "in": "query",
            "name": "status_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Status 0th"
          },
          {
            "in": "query",
            "name": "taskConstraint_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Task Constraint 0th"
          },
          {
            "in": "query",
            "name": "taskNumber_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Task Number 0th"
          },
          {
            "in": "query",
            "name": "trackingMode_GroupBy",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Tracking Mode 0th"
          },
          {
            "in": "query",
            "name": "ID_AggFunc",
            "schema": {
              "type": "string",
              "enum": [
                "avg",
                "count",
                "max",
                "min",
                "sum"
              ]
            },
            "required": false,
            "description": "Aggregate ID using the specified function"
          },
          {
            "in": "query",
            "name": "URL_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate URL using the specified function"
          },
          {
            "in": "query",
            "name": "accessorIDs_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate accessorIDs using the specified function"
          },
          {
            "in": "query",
            "name": "actualCompletionDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Actual Completion Date using the specified function"
          },
          {
            "in": "query",
            "name": "actualCost_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Actual Cost using the specified function"
          },
          {
            "in": "query",
            "name": "actualDuration_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Actual Duration using the specified function"
          },
          {
            "in": "query",
            "name": "actualDurationMinutes_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Actual Duration Minutes using the specified function"
          },
          {
            "in": "query",
            "name": "actualExpenseCost_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Actual Expense Cost using the specified function"
          },
          {
            "in": "query",
            "name": "actualLaborCost_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Actual Labor Cost using the specified function"
          },
          {
            "in": "query",
            "name": "actualRevenue_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Actual Revenue using the specified function"
          },
          {
            "in": "query",
            "name": "actualStartDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Actual Start Date using the specified function"
          },
          {
            "in": "query",
            "name": "actualWork_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Actual Hours using the specified function"
          },
          {
            "in": "query",
            "name": "actualWorkRequired_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Actual Hours using the specified function"
          },
          {
            "in": "query",
            "name": "approvalCompletionDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Approval Path Completion Date using the specified function"
          },
          {
            "in": "query",
            "name": "approvalEstStartDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Approval Estimated Start Date using the specified function"
          },
          {
            "in": "query",
            "name": "approvalPlannedStartDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Approval Planned Start Date using the specified function"
          },
          {
            "in": "query",
            "name": "approvalPlannedStartDay_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate approvalPlannedStartDay using the specified function"
          },
          {
            "in": "query",
            "name": "approvalProcessID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Approval Processes ID using the specified function"
          },
          {
            "in": "query",
            "name": "approvalProjectedStartDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Approval Projected Start Date using the specified function"
          },
          {
            "in": "query",
            "name": "approvalStartDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Approval Path Start Date using the specified function"
          },
          {
            "in": "query",
            "name": "approversString_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate approversString using the specified function"
          },
          {
            "in": "query",
            "name": "assignedToID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Assigned To ID using the specified function"
          },
          {
            "in": "query",
            "name": "assignmentsListString_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate assignmentsListString using the specified function"
          },
          {
            "in": "query",
            "name": "auditTypes_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Audit Types using the specified function"
          },
          {
            "in": "query",
            "name": "backlogOrder_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Order using the specified function"
          },
          {
            "in": "query",
            "name": "backlogParent_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Parent using the specified function"
          },
          {
            "in": "query",
            "name": "billingAmount_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Cap or Fixed Amount using the specified function"
          },
          {
            "in": "query",
            "name": "billingRecordID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Billing Record ID using the specified function"
          },
          {
            "in": "query",
            "name": "canStart_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Can Start using the specified function"
          },
          {
            "in": "query",
            "name": "categoryID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Category ID using the specified function"
          },
          {
            "in": "query",
            "name": "color_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Color using the specified function"
          },
          {
            "in": "query",
            "name": "commitDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Commit Date using the specified function"
          },
          {
            "in": "query",
            "name": "commitDateRange_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate commitDateRange using the specified function"
          },
          {
            "in": "query",
            "name": "completionPendingDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Completion Pending Date using the specified function"
          },
          {
            "in": "query",
            "name": "condition_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Condition using the specified function"
          },
          {
            "in": "query",
            "name": "constraintDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Constraint Date using the specified function"
          },
          {
            "in": "query",
            "name": "convertedOpTaskEntryDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate convertedOpTaskEntryDate using the specified function"
          },
          {
            "in": "query",
            "name": "convertedOpTaskName_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate convertedOpTaskName using the specified function"
          },
          {
            "in": "query",
            "name": "convertedOpTaskOriginatorID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate convertedOpTaskOriginatorID using the specified function"
          },
          {
            "in": "query",
            "name": "costAmount_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Cost Amount using the specified function"
          },
          {
            "in": "query",
            "name": "costType_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Cost Type using the specified function"
          },
          {
            "in": "query",
            "name": "cpi_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Cost Performance Index using the specified function"
          },
          {
            "in": "query",
            "name": "csi_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Cost Schedule Performance Index using the specified function"
          },
          {
            "in": "query",
            "name": "currentApprovalStepID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Current Approval Stage ID using the specified function"
          },
          {
            "in": "query",
            "name": "customerID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Customer ID using the specified function"
          },
          {
            "in": "query",
            "name": "daysLate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Days Late using the specified function"
          },
          {
            "in": "query",
            "name": "description_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Description using the specified function"
          },
          {
            "in": "query",
            "name": "dueDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Due Date using the specified function"
          },
          {
            "in": "query",
            "name": "duration_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Duration using the specified function"
          },
          {
            "in": "query",
            "name": "durationExpression_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate durationExpression using the specified function"
          },
          {
            "in": "query",
            "name": "durationMinutes_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Duration in Minutes using the specified function"
          },
          {
            "in": "query",
            "name": "durationType_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Duration Type using the specified function"
          },
          {
            "in": "query",
            "name": "durationUnit_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Duration Unit using the specified function"
          },
          {
            "in": "query",
            "name": "eac_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate EAC using the specified function"
          },
          {
            "in": "query",
            "name": "enteredByID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Entered By ID using the specified function"
          },
          {
            "in": "query",
            "name": "entryDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Entry Date using the specified function"
          },
          {
            "in": "query",
            "name": "estCompletionDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Estimated Due Date using the specified function"
          },
          {
            "in": "query",
            "name": "estStartDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Estimated Start Date using the specified function"
          },
          {
            "in": "query",
            "name": "estimate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Estimate using the specified function"
          },
          {
            "in": "query",
            "name": "extRefID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate External Reference ID using the specified function"
          },
          {
            "in": "query",
            "name": "groupID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Group ID using the specified function"
          },
          {
            "in": "query",
            "name": "handoffDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Handoff Date using the specified function"
          },
          {
            "in": "query",
            "name": "hasCompletionConstraint_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate hasCompletionConstraint using the specified function"
          },
          {
            "in": "query",
            "name": "hasDocuments_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Has Documents using the specified function"
          },
          {
            "in": "query",
            "name": "hasExpenses_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Has Expenses using the specified function"
          },
          {
            "in": "query",
            "name": "hasMessages_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Has Messages using the specified function"
          },
          {
            "in": "query",
            "name": "hasNotes_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Has Notes using the specified function"
          },
          {
            "in": "query",
            "name": "hasResolvables_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Has Resolvables using the specified function"
          },
          {
            "in": "query",
            "name": "hasStartConstraint_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate hasStartConstraint using the specified function"
          },
          {
            "in": "query",
            "name": "hasTimedNotifications_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Has Reminder Notifications using the specified function"
          },
          {
            "in": "query",
            "name": "hoursPerPoint_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate hoursPerPoint using the specified function"
          },
          {
            "in": "query",
            "name": "indent_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Indent using the specified function"
          },
          {
            "in": "query",
            "name": "isAgile_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Agile using the specified function"
          },
          {
            "in": "query",
            "name": "isCritical_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Is Critical using the specified function"
          },
          {
            "in": "query",
            "name": "isDurationLocked_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Duration Locked using the specified function"
          },
          {
            "in": "query",
            "name": "isLevelingExcluded_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Exclude from Leveling using the specified function"
          },
          {
            "in": "query",
            "name": "isReady_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Ready using the specified function"
          },
          {
            "in": "query",
            "name": "isStatusComplete_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate isStatusComplete using the specified function"
          },
          {
            "in": "query",
            "name": "isWorkRequiredLocked_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Worked Locked using the specified function"
          },
          {
            "in": "query",
            "name": "iterationID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Iteration ID using the specified function"
          },
          {
            "in": "query",
            "name": "kanbanBoardID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Kanban Board ID using the specified function"
          },
          {
            "in": "query",
            "name": "kanbanFlag_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Kanban Flag using the specified function"
          },
          {
            "in": "query",
            "name": "lastConditionNoteID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Last Condition Note ID using the specified function"
          },
          {
            "in": "query",
            "name": "lastNoteID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Last Note ID using the specified function"
          },
          {
            "in": "query",
            "name": "lastUpdateDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Last Update Date using the specified function"
          },
          {
            "in": "query",
            "name": "lastUpdatedByID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Last Updated By ID using the specified function"
          },
          {
            "in": "query",
            "name": "levelingStartDelay_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Leveling Delay using the specified function"
          },
          {
            "in": "query",
            "name": "levelingStartDelayExpression_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate levelingStartDelayExpression using the specified function"
          },
          {
            "in": "query",
            "name": "levelingStartDelayMinutes_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate levelingStartDelayMinutes using the specified function"
          },
          {
            "in": "query",
            "name": "milestoneID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Milestone ID using the specified function"
          },
          {
            "in": "query",
            "name": "name_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Name using the specified function"
          },
          {
            "in": "query",
            "name": "numberOfChildren_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Number of Children using the specified function"
          },
          {
            "in": "query",
            "name": "numberOpenOpTasks_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Number of Open Issues using the specified function"
          },
          {
            "in": "query",
            "name": "originalDuration_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Original Duration using the specified function"
          },
          {
            "in": "query",
            "name": "originalWorkRequired_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Original Planned Hours using the specified function"
          },
          {
            "in": "query",
            "name": "parentID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Parent ID using the specified function"
          },
          {
            "in": "query",
            "name": "parentLag_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Parent Lag using the specified function"
          },
          {
            "in": "query",
            "name": "parentLagType_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Parent Lag Type using the specified function"
          },
          {
            "in": "query",
            "name": "pendingCalculation_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate pendingCalculation using the specified function"
          },
          {
            "in": "query",
            "name": "pendingPredecessors_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Pending Predecessors using the specified function"
          },
          {
            "in": "query",
            "name": "pendingUpdateMethods_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate pendingUpdateMethods using the specified function"
          },
          {
            "in": "query",
            "name": "percentComplete_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Percent Complete using the specified function"
          },
          {
            "in": "query",
            "name": "personal_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Personal using the specified function"
          },
          {
            "in": "query",
            "name": "plannedCompletionDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Planned Completion Date using the specified function"
          },
          {
            "in": "query",
            "name": "plannedCost_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Planned Cost using the specified function"
          },
          {
            "in": "query",
            "name": "plannedDateAlignment_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Planned Date Alignment using the specified function"
          },
          {
            "in": "query",
            "name": "plannedDuration_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Planned Duration using the specified function"
          },
          {
            "in": "query",
            "name": "plannedDurationMinutes_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Planned Duration Minutes using the specified function"
          },
          {
            "in": "query",
            "name": "plannedExpenseCost_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Planned Expense Cost using the specified function"
          },
          {
            "in": "query",
            "name": "plannedHoursAlignment_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Planned Hours Alignment using the specified function"
          },
          {
            "in": "query",
            "name": "plannedLaborCost_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Planned Labor Cost using the specified function"
          },
          {
            "in": "query",
            "name": "plannedRevenue_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Planned Revenue using the specified function"
          },
          {
            "in": "query",
            "name": "plannedStartDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Planned Start Date using the specified function"
          },
          {
            "in": "query",
            "name": "previousStatus_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Previous Status using the specified function"
          },
          {
            "in": "query",
            "name": "priority_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Priority using the specified function"
          },
          {
            "in": "query",
            "name": "priorityColor_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate priorityColor using the specified function"
          },
          {
            "in": "query",
            "name": "progressStatus_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Progress Status using the specified function"
          },
          {
            "in": "query",
            "name": "projectID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Project ID using the specified function"
          },
          {
            "in": "query",
            "name": "projectedCompletionDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Projected Completion Date using the specified function"
          },
          {
            "in": "query",
            "name": "projectedDurationMinutes_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Projected Duration Minutes using the specified function"
          },
          {
            "in": "query",
            "name": "projectedStartDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Projected Start Date using the specified function"
          },
          {
            "in": "query",
            "name": "recurrenceNumber_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Recurrence Number using the specified function"
          },
          {
            "in": "query",
            "name": "recurrenceRuleID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Recurrence Rule ID using the specified function"
          },
          {
            "in": "query",
            "name": "referenceNumber_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Reference Number using the specified function"
          },
          {
            "in": "query",
            "name": "rejectionIssueID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Rejection Issue ID using the specified function"
          },
          {
            "in": "query",
            "name": "remainingDurationMinutes_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Remaining Duration Minutes using the specified function"
          },
          {
            "in": "query",
            "name": "reservedTimeID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Time Off ID using the specified function"
          },
          {
            "in": "query",
            "name": "resourceScope_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Resource Scope using the specified function"
          },
          {
            "in": "query",
            "name": "revenueType_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Revenue Type using the specified function"
          },
          {
            "in": "query",
            "name": "roleID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Role ID using the specified function"
          },
          {
            "in": "query",
            "name": "securityRootID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate securityRootID using the specified function"
          },
          {
            "in": "query",
            "name": "securityRootObjCode_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate securityRootObjCode using the specified function"
          },
          {
            "in": "query",
            "name": "showCommitDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate showCommitDate using the specified function"
          },
          {
            "in": "query",
            "name": "showCondition_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate showCondition using the specified function"
          },
          {
            "in": "query",
            "name": "showStatus_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate showStatus using the specified function"
          },
          {
            "in": "query",
            "name": "slackDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Slack Date using the specified function"
          },
          {
            "in": "query",
            "name": "spi_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Schedule Performance Index using the specified function"
          },
          {
            "in": "query",
            "name": "status_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Status using the specified function"
          },
          {
            "in": "query",
            "name": "statusEquatesWith_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Status Equates With using the specified function"
          },
          {
            "in": "query",
            "name": "statusUpdate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Status Update using the specified function"
          },
          {
            "in": "query",
            "name": "submittedByID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Submitted By ID using the specified function"
          },
          {
            "in": "query",
            "name": "taskConstraint_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Task Constraint using the specified function"
          },
          {
            "in": "query",
            "name": "taskNumber_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Task Number using the specified function"
          },
          {
            "in": "query",
            "name": "taskNumberPredecessorString_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate taskNumberPredecessorString using the specified function"
          },
          {
            "in": "query",
            "name": "teamID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Team ID using the specified function"
          },
          {
            "in": "query",
            "name": "templateTaskID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Template Task ID using the specified function"
          },
          {
            "in": "query",
            "name": "trackingMode_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Tracking Mode using the specified function"
          },
          {
            "in": "query",
            "name": "version_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Version using the specified function"
          },
          {
            "in": "query",
            "name": "wbs_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Work Breakdown Structure using the specified function"
          },
          {
            "in": "query",
            "name": "work_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Work using the specified function"
          },
          {
            "in": "query",
            "name": "workPerDayList_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate workPerDayList using the specified function"
          },
          {
            "in": "query",
            "name": "workRequired_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Planned Hours using the specified function"
          },
          {
            "in": "query",
            "name": "workRequiredExpression_AggFunc",
            "schema": {
              "$ref": "#/paths/~1task~1report/get/parameters/415/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate workRequiredExpression using the specified function"
          },
          {
            "in": "query",
            "name": "$$ROLLUP",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Causes an aggregate total to be returned at each grouping level"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "$$ROLLUP": {
                              "type": "object",
                              "additionalProperties": {}
                            }
                          },
                          "additionalProperties": {}
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/search": {
      "get": {
        "operationId": "getTASKSearch",
        "summary": "Task Search",
        "description": "Searches through the Task objects",
        "tags": [
          "TASK",
          "search"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "filters",
            "description": "JSON object whose fields represent the fields of the resource to filter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1task~1report/get/parameters/1/content/application~1json/schema",
                  "x-miro": "swagger/v10.0/schemas/resources/TASK/read.json"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "OR:4:ID",
            "description": "Filter results by OR group 4 applied to ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:URL",
            "description": "Filter results by OR group 4 applied to URL. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualCompletionDate",
            "description": "Filter results by OR group 4 applied to Actual Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualCost",
            "description": "Filter results by OR group 4 applied to Actual Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualDuration",
            "description": "Filter results by OR group 4 applied to Actual Duration. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualDurationMinutes",
            "description": "Filter results by OR group 4 applied to Actual Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualExpenseCost",
            "description": "Filter results by OR group 4 applied to Actual Expense Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualLaborCost",
            "description": "Filter results by OR group 4 applied to Actual Labor Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualRevenue",
            "description": "Filter results by OR group 4 applied to Actual Revenue. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualStartDate",
            "description": "Filter results by OR group 4 applied to Actual Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualWork",
            "description": "Filter results by OR group 4 applied to Actual Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualWorkRequired",
            "description": "Filter results by OR group 4 applied to Actual Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:approvalCompletionDate",
            "description": "Filter results by OR group 4 applied to Approval Path Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:approvalEstStartDate",
            "description": "Filter results by OR group 4 applied to Approval Estimated Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:approvalPlannedStartDate",
            "description": "Filter results by OR group 4 applied to Approval Planned Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:approvalProcessID",
            "description": "Filter results by OR group 4 applied to Approval Processes ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:approvalProjectedStartDate",
            "description": "Filter results by OR group 4 applied to Approval Projected Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:approvalStartDate",
            "description": "Filter results by OR group 4 applied to Approval Path Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:assignedToID",
            "description": "Filter results by OR group 4 applied to Assigned To ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:auditTypes",
            "description": "Filter results by OR group 4 applied to Audit Types. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/22/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:backlogOrder",
            "description": "Filter results by OR group 4 applied to Order. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:billingAmount",
            "description": "Filter results by OR group 4 applied to Cap or Fixed Amount. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:billingRecordID",
            "description": "Filter results by OR group 4 applied to Billing Record ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:canStart",
            "description": "Filter results by OR group 4 applied to Can Start. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:categoryID",
            "description": "Filter results by OR group 4 applied to Category ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:color",
            "description": "Filter results by OR group 4 applied to Color. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:commitDate",
            "description": "Filter results by OR group 4 applied to Commit Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:completionPendingDate",
            "description": "Filter results by OR group 4 applied to Completion Pending Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:condition",
            "description": "Filter results by OR group 4 applied to Condition. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/33/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.ConditionEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:constraintDate",
            "description": "Filter results by OR group 4 applied to Constraint Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:convertedOpTaskEntryDate",
            "description": "Filter results by OR group 4 applied to convertedOpTaskEntryDate. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:convertedOpTaskName",
            "description": "Filter results by OR group 4 applied to convertedOpTaskName. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:convertedOpTaskOriginatorID",
            "description": "Filter results by OR group 4 applied to convertedOpTaskOriginatorID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:costAmount",
            "description": "Filter results by OR group 4 applied to Cost Amount. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:costType",
            "description": "Filter results by OR group 4 applied to Cost Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.CostTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:cpi",
            "description": "Filter results by OR group 4 applied to Cost Performance Index. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:csi",
            "description": "Filter results by OR group 4 applied to Cost Schedule Performance Index. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:currentApprovalStepID",
            "description": "Filter results by OR group 4 applied to Current Approval Stage ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:customerID",
            "description": "Filter results by OR group 4 applied to Customer ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:description",
            "description": "Filter results by OR group 4 applied to Description. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:duration",
            "description": "Filter results by OR group 4 applied to Duration. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:durationMinutes",
            "description": "Filter results by OR group 4 applied to Duration in Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:durationType",
            "description": "Filter results by OR group 4 applied to Duration Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/49/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:durationUnit",
            "description": "Filter results by OR group 4 applied to Duration Unit. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/50/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationUnitEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:eac",
            "description": "Filter results by OR group 4 applied to EAC. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:enteredByID",
            "description": "Filter results by OR group 4 applied to Entered By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:entryDate",
            "description": "Filter results by OR group 4 applied to Entry Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:estCompletionDate",
            "description": "Filter results by OR group 4 applied to Estimated Due Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:estStartDate",
            "description": "Filter results by OR group 4 applied to Estimated Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:extRefID",
            "description": "Filter results by OR group 4 applied to External Reference ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:groupID",
            "description": "Filter results by OR group 4 applied to Group ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:handoffDate",
            "description": "Filter results by OR group 4 applied to Handoff Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasDocuments",
            "description": "Filter results by OR group 4 applied to Has Documents. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasExpenses",
            "description": "Filter results by OR group 4 applied to Has Expenses. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasMessages",
            "description": "Filter results by OR group 4 applied to Has Messages. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasNotes",
            "description": "Filter results by OR group 4 applied to Has Notes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasResolvables",
            "description": "Filter results by OR group 4 applied to Has Resolvables. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasTimedNotifications",
            "description": "Filter results by OR group 4 applied to Has Reminder Notifications. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hoursPerPoint",
            "description": "Filter results by OR group 4 applied to hoursPerPoint. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:indent",
            "description": "Filter results by OR group 4 applied to Indent. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isAgile",
            "description": "Filter results by OR group 4 applied to Agile. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isCritical",
            "description": "Filter results by OR group 4 applied to Is Critical. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isDurationLocked",
            "description": "Filter results by OR group 4 applied to Duration Locked. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isLevelingExcluded",
            "description": "Filter results by OR group 4 applied to Exclude from Leveling. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isReady",
            "description": "Filter results by OR group 4 applied to Ready. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isWorkRequiredLocked",
            "description": "Filter results by OR group 4 applied to Worked Locked. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:iterationID",
            "description": "Filter results by OR group 4 applied to Iteration ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:kanbanBoardID",
            "description": "Filter results by OR group 4 applied to Kanban Board ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:kanbanFlag",
            "description": "Filter results by OR group 4 applied to Kanban Flag. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/76/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.KanbanFlagEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastConditionNoteID",
            "description": "Filter results by OR group 4 applied to Last Condition Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastNoteID",
            "description": "Filter results by OR group 4 applied to Last Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastUpdateDate",
            "description": "Filter results by OR group 4 applied to Last Update Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastUpdatedByID",
            "description": "Filter results by OR group 4 applied to Last Updated By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:levelingStartDelay",
            "description": "Filter results by OR group 4 applied to Leveling Delay. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:levelingStartDelayMinutes",
            "description": "Filter results by OR group 4 applied to levelingStartDelayMinutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:milestoneID",
            "description": "Filter results by OR group 4 applied to Milestone ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:name",
            "description": "Filter results by OR group 4 applied to Name. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:numberOfChildren",
            "description": "Filter results by OR group 4 applied to Number of Children. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:numberOpenOpTasks",
            "description": "Filter results by OR group 4 applied to Number of Open Issues. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:originalDuration",
            "description": "Filter results by OR group 4 applied to Original Duration. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:originalWorkRequired",
            "description": "Filter results by OR group 4 applied to Original Planned Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:parentID",
            "description": "Filter results by OR group 4 applied to Parent ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:parentLag",
            "description": "Filter results by OR group 4 applied to Parent Lag. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:parentLagType",
            "description": "Filter results by OR group 4 applied to Parent Lag Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/92/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.LagTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:pendingCalculation",
            "description": "Filter results by OR group 4 applied to pendingCalculation. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:pendingUpdateMethods",
            "description": "Filter results by OR group 4 applied to pendingUpdateMethods. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:percentComplete",
            "description": "Filter results by OR group 4 applied to Percent Complete. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:personal",
            "description": "Filter results by OR group 4 applied to Personal. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedCompletionDate",
            "description": "Filter results by OR group 4 applied to Planned Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedCost",
            "description": "Filter results by OR group 4 applied to Planned Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedDuration",
            "description": "Filter results by OR group 4 applied to Planned Duration. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedDurationMinutes",
            "description": "Filter results by OR group 4 applied to Planned Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedExpenseCost",
            "description": "Filter results by OR group 4 applied to Planned Expense Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedLaborCost",
            "description": "Filter results by OR group 4 applied to Planned Labor Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedRevenue",
            "description": "Filter results by OR group 4 applied to Planned Revenue. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedStartDate",
            "description": "Filter results by OR group 4 applied to Planned Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:previousStatus",
            "description": "Filter results by OR group 4 applied to Previous Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/106/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:priority",
            "description": "Filter results by OR group 4 applied to Priority. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/107/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:progressStatus",
            "description": "Filter results by OR group 4 applied to Progress Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/109/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.ProgressStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:projectID",
            "description": "Filter results by OR group 4 applied to Project ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:projectedCompletionDate",
            "description": "Filter results by OR group 4 applied to Projected Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:projectedDurationMinutes",
            "description": "Filter results by OR group 4 applied to Projected Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:projectedStartDate",
            "description": "Filter results by OR group 4 applied to Projected Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:recurrenceNumber",
            "description": "Filter results by OR group 4 applied to Recurrence Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:recurrenceRuleID",
            "description": "Filter results by OR group 4 applied to Recurrence Rule ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:referenceNumber",
            "description": "Filter results by OR group 4 applied to Reference Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:rejectionIssueID",
            "description": "Filter results by OR group 4 applied to Rejection Issue ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:remainingDurationMinutes",
            "description": "Filter results by OR group 4 applied to Remaining Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:reservedTimeID",
            "description": "Filter results by OR group 4 applied to Time Off ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:resourceScope",
            "description": "Filter results by OR group 4 applied to Resource Scope. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/120/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskResourceScopeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:revenueType",
            "description": "Filter results by OR group 4 applied to Revenue Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/121/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.RevenueTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:roleID",
            "description": "Filter results by OR group 4 applied to Role ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:securityRootID",
            "description": "Filter results by OR group 4 applied to securityRootID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:securityRootObjCode",
            "description": "Filter results by OR group 4 applied to securityRootObjCode. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:slackDate",
            "description": "Filter results by OR group 4 applied to Slack Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/125/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/date.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:spi",
            "description": "Filter results by OR group 4 applied to Schedule Performance Index. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:status",
            "description": "Filter results by OR group 4 applied to Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/106/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:statusUpdate",
            "description": "Filter results by OR group 4 applied to Status Update. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:submittedByID",
            "description": "Filter results by OR group 4 applied to Submitted By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:taskConstraint",
            "description": "Filter results by OR group 4 applied to Task Constraint. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/131/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskConstraintEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:taskNumber",
            "description": "Filter results by OR group 4 applied to Task Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:teamID",
            "description": "Filter results by OR group 4 applied to Team ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:templateTaskID",
            "description": "Filter results by OR group 4 applied to Template Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:trackingMode",
            "description": "Filter results by OR group 4 applied to Tracking Mode. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/135/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskTrackingModeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:version",
            "description": "Filter results by OR group 4 applied to Version. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:wbs",
            "description": "Filter results by OR group 4 applied to Work Breakdown Structure. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:work",
            "description": "Filter results by OR group 4 applied to Work. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:workRequired",
            "description": "Filter results by OR group 4 applied to Planned Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:ID_Mod",
            "description": "Filter results by ID using the specified operation. Requires the field `OR:4:ID`.",
            "schema": {
              "type": "string",
              "enum": [
                "eq",
                "ne",
                "in",
                "notin",
                "between",
                "notbetween",
                "lt",
                "lte",
                "gt",
                "gte",
                "contains",
                "notcontains",
                "isnull",
                "notnull",
                "like",
                "isblank",
                "notblank",
                "soundex",
                "cicontains",
                "cinotcontains",
                "cieq",
                "cine"
              ]
            }
          },
          {
            "in": "query",
            "name": "OR:4:URL_Mod",
            "description": "Filter results by URL using the specified operation. Requires the field `OR:4:URL`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualCompletionDate_Mod",
            "description": "Filter results by Actual Completion Date using the specified operation. Requires the field `OR:4:actualCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualCost_Mod",
            "description": "Filter results by Actual Cost using the specified operation. Requires the field `OR:4:actualCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualDuration_Mod",
            "description": "Filter results by Actual Duration using the specified operation. Requires the field `OR:4:actualDuration`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualDurationMinutes_Mod",
            "description": "Filter results by Actual Duration Minutes using the specified operation. Requires the field `OR:4:actualDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualExpenseCost_Mod",
            "description": "Filter results by Actual Expense Cost using the specified operation. Requires the field `OR:4:actualExpenseCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualLaborCost_Mod",
            "description": "Filter results by Actual Labor Cost using the specified operation. Requires the field `OR:4:actualLaborCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualRevenue_Mod",
            "description": "Filter results by Actual Revenue using the specified operation. Requires the field `OR:4:actualRevenue`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualStartDate_Mod",
            "description": "Filter results by Actual Start Date using the specified operation. Requires the field `OR:4:actualStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualWork_Mod",
            "description": "Filter results by Actual Hours using the specified operation. Requires the field `OR:4:actualWork`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualWorkRequired_Mod",
            "description": "Filter results by Actual Hours using the specified operation. Requires the field `OR:4:actualWorkRequired`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:approvalCompletionDate_Mod",
            "description": "Filter results by Approval Path Completion Date using the specified operation. Requires the field `OR:4:approvalCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:approvalEstStartDate_Mod",
            "description": "Filter results by Approval Estimated Start Date using the specified operation. Requires the field `OR:4:approvalEstStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:approvalPlannedStartDate_Mod",
            "description": "Filter results by Approval Planned Start Date using the specified operation. Requires the field `OR:4:approvalPlannedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:approvalProcessID_Mod",
            "description": "Filter results by Approval Processes ID using the specified operation. Requires the field `OR:4:approvalProcessID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:approvalProjectedStartDate_Mod",
            "description": "Filter results by Approval Projected Start Date using the specified operation. Requires the field `OR:4:approvalProjectedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:approvalStartDate_Mod",
            "description": "Filter results by Approval Path Start Date using the specified operation. Requires the field `OR:4:approvalStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:assignedToID_Mod",
            "description": "Filter results by Assigned To ID using the specified operation. Requires the field `OR:4:assignedToID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:auditTypes_Mod",
            "description": "Filter results by Audit Types using the specified operation. Requires the field `OR:4:auditTypes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:backlogOrder_Mod",
            "description": "Filter results by Order using the specified operation. Requires the field `OR:4:backlogOrder`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:billingAmount_Mod",
            "description": "Filter results by Cap or Fixed Amount using the specified operation. Requires the field `OR:4:billingAmount`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:billingRecordID_Mod",
            "description": "Filter results by Billing Record ID using the specified operation. Requires the field `OR:4:billingRecordID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:canStart_Mod",
            "description": "Filter results by Can Start using the specified operation. Requires the field `OR:4:canStart`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:categoryID_Mod",
            "description": "Filter results by Category ID using the specified operation. Requires the field `OR:4:categoryID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:color_Mod",
            "description": "Filter results by Color using the specified operation. Requires the field `OR:4:color`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:commitDate_Mod",
            "description": "Filter results by Commit Date using the specified operation. Requires the field `OR:4:commitDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:completionPendingDate_Mod",
            "description": "Filter results by Completion Pending Date using the specified operation. Requires the field `OR:4:completionPendingDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:condition_Mod",
            "description": "Filter results by Condition using the specified operation. Requires the field `OR:4:condition`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:constraintDate_Mod",
            "description": "Filter results by Constraint Date using the specified operation. Requires the field `OR:4:constraintDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:convertedOpTaskEntryDate_Mod",
            "description": "Filter results by convertedOpTaskEntryDate using the specified operation. Requires the field `OR:4:convertedOpTaskEntryDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:convertedOpTaskName_Mod",
            "description": "Filter results by convertedOpTaskName using the specified operation. Requires the field `OR:4:convertedOpTaskName`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:convertedOpTaskOriginatorID_Mod",
            "description": "Filter results by convertedOpTaskOriginatorID using the specified operation. Requires the field `OR:4:convertedOpTaskOriginatorID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:costAmount_Mod",
            "description": "Filter results by Cost Amount using the specified operation. Requires the field `OR:4:costAmount`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:costType_Mod",
            "description": "Filter results by Cost Type using the specified operation. Requires the field `OR:4:costType`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:cpi_Mod",
            "description": "Filter results by Cost Performance Index using the specified operation. Requires the field `OR:4:cpi`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:csi_Mod",
            "description": "Filter results by Cost Schedule Performance Index using the specified operation. Requires the field `OR:4:csi`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:currentApprovalStepID_Mod",
            "description": "Filter results by Current Approval Stage ID using the specified operation. Requires the field `OR:4:currentApprovalStepID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:customerID_Mod",
            "description": "Filter results by Customer ID using the specified operation. Requires the field `OR:4:customerID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:description_Mod",
            "description": "Filter results by Description using the specified operation. Requires the field `OR:4:description`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:duration_Mod",
            "description": "Filter results by Duration using the specified operation. Requires the field `OR:4:duration`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:durationMinutes_Mod",
            "description": "Filter results by Duration in Minutes using the specified operation. Requires the field `OR:4:durationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:durationType_Mod",
            "description": "Filter results by Duration Type using the specified operation. Requires the field `OR:4:durationType`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:durationUnit_Mod",
            "description": "Filter results by Duration Unit using the specified operation. Requires the field `OR:4:durationUnit`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:eac_Mod",
            "description": "Filter results by EAC using the specified operation. Requires the field `OR:4:eac`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:enteredByID_Mod",
            "description": "Filter results by Entered By ID using the specified operation. Requires the field `OR:4:enteredByID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:entryDate_Mod",
            "description": "Filter results by Entry Date using the specified operation. Requires the field `OR:4:entryDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:estCompletionDate_Mod",
            "description": "Filter results by Estimated Due Date using the specified operation. Requires the field `OR:4:estCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:estStartDate_Mod",
            "description": "Filter results by Estimated Start Date using the specified operation. Requires the field `OR:4:estStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:extRefID_Mod",
            "description": "Filter results by External Reference ID using the specified operation. Requires the field `OR:4:extRefID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:groupID_Mod",
            "description": "Filter results by Group ID using the specified operation. Requires the field `OR:4:groupID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:handoffDate_Mod",
            "description": "Filter results by Handoff Date using the specified operation. Requires the field `OR:4:handoffDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasDocuments_Mod",
            "description": "Filter results by Has Documents using the specified operation. Requires the field `OR:4:hasDocuments`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasExpenses_Mod",
            "description": "Filter results by Has Expenses using the specified operation. Requires the field `OR:4:hasExpenses`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasMessages_Mod",
            "description": "Filter results by Has Messages using the specified operation. Requires the field `OR:4:hasMessages`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasNotes_Mod",
            "description": "Filter results by Has Notes using the specified operation. Requires the field `OR:4:hasNotes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasResolvables_Mod",
            "description": "Filter results by Has Resolvables using the specified operation. Requires the field `OR:4:hasResolvables`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasTimedNotifications_Mod",
            "description": "Filter results by Has Reminder Notifications using the specified operation. Requires the field `OR:4:hasTimedNotifications`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hoursPerPoint_Mod",
            "description": "Filter results by hoursPerPoint using the specified operation. Requires the field `OR:4:hoursPerPoint`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:indent_Mod",
            "description": "Filter results by Indent using the specified operation. Requires the field `OR:4:indent`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isAgile_Mod",
            "description": "Filter results by Agile using the specified operation. Requires the field `OR:4:isAgile`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isCritical_Mod",
            "description": "Filter results by Is Critical using the specified operation. Requires the field `OR:4:isCritical`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isDurationLocked_Mod",
            "description": "Filter results by Duration Locked using the specified operation. Requires the field `OR:4:isDurationLocked`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isLevelingExcluded_Mod",
            "description": "Filter results by Exclude from Leveling using the specified operation. Requires the field `OR:4:isLevelingExcluded`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isReady_Mod",
            "description": "Filter results by Ready using the specified operation. Requires the field `OR:4:isReady`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isWorkRequiredLocked_Mod",
            "description": "Filter results by Worked Locked using the specified operation. Requires the field `OR:4:isWorkRequiredLocked`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:iterationID_Mod",
            "description": "Filter results by Iteration ID using the specified operation. Requires the field `OR:4:iterationID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:kanbanBoardID_Mod",
            "description": "Filter results by Kanban Board ID using the specified operation. Requires the field `OR:4:kanbanBoardID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:kanbanFlag_Mod",
            "description": "Filter results by Kanban Flag using the specified operation. Requires the field `OR:4:kanbanFlag`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastConditionNoteID_Mod",
            "description": "Filter results by Last Condition Note ID using the specified operation. Requires the field `OR:4:lastConditionNoteID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastNoteID_Mod",
            "description": "Filter results by Last Note ID using the specified operation. Requires the field `OR:4:lastNoteID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastUpdateDate_Mod",
            "description": "Filter results by Last Update Date using the specified operation. Requires the field `OR:4:lastUpdateDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastUpdatedByID_Mod",
            "description": "Filter results by Last Updated By ID using the specified operation. Requires the field `OR:4:lastUpdatedByID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:levelingStartDelay_Mod",
            "description": "Filter results by Leveling Delay using the specified operation. Requires the field `OR:4:levelingStartDelay`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:levelingStartDelayMinutes_Mod",
            "description": "Filter results by levelingStartDelayMinutes using the specified operation. Requires the field `OR:4:levelingStartDelayMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:milestoneID_Mod",
            "description": "Filter results by Milestone ID using the specified operation. Requires the field `OR:4:milestoneID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:name_Mod",
            "description": "Filter results by Name using the specified operation. Requires the field `OR:4:name`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:numberOfChildren_Mod",
            "description": "Filter results by Number of Children using the specified operation. Requires the field `OR:4:numberOfChildren`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:numberOpenOpTasks_Mod",
            "description": "Filter results by Number of Open Issues using the specified operation. Requires the field `OR:4:numberOpenOpTasks`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:originalDuration_Mod",
            "description": "Filter results by Original Duration using the specified operation. Requires the field `OR:4:originalDuration`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:originalWorkRequired_Mod",
            "description": "Filter results by Original Planned Hours using the specified operation. Requires the field `OR:4:originalWorkRequired`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:parentID_Mod",
            "description": "Filter results by Parent ID using the specified operation. Requires the field `OR:4:parentID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:parentLag_Mod",
            "description": "Filter results by Parent Lag using the specified operation. Requires the field `OR:4:parentLag`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:parentLagType_Mod",
            "description": "Filter results by Parent Lag Type using the specified operation. Requires the field `OR:4:parentLagType`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:pendingCalculation_Mod",
            "description": "Filter results by pendingCalculation using the specified operation. Requires the field `OR:4:pendingCalculation`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:pendingUpdateMethods_Mod",
            "description": "Filter results by pendingUpdateMethods using the specified operation. Requires the field `OR:4:pendingUpdateMethods`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:percentComplete_Mod",
            "description": "Filter results by Percent Complete using the specified operation. Requires the field `OR:4:percentComplete`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:personal_Mod",
            "description": "Filter results by Personal using the specified operation. Requires the field `OR:4:personal`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedCompletionDate_Mod",
            "description": "Filter results by Planned Completion Date using the specified operation. Requires the field `OR:4:plannedCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedCost_Mod",
            "description": "Filter results by Planned Cost using the specified operation. Requires the field `OR:4:plannedCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedDuration_Mod",
            "description": "Filter results by Planned Duration using the specified operation. Requires the field `OR:4:plannedDuration`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedDurationMinutes_Mod",
            "description": "Filter results by Planned Duration Minutes using the specified operation. Requires the field `OR:4:plannedDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedExpenseCost_Mod",
            "description": "Filter results by Planned Expense Cost using the specified operation. Requires the field `OR:4:plannedExpenseCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedLaborCost_Mod",
            "description": "Filter results by Planned Labor Cost using the specified operation. Requires the field `OR:4:plannedLaborCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedRevenue_Mod",
            "description": "Filter results by Planned Revenue using the specified operation. Requires the field `OR:4:plannedRevenue`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedStartDate_Mod",
            "description": "Filter results by Planned Start Date using the specified operation. Requires the field `OR:4:plannedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:previousStatus_Mod",
            "description": "Filter results by Previous Status using the specified operation. Requires the field `OR:4:previousStatus`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:priority_Mod",
            "description": "Filter results by Priority using the specified operation. Requires the field `OR:4:priority`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:progressStatus_Mod",
            "description": "Filter results by Progress Status using the specified operation. Requires the field `OR:4:progressStatus`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:projectID_Mod",
            "description": "Filter results by Project ID using the specified operation. Requires the field `OR:4:projectID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:projectedCompletionDate_Mod",
            "description": "Filter results by Projected Completion Date using the specified operation. Requires the field `OR:4:projectedCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:projectedDurationMinutes_Mod",
            "description": "Filter results by Projected Duration Minutes using the specified operation. Requires the field `OR:4:projectedDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:projectedStartDate_Mod",
            "description": "Filter results by Projected Start Date using the specified operation. Requires the field `OR:4:projectedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:recurrenceNumber_Mod",
            "description": "Filter results by Recurrence Number using the specified operation. Requires the field `OR:4:recurrenceNumber`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:recurrenceRuleID_Mod",
            "description": "Filter results by Recurrence Rule ID using the specified operation. Requires the field `OR:4:recurrenceRuleID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:referenceNumber_Mod",
            "description": "Filter results by Reference Number using the specified operation. Requires the field `OR:4:referenceNumber`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:rejectionIssueID_Mod",
            "description": "Filter results by Rejection Issue ID using the specified operation. Requires the field `OR:4:rejectionIssueID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:remainingDurationMinutes_Mod",
            "description": "Filter results by Remaining Duration Minutes using the specified operation. Requires the field `OR:4:remainingDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:reservedTimeID_Mod",
            "description": "Filter results by Time Off ID using the specified operation. Requires the field `OR:4:reservedTimeID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:resourceScope_Mod",
            "description": "Filter results by Resource Scope using the specified operation. Requires the field `OR:4:resourceScope`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:revenueType_Mod",
            "description": "Filter results by Revenue Type using the specified operation. Requires the field `OR:4:revenueType`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:roleID_Mod",
            "description": "Filter results by Role ID using the specified operation. Requires the field `OR:4:roleID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:securityRootID_Mod",
            "description": "Filter results by securityRootID using the specified operation. Requires the field `OR:4:securityRootID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:securityRootObjCode_Mod",
            "description": "Filter results by securityRootObjCode using the specified operation. Requires the field `OR:4:securityRootObjCode`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:slackDate_Mod",
            "description": "Filter results by Slack Date using the specified operation. Requires the field `OR:4:slackDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:spi_Mod",
            "description": "Filter results by Schedule Performance Index using the specified operation. Requires the field `OR:4:spi`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:status_Mod",
            "description": "Filter results by Status using the specified operation. Requires the field `OR:4:status`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:statusUpdate_Mod",
            "description": "Filter results by Status Update using the specified operation. Requires the field `OR:4:statusUpdate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:submittedByID_Mod",
            "description": "Filter results by Submitted By ID using the specified operation. Requires the field `OR:4:submittedByID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:taskConstraint_Mod",
            "description": "Filter results by Task Constraint using the specified operation. Requires the field `OR:4:taskConstraint`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:taskNumber_Mod",
            "description": "Filter results by Task Number using the specified operation. Requires the field `OR:4:taskNumber`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:teamID_Mod",
            "description": "Filter results by Team ID using the specified operation. Requires the field `OR:4:teamID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:templateTaskID_Mod",
            "description": "Filter results by Template Task ID using the specified operation. Requires the field `OR:4:templateTaskID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:trackingMode_Mod",
            "description": "Filter results by Tracking Mode using the specified operation. Requires the field `OR:4:trackingMode`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:version_Mod",
            "description": "Filter results by Version using the specified operation. Requires the field `OR:4:version`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:wbs_Mod",
            "description": "Filter results by Work Breakdown Structure using the specified operation. Requires the field `OR:4:wbs`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:work_Mod",
            "description": "Filter results by Work using the specified operation. Requires the field `OR:4:work`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:workRequired_Mod",
            "description": "Filter results by Planned Hours using the specified operation. Requires the field `OR:4:workRequired`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:ID",
            "description": "Filter results by OR group 3 applied to ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:URL",
            "description": "Filter results by OR group 3 applied to URL. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualCompletionDate",
            "description": "Filter results by OR group 3 applied to Actual Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualCost",
            "description": "Filter results by OR group 3 applied to Actual Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualDuration",
            "description": "Filter results by OR group 3 applied to Actual Duration. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualDurationMinutes",
            "description": "Filter results by OR group 3 applied to Actual Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualExpenseCost",
            "description": "Filter results by OR group 3 applied to Actual Expense Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualLaborCost",
            "description": "Filter results by OR group 3 applied to Actual Labor Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualRevenue",
            "description": "Filter results by OR group 3 applied to Actual Revenue. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualStartDate",
            "description": "Filter results by OR group 3 applied to Actual Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualWork",
            "description": "Filter results by OR group 3 applied to Actual Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualWorkRequired",
            "description": "Filter results by OR group 3 applied to Actual Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:approvalCompletionDate",
            "description": "Filter results by OR group 3 applied to Approval Path Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:approvalEstStartDate",
            "description": "Filter results by OR group 3 applied to Approval Estimated Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:approvalPlannedStartDate",
            "description": "Filter results by OR group 3 applied to Approval Planned Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:approvalProcessID",
            "description": "Filter results by OR group 3 applied to Approval Processes ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:approvalProjectedStartDate",
            "description": "Filter results by OR group 3 applied to Approval Projected Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:approvalStartDate",
            "description": "Filter results by OR group 3 applied to Approval Path Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:assignedToID",
            "description": "Filter results by OR group 3 applied to Assigned To ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:auditTypes",
            "description": "Filter results by OR group 3 applied to Audit Types. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/22/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:backlogOrder",
            "description": "Filter results by OR group 3 applied to Order. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:billingAmount",
            "description": "Filter results by OR group 3 applied to Cap or Fixed Amount. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:billingRecordID",
            "description": "Filter results by OR group 3 applied to Billing Record ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:canStart",
            "description": "Filter results by OR group 3 applied to Can Start. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:categoryID",
            "description": "Filter results by OR group 3 applied to Category ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:color",
            "description": "Filter results by OR group 3 applied to Color. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:commitDate",
            "description": "Filter results by OR group 3 applied to Commit Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:completionPendingDate",
            "description": "Filter results by OR group 3 applied to Completion Pending Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:condition",
            "description": "Filter results by OR group 3 applied to Condition. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/33/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.ConditionEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:constraintDate",
            "description": "Filter results by OR group 3 applied to Constraint Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:convertedOpTaskEntryDate",
            "description": "Filter results by OR group 3 applied to convertedOpTaskEntryDate. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:convertedOpTaskName",
            "description": "Filter results by OR group 3 applied to convertedOpTaskName. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:convertedOpTaskOriginatorID",
            "description": "Filter results by OR group 3 applied to convertedOpTaskOriginatorID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:costAmount",
            "description": "Filter results by OR group 3 applied to Cost Amount. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:costType",
            "description": "Filter results by OR group 3 applied to Cost Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.CostTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:cpi",
            "description": "Filter results by OR group 3 applied to Cost Performance Index. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:csi",
            "description": "Filter results by OR group 3 applied to Cost Schedule Performance Index. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:currentApprovalStepID",
            "description": "Filter results by OR group 3 applied to Current Approval Stage ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:customerID",
            "description": "Filter results by OR group 3 applied to Customer ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:description",
            "description": "Filter results by OR group 3 applied to Description. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:duration",
            "description": "Filter results by OR group 3 applied to Duration. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:durationMinutes",
            "description": "Filter results by OR group 3 applied to Duration in Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:durationType",
            "description": "Filter results by OR group 3 applied to Duration Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/49/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:durationUnit",
            "description": "Filter results by OR group 3 applied to Duration Unit. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/50/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationUnitEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:eac",
            "description": "Filter results by OR group 3 applied to EAC. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:enteredByID",
            "description": "Filter results by OR group 3 applied to Entered By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:entryDate",
            "description": "Filter results by OR group 3 applied to Entry Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:estCompletionDate",
            "description": "Filter results by OR group 3 applied to Estimated Due Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:estStartDate",
            "description": "Filter results by OR group 3 applied to Estimated Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:extRefID",
            "description": "Filter results by OR group 3 applied to External Reference ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:groupID",
            "description": "Filter results by OR group 3 applied to Group ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:handoffDate",
            "description": "Filter results by OR group 3 applied to Handoff Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasDocuments",
            "description": "Filter results by OR group 3 applied to Has Documents. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasExpenses",
            "description": "Filter results by OR group 3 applied to Has Expenses. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasMessages",
            "description": "Filter results by OR group 3 applied to Has Messages. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasNotes",
            "description": "Filter results by OR group 3 applied to Has Notes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasResolvables",
            "description": "Filter results by OR group 3 applied to Has Resolvables. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasTimedNotifications",
            "description": "Filter results by OR group 3 applied to Has Reminder Notifications. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hoursPerPoint",
            "description": "Filter results by OR group 3 applied to hoursPerPoint. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:indent",
            "description": "Filter results by OR group 3 applied to Indent. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isAgile",
            "description": "Filter results by OR group 3 applied to Agile. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isCritical",
            "description": "Filter results by OR group 3 applied to Is Critical. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isDurationLocked",
            "description": "Filter results by OR group 3 applied to Duration Locked. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isLevelingExcluded",
            "description": "Filter results by OR group 3 applied to Exclude from Leveling. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isReady",
            "description": "Filter results by OR group 3 applied to Ready. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isWorkRequiredLocked",
            "description": "Filter results by OR group 3 applied to Worked Locked. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:iterationID",
            "description": "Filter results by OR group 3 applied to Iteration ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:kanbanBoardID",
            "description": "Filter results by OR group 3 applied to Kanban Board ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:kanbanFlag",
            "description": "Filter results by OR group 3 applied to Kanban Flag. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/76/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.KanbanFlagEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastConditionNoteID",
            "description": "Filter results by OR group 3 applied to Last Condition Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastNoteID",
            "description": "Filter results by OR group 3 applied to Last Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastUpdateDate",
            "description": "Filter results by OR group 3 applied to Last Update Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastUpdatedByID",
            "description": "Filter results by OR group 3 applied to Last Updated By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:levelingStartDelay",
            "description": "Filter results by OR group 3 applied to Leveling Delay. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:levelingStartDelayMinutes",
            "description": "Filter results by OR group 3 applied to levelingStartDelayMinutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:milestoneID",
            "description": "Filter results by OR group 3 applied to Milestone ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:name",
            "description": "Filter results by OR group 3 applied to Name. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:numberOfChildren",
            "description": "Filter results by OR group 3 applied to Number of Children. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:numberOpenOpTasks",
            "description": "Filter results by OR group 3 applied to Number of Open Issues. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:originalDuration",
            "description": "Filter results by OR group 3 applied to Original Duration. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:originalWorkRequired",
            "description": "Filter results by OR group 3 applied to Original Planned Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:parentID",
            "description": "Filter results by OR group 3 applied to Parent ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:parentLag",
            "description": "Filter results by OR group 3 applied to Parent Lag. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:parentLagType",
            "description": "Filter results by OR group 3 applied to Parent Lag Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/92/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.LagTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:pendingCalculation",
            "description": "Filter results by OR group 3 applied to pendingCalculation. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:pendingUpdateMethods",
            "description": "Filter results by OR group 3 applied to pendingUpdateMethods. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:percentComplete",
            "description": "Filter results by OR group 3 applied to Percent Complete. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:personal",
            "description": "Filter results by OR group 3 applied to Personal. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedCompletionDate",
            "description": "Filter results by OR group 3 applied to Planned Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedCost",
            "description": "Filter results by OR group 3 applied to Planned Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedDuration",
            "description": "Filter results by OR group 3 applied to Planned Duration. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedDurationMinutes",
            "description": "Filter results by OR group 3 applied to Planned Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedExpenseCost",
            "description": "Filter results by OR group 3 applied to Planned Expense Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedLaborCost",
            "description": "Filter results by OR group 3 applied to Planned Labor Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedRevenue",
            "description": "Filter results by OR group 3 applied to Planned Revenue. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedStartDate",
            "description": "Filter results by OR group 3 applied to Planned Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:previousStatus",
            "description": "Filter results by OR group 3 applied to Previous Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/106/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:priority",
            "description": "Filter results by OR group 3 applied to Priority. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/107/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:progressStatus",
            "description": "Filter results by OR group 3 applied to Progress Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/109/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.ProgressStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:projectID",
            "description": "Filter results by OR group 3 applied to Project ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:projectedCompletionDate",
            "description": "Filter results by OR group 3 applied to Projected Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:projectedDurationMinutes",
            "description": "Filter results by OR group 3 applied to Projected Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:projectedStartDate",
            "description": "Filter results by OR group 3 applied to Projected Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:recurrenceNumber",
            "description": "Filter results by OR group 3 applied to Recurrence Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:recurrenceRuleID",
            "description": "Filter results by OR group 3 applied to Recurrence Rule ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:referenceNumber",
            "description": "Filter results by OR group 3 applied to Reference Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:rejectionIssueID",
            "description": "Filter results by OR group 3 applied to Rejection Issue ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:remainingDurationMinutes",
            "description": "Filter results by OR group 3 applied to Remaining Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:reservedTimeID",
            "description": "Filter results by OR group 3 applied to Time Off ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:resourceScope",
            "description": "Filter results by OR group 3 applied to Resource Scope. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/120/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskResourceScopeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:revenueType",
            "description": "Filter results by OR group 3 applied to Revenue Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/121/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.RevenueTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:roleID",
            "description": "Filter results by OR group 3 applied to Role ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:securityRootID",
            "description": "Filter results by OR group 3 applied to securityRootID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:securityRootObjCode",
            "description": "Filter results by OR group 3 applied to securityRootObjCode. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:slackDate",
            "description": "Filter results by OR group 3 applied to Slack Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/125/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/date.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:spi",
            "description": "Filter results by OR group 3 applied to Schedule Performance Index. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:status",
            "description": "Filter results by OR group 3 applied to Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/106/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:statusUpdate",
            "description": "Filter results by OR group 3 applied to Status Update. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:submittedByID",
            "description": "Filter results by OR group 3 applied to Submitted By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:taskConstraint",
            "description": "Filter results by OR group 3 applied to Task Constraint. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/131/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskConstraintEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:taskNumber",
            "description": "Filter results by OR group 3 applied to Task Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:teamID",
            "description": "Filter results by OR group 3 applied to Team ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:templateTaskID",
            "description": "Filter results by OR group 3 applied to Template Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:trackingMode",
            "description": "Filter results by OR group 3 applied to Tracking Mode. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/135/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskTrackingModeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:version",
            "description": "Filter results by OR group 3 applied to Version. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:wbs",
            "description": "Filter results by OR group 3 applied to Work Breakdown Structure. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:work",
            "description": "Filter results by OR group 3 applied to Work. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:workRequired",
            "description": "Filter results by OR group 3 applied to Planned Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:ID_Mod",
            "description": "Filter results by ID using the specified operation. Requires the field `OR:3:ID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:URL_Mod",
            "description": "Filter results by URL using the specified operation. Requires the field `OR:3:URL`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualCompletionDate_Mod",
            "description": "Filter results by Actual Completion Date using the specified operation. Requires the field `OR:3:actualCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualCost_Mod",
            "description": "Filter results by Actual Cost using the specified operation. Requires the field `OR:3:actualCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualDuration_Mod",
            "description": "Filter results by Actual Duration using the specified operation. Requires the field `OR:3:actualDuration`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualDurationMinutes_Mod",
            "description": "Filter results by Actual Duration Minutes using the specified operation. Requires the field `OR:3:actualDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualExpenseCost_Mod",
            "description": "Filter results by Actual Expense Cost using the specified operation. Requires the field `OR:3:actualExpenseCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualLaborCost_Mod",
            "description": "Filter results by Actual Labor Cost using the specified operation. Requires the field `OR:3:actualLaborCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualRevenue_Mod",
            "description": "Filter results by Actual Revenue using the specified operation. Requires the field `OR:3:actualRevenue`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualStartDate_Mod",
            "description": "Filter results by Actual Start Date using the specified operation. Requires the field `OR:3:actualStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualWork_Mod",
            "description": "Filter results by Actual Hours using the specified operation. Requires the field `OR:3:actualWork`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualWorkRequired_Mod",
            "description": "Filter results by Actual Hours using the specified operation. Requires the field `OR:3:actualWorkRequired`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:approvalCompletionDate_Mod",
            "description": "Filter results by Approval Path Completion Date using the specified operation. Requires the field `OR:3:approvalCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:approvalEstStartDate_Mod",
            "description": "Filter results by Approval Estimated Start Date using the specified operation. Requires the field `OR:3:approvalEstStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:approvalPlannedStartDate_Mod",
            "description": "Filter results by Approval Planned Start Date using the specified operation. Requires the field `OR:3:approvalPlannedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:approvalProcessID_Mod",
            "description": "Filter results by Approval Processes ID using the specified operation. Requires the field `OR:3:approvalProcessID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:approvalProjectedStartDate_Mod",
            "description": "Filter results by Approval Projected Start Date using the specified operation. Requires the field `OR:3:approvalProjectedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:approvalStartDate_Mod",
            "description": "Filter results by Approval Path Start Date using the specified operation. Requires the field `OR:3:approvalStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:assignedToID_Mod",
            "description": "Filter results by Assigned To ID using the specified operation. Requires the field `OR:3:assignedToID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:auditTypes_Mod",
            "description": "Filter results by Audit Types using the specified operation. Requires the field `OR:3:auditTypes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:backlogOrder_Mod",
            "description": "Filter results by Order using the specified operation. Requires the field `OR:3:backlogOrder`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:billingAmount_Mod",
            "description": "Filter results by Cap or Fixed Amount using the specified operation. Requires the field `OR:3:billingAmount`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:billingRecordID_Mod",
            "description": "Filter results by Billing Record ID using the specified operation. Requires the field `OR:3:billingRecordID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:canStart_Mod",
            "description": "Filter results by Can Start using the specified operation. Requires the field `OR:3:canStart`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:categoryID_Mod",
            "description": "Filter results by Category ID using the specified operation. Requires the field `OR:3:categoryID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:color_Mod",
            "description": "Filter results by Color using the specified operation. Requires the field `OR:3:color`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:commitDate_Mod",
            "description": "Filter results by Commit Date using the specified operation. Requires the field `OR:3:commitDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:completionPendingDate_Mod",
            "description": "Filter results by Completion Pending Date using the specified operation. Requires the field `OR:3:completionPendingDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:condition_Mod",
            "description": "Filter results by Condition using the specified operation. Requires the field `OR:3:condition`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:constraintDate_Mod",
            "description": "Filter results by Constraint Date using the specified operation. Requires the field `OR:3:constraintDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:convertedOpTaskEntryDate_Mod",
            "description": "Filter results by convertedOpTaskEntryDate using the specified operation. Requires the field `OR:3:convertedOpTaskEntryDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:convertedOpTaskName_Mod",
            "description": "Filter results by convertedOpTaskName using the specified operation. Requires the field `OR:3:convertedOpTaskName`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:convertedOpTaskOriginatorID_Mod",
            "description": "Filter results by convertedOpTaskOriginatorID using the specified operation. Requires the field `OR:3:convertedOpTaskOriginatorID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:costAmount_Mod",
            "description": "Filter results by Cost Amount using the specified operation. Requires the field `OR:3:costAmount`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:costType_Mod",
            "description": "Filter results by Cost Type using the specified operation. Requires the field `OR:3:costType`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:cpi_Mod",
            "description": "Filter results by Cost Performance Index using the specified operation. Requires the field `OR:3:cpi`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:csi_Mod",
            "description": "Filter results by Cost Schedule Performance Index using the specified operation. Requires the field `OR:3:csi`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:currentApprovalStepID_Mod",
            "description": "Filter results by Current Approval Stage ID using the specified operation. Requires the field `OR:3:currentApprovalStepID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:customerID_Mod",
            "description": "Filter results by Customer ID using the specified operation. Requires the field `OR:3:customerID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:description_Mod",
            "description": "Filter results by Description using the specified operation. Requires the field `OR:3:description`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:duration_Mod",
            "description": "Filter results by Duration using the specified operation. Requires the field `OR:3:duration`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:durationMinutes_Mod",
            "description": "Filter results by Duration in Minutes using the specified operation. Requires the field `OR:3:durationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:durationType_Mod",
            "description": "Filter results by Duration Type using the specified operation. Requires the field `OR:3:durationType`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:durationUnit_Mod",
            "description": "Filter results by Duration Unit using the specified operation. Requires the field `OR:3:durationUnit`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:eac_Mod",
            "description": "Filter results by EAC using the specified operation. Requires the field `OR:3:eac`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:enteredByID_Mod",
            "description": "Filter results by Entered By ID using the specified operation. Requires the field `OR:3:enteredByID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:entryDate_Mod",
            "description": "Filter results by Entry Date using the specified operation. Requires the field `OR:3:entryDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:estCompletionDate_Mod",
            "description": "Filter results by Estimated Due Date using the specified operation. Requires the field `OR:3:estCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:estStartDate_Mod",
            "description": "Filter results by Estimated Start Date using the specified operation. Requires the field `OR:3:estStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:extRefID_Mod",
            "description": "Filter results by External Reference ID using the specified operation. Requires the field `OR:3:extRefID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:groupID_Mod",
            "description": "Filter results by Group ID using the specified operation. Requires the field `OR:3:groupID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:handoffDate_Mod",
            "description": "Filter results by Handoff Date using the specified operation. Requires the field `OR:3:handoffDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasDocuments_Mod",
            "description": "Filter results by Has Documents using the specified operation. Requires the field `OR:3:hasDocuments`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasExpenses_Mod",
            "description": "Filter results by Has Expenses using the specified operation. Requires the field `OR:3:hasExpenses`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasMessages_Mod",
            "description": "Filter results by Has Messages using the specified operation. Requires the field `OR:3:hasMessages`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasNotes_Mod",
            "description": "Filter results by Has Notes using the specified operation. Requires the field `OR:3:hasNotes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasResolvables_Mod",
            "description": "Filter results by Has Resolvables using the specified operation. Requires the field `OR:3:hasResolvables`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasTimedNotifications_Mod",
            "description": "Filter results by Has Reminder Notifications using the specified operation. Requires the field `OR:3:hasTimedNotifications`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hoursPerPoint_Mod",
            "description": "Filter results by hoursPerPoint using the specified operation. Requires the field `OR:3:hoursPerPoint`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:indent_Mod",
            "description": "Filter results by Indent using the specified operation. Requires the field `OR:3:indent`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isAgile_Mod",
            "description": "Filter results by Agile using the specified operation. Requires the field `OR:3:isAgile`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isCritical_Mod",
            "description": "Filter results by Is Critical using the specified operation. Requires the field `OR:3:isCritical`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isDurationLocked_Mod",
            "description": "Filter results by Duration Locked using the specified operation. Requires the field `OR:3:isDurationLocked`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isLevelingExcluded_Mod",
            "description": "Filter results by Exclude from Leveling using the specified operation. Requires the field `OR:3:isLevelingExcluded`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isReady_Mod",
            "description": "Filter results by Ready using the specified operation. Requires the field `OR:3:isReady`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isWorkRequiredLocked_Mod",
            "description": "Filter results by Worked Locked using the specified operation. Requires the field `OR:3:isWorkRequiredLocked`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:iterationID_Mod",
            "description": "Filter results by Iteration ID using the specified operation. Requires the field `OR:3:iterationID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:kanbanBoardID_Mod",
            "description": "Filter results by Kanban Board ID using the specified operation. Requires the field `OR:3:kanbanBoardID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:kanbanFlag_Mod",
            "description": "Filter results by Kanban Flag using the specified operation. Requires the field `OR:3:kanbanFlag`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastConditionNoteID_Mod",
            "description": "Filter results by Last Condition Note ID using the specified operation. Requires the field `OR:3:lastConditionNoteID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastNoteID_Mod",
            "description": "Filter results by Last Note ID using the specified operation. Requires the field `OR:3:lastNoteID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastUpdateDate_Mod",
            "description": "Filter results by Last Update Date using the specified operation. Requires the field `OR:3:lastUpdateDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastUpdatedByID_Mod",
            "description": "Filter results by Last Updated By ID using the specified operation. Requires the field `OR:3:lastUpdatedByID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:levelingStartDelay_Mod",
            "description": "Filter results by Leveling Delay using the specified operation. Requires the field `OR:3:levelingStartDelay`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:levelingStartDelayMinutes_Mod",
            "description": "Filter results by levelingStartDelayMinutes using the specified operation. Requires the field `OR:3:levelingStartDelayMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:milestoneID_Mod",
            "description": "Filter results by Milestone ID using the specified operation. Requires the field `OR:3:milestoneID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:name_Mod",
            "description": "Filter results by Name using the specified operation. Requires the field `OR:3:name`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:numberOfChildren_Mod",
            "description": "Filter results by Number of Children using the specified operation. Requires the field `OR:3:numberOfChildren`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:numberOpenOpTasks_Mod",
            "description": "Filter results by Number of Open Issues using the specified operation. Requires the field `OR:3:numberOpenOpTasks`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:originalDuration_Mod",
            "description": "Filter results by Original Duration using the specified operation. Requires the field `OR:3:originalDuration`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:originalWorkRequired_Mod",
            "description": "Filter results by Original Planned Hours using the specified operation. Requires the field `OR:3:originalWorkRequired`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:parentID_Mod",
            "description": "Filter results by Parent ID using the specified operation. Requires the field `OR:3:parentID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:parentLag_Mod",
            "description": "Filter results by Parent Lag using the specified operation. Requires the field `OR:3:parentLag`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:parentLagType_Mod",
            "description": "Filter results by Parent Lag Type using the specified operation. Requires the field `OR:3:parentLagType`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:pendingCalculation_Mod",
            "description": "Filter results by pendingCalculation using the specified operation. Requires the field `OR:3:pendingCalculation`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:pendingUpdateMethods_Mod",
            "description": "Filter results by pendingUpdateMethods using the specified operation. Requires the field `OR:3:pendingUpdateMethods`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:percentComplete_Mod",
            "description": "Filter results by Percent Complete using the specified operation. Requires the field `OR:3:percentComplete`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:personal_Mod",
            "description": "Filter results by Personal using the specified operation. Requires the field `OR:3:personal`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedCompletionDate_Mod",
            "description": "Filter results by Planned Completion Date using the specified operation. Requires the field `OR:3:plannedCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedCost_Mod",
            "description": "Filter results by Planned Cost using the specified operation. Requires the field `OR:3:plannedCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedDuration_Mod",
            "description": "Filter results by Planned Duration using the specified operation. Requires the field `OR:3:plannedDuration`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedDurationMinutes_Mod",
            "description": "Filter results by Planned Duration Minutes using the specified operation. Requires the field `OR:3:plannedDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedExpenseCost_Mod",
            "description": "Filter results by Planned Expense Cost using the specified operation. Requires the field `OR:3:plannedExpenseCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedLaborCost_Mod",
            "description": "Filter results by Planned Labor Cost using the specified operation. Requires the field `OR:3:plannedLaborCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedRevenue_Mod",
            "description": "Filter results by Planned Revenue using the specified operation. Requires the field `OR:3:plannedRevenue`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedStartDate_Mod",
            "description": "Filter results by Planned Start Date using the specified operation. Requires the field `OR:3:plannedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:previousStatus_Mod",
            "description": "Filter results by Previous Status using the specified operation. Requires the field `OR:3:previousStatus`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:priority_Mod",
            "description": "Filter results by Priority using the specified operation. Requires the field `OR:3:priority`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:progressStatus_Mod",
            "description": "Filter results by Progress Status using the specified operation. Requires the field `OR:3:progressStatus`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:projectID_Mod",
            "description": "Filter results by Project ID using the specified operation. Requires the field `OR:3:projectID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:projectedCompletionDate_Mod",
            "description": "Filter results by Projected Completion Date using the specified operation. Requires the field `OR:3:projectedCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:projectedDurationMinutes_Mod",
            "description": "Filter results by Projected Duration Minutes using the specified operation. Requires the field `OR:3:projectedDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:projectedStartDate_Mod",
            "description": "Filter results by Projected Start Date using the specified operation. Requires the field `OR:3:projectedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:recurrenceNumber_Mod",
            "description": "Filter results by Recurrence Number using the specified operation. Requires the field `OR:3:recurrenceNumber`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:recurrenceRuleID_Mod",
            "description": "Filter results by Recurrence Rule ID using the specified operation. Requires the field `OR:3:recurrenceRuleID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:referenceNumber_Mod",
            "description": "Filter results by Reference Number using the specified operation. Requires the field `OR:3:referenceNumber`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:rejectionIssueID_Mod",
            "description": "Filter results by Rejection Issue ID using the specified operation. Requires the field `OR:3:rejectionIssueID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:remainingDurationMinutes_Mod",
            "description": "Filter results by Remaining Duration Minutes using the specified operation. Requires the field `OR:3:remainingDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:reservedTimeID_Mod",
            "description": "Filter results by Time Off ID using the specified operation. Requires the field `OR:3:reservedTimeID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:resourceScope_Mod",
            "description": "Filter results by Resource Scope using the specified operation. Requires the field `OR:3:resourceScope`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:revenueType_Mod",
            "description": "Filter results by Revenue Type using the specified operation. Requires the field `OR:3:revenueType`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:roleID_Mod",
            "description": "Filter results by Role ID using the specified operation. Requires the field `OR:3:roleID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:securityRootID_Mod",
            "description": "Filter results by securityRootID using the specified operation. Requires the field `OR:3:securityRootID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:securityRootObjCode_Mod",
            "description": "Filter results by securityRootObjCode using the specified operation. Requires the field `OR:3:securityRootObjCode`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:slackDate_Mod",
            "description": "Filter results by Slack Date using the specified operation. Requires the field `OR:3:slackDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:spi_Mod",
            "description": "Filter results by Schedule Performance Index using the specified operation. Requires the field `OR:3:spi`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:status_Mod",
            "description": "Filter results by Status using the specified operation. Requires the field `OR:3:status`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:statusUpdate_Mod",
            "description": "Filter results by Status Update using the specified operation. Requires the field `OR:3:statusUpdate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:submittedByID_Mod",
            "description": "Filter results by Submitted By ID using the specified operation. Requires the field `OR:3:submittedByID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:taskConstraint_Mod",
            "description": "Filter results by Task Constraint using the specified operation. Requires the field `OR:3:taskConstraint`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:taskNumber_Mod",
            "description": "Filter results by Task Number using the specified operation. Requires the field `OR:3:taskNumber`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:teamID_Mod",
            "description": "Filter results by Team ID using the specified operation. Requires the field `OR:3:teamID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:templateTaskID_Mod",
            "description": "Filter results by Template Task ID using the specified operation. Requires the field `OR:3:templateTaskID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:trackingMode_Mod",
            "description": "Filter results by Tracking Mode using the specified operation. Requires the field `OR:3:trackingMode`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:version_Mod",
            "description": "Filter results by Version using the specified operation. Requires the field `OR:3:version`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:wbs_Mod",
            "description": "Filter results by Work Breakdown Structure using the specified operation. Requires the field `OR:3:wbs`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:work_Mod",
            "description": "Filter results by Work using the specified operation. Requires the field `OR:3:work`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:workRequired_Mod",
            "description": "Filter results by Planned Hours using the specified operation. Requires the field `OR:3:workRequired`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:ID",
            "description": "Filter results by OR group 2 applied to ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:URL",
            "description": "Filter results by OR group 2 applied to URL. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualCompletionDate",
            "description": "Filter results by OR group 2 applied to Actual Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualCost",
            "description": "Filter results by OR group 2 applied to Actual Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualDuration",
            "description": "Filter results by OR group 2 applied to Actual Duration. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualDurationMinutes",
            "description": "Filter results by OR group 2 applied to Actual Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualExpenseCost",
            "description": "Filter results by OR group 2 applied to Actual Expense Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualLaborCost",
            "description": "Filter results by OR group 2 applied to Actual Labor Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualRevenue",
            "description": "Filter results by OR group 2 applied to Actual Revenue. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualStartDate",
            "description": "Filter results by OR group 2 applied to Actual Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualWork",
            "description": "Filter results by OR group 2 applied to Actual Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualWorkRequired",
            "description": "Filter results by OR group 2 applied to Actual Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:approvalCompletionDate",
            "description": "Filter results by OR group 2 applied to Approval Path Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:approvalEstStartDate",
            "description": "Filter results by OR group 2 applied to Approval Estimated Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:approvalPlannedStartDate",
            "description": "Filter results by OR group 2 applied to Approval Planned Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:approvalProcessID",
            "description": "Filter results by OR group 2 applied to Approval Processes ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:approvalProjectedStartDate",
            "description": "Filter results by OR group 2 applied to Approval Projected Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:approvalStartDate",
            "description": "Filter results by OR group 2 applied to Approval Path Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:assignedToID",
            "description": "Filter results by OR group 2 applied to Assigned To ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:auditTypes",
            "description": "Filter results by OR group 2 applied to Audit Types. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/22/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:backlogOrder",
            "description": "Filter results by OR group 2 applied to Order. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:billingAmount",
            "description": "Filter results by OR group 2 applied to Cap or Fixed Amount. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:billingRecordID",
            "description": "Filter results by OR group 2 applied to Billing Record ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:canStart",
            "description": "Filter results by OR group 2 applied to Can Start. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:categoryID",
            "description": "Filter results by OR group 2 applied to Category ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:color",
            "description": "Filter results by OR group 2 applied to Color. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:commitDate",
            "description": "Filter results by OR group 2 applied to Commit Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:completionPendingDate",
            "description": "Filter results by OR group 2 applied to Completion Pending Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:condition",
            "description": "Filter results by OR group 2 applied to Condition. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/33/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.ConditionEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:constraintDate",
            "description": "Filter results by OR group 2 applied to Constraint Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:convertedOpTaskEntryDate",
            "description": "Filter results by OR group 2 applied to convertedOpTaskEntryDate. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:convertedOpTaskName",
            "description": "Filter results by OR group 2 applied to convertedOpTaskName. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:convertedOpTaskOriginatorID",
            "description": "Filter results by OR group 2 applied to convertedOpTaskOriginatorID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:costAmount",
            "description": "Filter results by OR group 2 applied to Cost Amount. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:costType",
            "description": "Filter results by OR group 2 applied to Cost Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.CostTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:cpi",
            "description": "Filter results by OR group 2 applied to Cost Performance Index. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:csi",
            "description": "Filter results by OR group 2 applied to Cost Schedule Performance Index. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:currentApprovalStepID",
            "description": "Filter results by OR group 2 applied to Current Approval Stage ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:customerID",
            "description": "Filter results by OR group 2 applied to Customer ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:description",
            "description": "Filter results by OR group 2 applied to Description. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:duration",
            "description": "Filter results by OR group 2 applied to Duration. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:durationMinutes",
            "description": "Filter results by OR group 2 applied to Duration in Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:durationType",
            "description": "Filter results by OR group 2 applied to Duration Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/49/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:durationUnit",
            "description": "Filter results by OR group 2 applied to Duration Unit. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/50/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationUnitEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:eac",
            "description": "Filter results by OR group 2 applied to EAC. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:enteredByID",
            "description": "Filter results by OR group 2 applied to Entered By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:entryDate",
            "description": "Filter results by OR group 2 applied to Entry Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:estCompletionDate",
            "description": "Filter results by OR group 2 applied to Estimated Due Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:estStartDate",
            "description": "Filter results by OR group 2 applied to Estimated Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:extRefID",
            "description": "Filter results by OR group 2 applied to External Reference ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:groupID",
            "description": "Filter results by OR group 2 applied to Group ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:handoffDate",
            "description": "Filter results by OR group 2 applied to Handoff Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasDocuments",
            "description": "Filter results by OR group 2 applied to Has Documents. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasExpenses",
            "description": "Filter results by OR group 2 applied to Has Expenses. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasMessages",
            "description": "Filter results by OR group 2 applied to Has Messages. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasNotes",
            "description": "Filter results by OR group 2 applied to Has Notes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasResolvables",
            "description": "Filter results by OR group 2 applied to Has Resolvables. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasTimedNotifications",
            "description": "Filter results by OR group 2 applied to Has Reminder Notifications. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hoursPerPoint",
            "description": "Filter results by OR group 2 applied to hoursPerPoint. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:indent",
            "description": "Filter results by OR group 2 applied to Indent. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isAgile",
            "description": "Filter results by OR group 2 applied to Agile. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isCritical",
            "description": "Filter results by OR group 2 applied to Is Critical. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isDurationLocked",
            "description": "Filter results by OR group 2 applied to Duration Locked. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isLevelingExcluded",
            "description": "Filter results by OR group 2 applied to Exclude from Leveling. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isReady",
            "description": "Filter results by OR group 2 applied to Ready. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isWorkRequiredLocked",
            "description": "Filter results by OR group 2 applied to Worked Locked. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:iterationID",
            "description": "Filter results by OR group 2 applied to Iteration ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:kanbanBoardID",
            "description": "Filter results by OR group 2 applied to Kanban Board ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:kanbanFlag",
            "description": "Filter results by OR group 2 applied to Kanban Flag. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/76/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.KanbanFlagEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastConditionNoteID",
            "description": "Filter results by OR group 2 applied to Last Condition Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastNoteID",
            "description": "Filter results by OR group 2 applied to Last Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastUpdateDate",
            "description": "Filter results by OR group 2 applied to Last Update Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastUpdatedByID",
            "description": "Filter results by OR group 2 applied to Last Updated By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:levelingStartDelay",
            "description": "Filter results by OR group 2 applied to Leveling Delay. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:levelingStartDelayMinutes",
            "description": "Filter results by OR group 2 applied to levelingStartDelayMinutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:milestoneID",
            "description": "Filter results by OR group 2 applied to Milestone ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:name",
            "description": "Filter results by OR group 2 applied to Name. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:numberOfChildren",
            "description": "Filter results by OR group 2 applied to Number of Children. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:numberOpenOpTasks",
            "description": "Filter results by OR group 2 applied to Number of Open Issues. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:originalDuration",
            "description": "Filter results by OR group 2 applied to Original Duration. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:originalWorkRequired",
            "description": "Filter results by OR group 2 applied to Original Planned Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:parentID",
            "description": "Filter results by OR group 2 applied to Parent ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:parentLag",
            "description": "Filter results by OR group 2 applied to Parent Lag. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:parentLagType",
            "description": "Filter results by OR group 2 applied to Parent Lag Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/92/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.LagTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:pendingCalculation",
            "description": "Filter results by OR group 2 applied to pendingCalculation. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:pendingUpdateMethods",
            "description": "Filter results by OR group 2 applied to pendingUpdateMethods. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:percentComplete",
            "description": "Filter results by OR group 2 applied to Percent Complete. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:personal",
            "description": "Filter results by OR group 2 applied to Personal. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedCompletionDate",
            "description": "Filter results by OR group 2 applied to Planned Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedCost",
            "description": "Filter results by OR group 2 applied to Planned Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedDuration",
            "description": "Filter results by OR group 2 applied to Planned Duration. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedDurationMinutes",
            "description": "Filter results by OR group 2 applied to Planned Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedExpenseCost",
            "description": "Filter results by OR group 2 applied to Planned Expense Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedLaborCost",
            "description": "Filter results by OR group 2 applied to Planned Labor Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedRevenue",
            "description": "Filter results by OR group 2 applied to Planned Revenue. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedStartDate",
            "description": "Filter results by OR group 2 applied to Planned Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:previousStatus",
            "description": "Filter results by OR group 2 applied to Previous Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/106/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:priority",
            "description": "Filter results by OR group 2 applied to Priority. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/107/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:progressStatus",
            "description": "Filter results by OR group 2 applied to Progress Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/109/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.ProgressStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:projectID",
            "description": "Filter results by OR group 2 applied to Project ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:projectedCompletionDate",
            "description": "Filter results by OR group 2 applied to Projected Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:projectedDurationMinutes",
            "description": "Filter results by OR group 2 applied to Projected Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:projectedStartDate",
            "description": "Filter results by OR group 2 applied to Projected Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:recurrenceNumber",
            "description": "Filter results by OR group 2 applied to Recurrence Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:recurrenceRuleID",
            "description": "Filter results by OR group 2 applied to Recurrence Rule ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:referenceNumber",
            "description": "Filter results by OR group 2 applied to Reference Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:rejectionIssueID",
            "description": "Filter results by OR group 2 applied to Rejection Issue ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:remainingDurationMinutes",
            "description": "Filter results by OR group 2 applied to Remaining Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:reservedTimeID",
            "description": "Filter results by OR group 2 applied to Time Off ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:resourceScope",
            "description": "Filter results by OR group 2 applied to Resource Scope. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/120/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskResourceScopeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:revenueType",
            "description": "Filter results by OR group 2 applied to Revenue Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/121/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.RevenueTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:roleID",
            "description": "Filter results by OR group 2 applied to Role ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:securityRootID",
            "description": "Filter results by OR group 2 applied to securityRootID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:securityRootObjCode",
            "description": "Filter results by OR group 2 applied to securityRootObjCode. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:slackDate",
            "description": "Filter results by OR group 2 applied to Slack Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/125/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/date.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:spi",
            "description": "Filter results by OR group 2 applied to Schedule Performance Index. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:status",
            "description": "Filter results by OR group 2 applied to Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/106/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:statusUpdate",
            "description": "Filter results by OR group 2 applied to Status Update. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:submittedByID",
            "description": "Filter results by OR group 2 applied to Submitted By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:taskConstraint",
            "description": "Filter results by OR group 2 applied to Task Constraint. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/131/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskConstraintEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:taskNumber",
            "description": "Filter results by OR group 2 applied to Task Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:teamID",
            "description": "Filter results by OR group 2 applied to Team ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:templateTaskID",
            "description": "Filter results by OR group 2 applied to Template Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:trackingMode",
            "description": "Filter results by OR group 2 applied to Tracking Mode. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/135/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskTrackingModeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:version",
            "description": "Filter results by OR group 2 applied to Version. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:wbs",
            "description": "Filter results by OR group 2 applied to Work Breakdown Structure. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:work",
            "description": "Filter results by OR group 2 applied to Work. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:workRequired",
            "description": "Filter results by OR group 2 applied to Planned Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:ID_Mod",
            "description": "Filter results by ID using the specified operation. Requires the field `OR:2:ID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:URL_Mod",
            "description": "Filter results by URL using the specified operation. Requires the field `OR:2:URL`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualCompletionDate_Mod",
            "description": "Filter results by Actual Completion Date using the specified operation. Requires the field `OR:2:actualCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualCost_Mod",
            "description": "Filter results by Actual Cost using the specified operation. Requires the field `OR:2:actualCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualDuration_Mod",
            "description": "Filter results by Actual Duration using the specified operation. Requires the field `OR:2:actualDuration`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualDurationMinutes_Mod",
            "description": "Filter results by Actual Duration Minutes using the specified operation. Requires the field `OR:2:actualDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualExpenseCost_Mod",
            "description": "Filter results by Actual Expense Cost using the specified operation. Requires the field `OR:2:actualExpenseCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualLaborCost_Mod",
            "description": "Filter results by Actual Labor Cost using the specified operation. Requires the field `OR:2:actualLaborCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualRevenue_Mod",
            "description": "Filter results by Actual Revenue using the specified operation. Requires the field `OR:2:actualRevenue`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualStartDate_Mod",
            "description": "Filter results by Actual Start Date using the specified operation. Requires the field `OR:2:actualStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualWork_Mod",
            "description": "Filter results by Actual Hours using the specified operation. Requires the field `OR:2:actualWork`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualWorkRequired_Mod",
            "description": "Filter results by Actual Hours using the specified operation. Requires the field `OR:2:actualWorkRequired`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:approvalCompletionDate_Mod",
            "description": "Filter results by Approval Path Completion Date using the specified operation. Requires the field `OR:2:approvalCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:approvalEstStartDate_Mod",
            "description": "Filter results by Approval Estimated Start Date using the specified operation. Requires the field `OR:2:approvalEstStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:approvalPlannedStartDate_Mod",
            "description": "Filter results by Approval Planned Start Date using the specified operation. Requires the field `OR:2:approvalPlannedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:approvalProcessID_Mod",
            "description": "Filter results by Approval Processes ID using the specified operation. Requires the field `OR:2:approvalProcessID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:approvalProjectedStartDate_Mod",
            "description": "Filter results by Approval Projected Start Date using the specified operation. Requires the field `OR:2:approvalProjectedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:approvalStartDate_Mod",
            "description": "Filter results by Approval Path Start Date using the specified operation. Requires the field `OR:2:approvalStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:assignedToID_Mod",
            "description": "Filter results by Assigned To ID using the specified operation. Requires the field `OR:2:assignedToID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:auditTypes_Mod",
            "description": "Filter results by Audit Types using the specified operation. Requires the field `OR:2:auditTypes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:backlogOrder_Mod",
            "description": "Filter results by Order using the specified operation. Requires the field `OR:2:backlogOrder`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:billingAmount_Mod",
            "description": "Filter results by Cap or Fixed Amount using the specified operation. Requires the field `OR:2:billingAmount`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:billingRecordID_Mod",
            "description": "Filter results by Billing Record ID using the specified operation. Requires the field `OR:2:billingRecordID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:canStart_Mod",
            "description": "Filter results by Can Start using the specified operation. Requires the field `OR:2:canStart`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:categoryID_Mod",
            "description": "Filter results by Category ID using the specified operation. Requires the field `OR:2:categoryID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:color_Mod",
            "description": "Filter results by Color using the specified operation. Requires the field `OR:2:color`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:commitDate_Mod",
            "description": "Filter results by Commit Date using the specified operation. Requires the field `OR:2:commitDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:completionPendingDate_Mod",
            "description": "Filter results by Completion Pending Date using the specified operation. Requires the field `OR:2:completionPendingDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:condition_Mod",
            "description": "Filter results by Condition using the specified operation. Requires the field `OR:2:condition`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:constraintDate_Mod",
            "description": "Filter results by Constraint Date using the specified operation. Requires the field `OR:2:constraintDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:convertedOpTaskEntryDate_Mod",
            "description": "Filter results by convertedOpTaskEntryDate using the specified operation. Requires the field `OR:2:convertedOpTaskEntryDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:convertedOpTaskName_Mod",
            "description": "Filter results by convertedOpTaskName using the specified operation. Requires the field `OR:2:convertedOpTaskName`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:convertedOpTaskOriginatorID_Mod",
            "description": "Filter results by convertedOpTaskOriginatorID using the specified operation. Requires the field `OR:2:convertedOpTaskOriginatorID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:costAmount_Mod",
            "description": "Filter results by Cost Amount using the specified operation. Requires the field `OR:2:costAmount`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:costType_Mod",
            "description": "Filter results by Cost Type using the specified operation. Requires the field `OR:2:costType`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:cpi_Mod",
            "description": "Filter results by Cost Performance Index using the specified operation. Requires the field `OR:2:cpi`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:csi_Mod",
            "description": "Filter results by Cost Schedule Performance Index using the specified operation. Requires the field `OR:2:csi`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:currentApprovalStepID_Mod",
            "description": "Filter results by Current Approval Stage ID using the specified operation. Requires the field `OR:2:currentApprovalStepID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:customerID_Mod",
            "description": "Filter results by Customer ID using the specified operation. Requires the field `OR:2:customerID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:description_Mod",
            "description": "Filter results by Description using the specified operation. Requires the field `OR:2:description`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:duration_Mod",
            "description": "Filter results by Duration using the specified operation. Requires the field `OR:2:duration`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:durationMinutes_Mod",
            "description": "Filter results by Duration in Minutes using the specified operation. Requires the field `OR:2:durationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:durationType_Mod",
            "description": "Filter results by Duration Type using the specified operation. Requires the field `OR:2:durationType`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:durationUnit_Mod",
            "description": "Filter results by Duration Unit using the specified operation. Requires the field `OR:2:durationUnit`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:eac_Mod",
            "description": "Filter results by EAC using the specified operation. Requires the field `OR:2:eac`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:enteredByID_Mod",
            "description": "Filter results by Entered By ID using the specified operation. Requires the field `OR:2:enteredByID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:entryDate_Mod",
            "description": "Filter results by Entry Date using the specified operation. Requires the field `OR:2:entryDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:estCompletionDate_Mod",
            "description": "Filter results by Estimated Due Date using the specified operation. Requires the field `OR:2:estCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:estStartDate_Mod",
            "description": "Filter results by Estimated Start Date using the specified operation. Requires the field `OR:2:estStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:extRefID_Mod",
            "description": "Filter results by External Reference ID using the specified operation. Requires the field `OR:2:extRefID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:groupID_Mod",
            "description": "Filter results by Group ID using the specified operation. Requires the field `OR:2:groupID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:handoffDate_Mod",
            "description": "Filter results by Handoff Date using the specified operation. Requires the field `OR:2:handoffDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasDocuments_Mod",
            "description": "Filter results by Has Documents using the specified operation. Requires the field `OR:2:hasDocuments`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasExpenses_Mod",
            "description": "Filter results by Has Expenses using the specified operation. Requires the field `OR:2:hasExpenses`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasMessages_Mod",
            "description": "Filter results by Has Messages using the specified operation. Requires the field `OR:2:hasMessages`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasNotes_Mod",
            "description": "Filter results by Has Notes using the specified operation. Requires the field `OR:2:hasNotes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasResolvables_Mod",
            "description": "Filter results by Has Resolvables using the specified operation. Requires the field `OR:2:hasResolvables`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasTimedNotifications_Mod",
            "description": "Filter results by Has Reminder Notifications using the specified operation. Requires the field `OR:2:hasTimedNotifications`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hoursPerPoint_Mod",
            "description": "Filter results by hoursPerPoint using the specified operation. Requires the field `OR:2:hoursPerPoint`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:indent_Mod",
            "description": "Filter results by Indent using the specified operation. Requires the field `OR:2:indent`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isAgile_Mod",
            "description": "Filter results by Agile using the specified operation. Requires the field `OR:2:isAgile`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isCritical_Mod",
            "description": "Filter results by Is Critical using the specified operation. Requires the field `OR:2:isCritical`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isDurationLocked_Mod",
            "description": "Filter results by Duration Locked using the specified operation. Requires the field `OR:2:isDurationLocked`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isLevelingExcluded_Mod",
            "description": "Filter results by Exclude from Leveling using the specified operation. Requires the field `OR:2:isLevelingExcluded`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isReady_Mod",
            "description": "Filter results by Ready using the specified operation. Requires the field `OR:2:isReady`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isWorkRequiredLocked_Mod",
            "description": "Filter results by Worked Locked using the specified operation. Requires the field `OR:2:isWorkRequiredLocked`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:iterationID_Mod",
            "description": "Filter results by Iteration ID using the specified operation. Requires the field `OR:2:iterationID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:kanbanBoardID_Mod",
            "description": "Filter results by Kanban Board ID using the specified operation. Requires the field `OR:2:kanbanBoardID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:kanbanFlag_Mod",
            "description": "Filter results by Kanban Flag using the specified operation. Requires the field `OR:2:kanbanFlag`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastConditionNoteID_Mod",
            "description": "Filter results by Last Condition Note ID using the specified operation. Requires the field `OR:2:lastConditionNoteID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastNoteID_Mod",
            "description": "Filter results by Last Note ID using the specified operation. Requires the field `OR:2:lastNoteID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastUpdateDate_Mod",
            "description": "Filter results by Last Update Date using the specified operation. Requires the field `OR:2:lastUpdateDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastUpdatedByID_Mod",
            "description": "Filter results by Last Updated By ID using the specified operation. Requires the field `OR:2:lastUpdatedByID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:levelingStartDelay_Mod",
            "description": "Filter results by Leveling Delay using the specified operation. Requires the field `OR:2:levelingStartDelay`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:levelingStartDelayMinutes_Mod",
            "description": "Filter results by levelingStartDelayMinutes using the specified operation. Requires the field `OR:2:levelingStartDelayMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:milestoneID_Mod",
            "description": "Filter results by Milestone ID using the specified operation. Requires the field `OR:2:milestoneID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:name_Mod",
            "description": "Filter results by Name using the specified operation. Requires the field `OR:2:name`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:numberOfChildren_Mod",
            "description": "Filter results by Number of Children using the specified operation. Requires the field `OR:2:numberOfChildren`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:numberOpenOpTasks_Mod",
            "description": "Filter results by Number of Open Issues using the specified operation. Requires the field `OR:2:numberOpenOpTasks`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:originalDuration_Mod",
            "description": "Filter results by Original Duration using the specified operation. Requires the field `OR:2:originalDuration`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:originalWorkRequired_Mod",
            "description": "Filter results by Original Planned Hours using the specified operation. Requires the field `OR:2:originalWorkRequired`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:parentID_Mod",
            "description": "Filter results by Parent ID using the specified operation. Requires the field `OR:2:parentID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:parentLag_Mod",
            "description": "Filter results by Parent Lag using the specified operation. Requires the field `OR:2:parentLag`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:parentLagType_Mod",
            "description": "Filter results by Parent Lag Type using the specified operation. Requires the field `OR:2:parentLagType`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:pendingCalculation_Mod",
            "description": "Filter results by pendingCalculation using the specified operation. Requires the field `OR:2:pendingCalculation`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:pendingUpdateMethods_Mod",
            "description": "Filter results by pendingUpdateMethods using the specified operation. Requires the field `OR:2:pendingUpdateMethods`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:percentComplete_Mod",
            "description": "Filter results by Percent Complete using the specified operation. Requires the field `OR:2:percentComplete`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:personal_Mod",
            "description": "Filter results by Personal using the specified operation. Requires the field `OR:2:personal`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedCompletionDate_Mod",
            "description": "Filter results by Planned Completion Date using the specified operation. Requires the field `OR:2:plannedCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedCost_Mod",
            "description": "Filter results by Planned Cost using the specified operation. Requires the field `OR:2:plannedCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedDuration_Mod",
            "description": "Filter results by Planned Duration using the specified operation. Requires the field `OR:2:plannedDuration`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedDurationMinutes_Mod",
            "description": "Filter results by Planned Duration Minutes using the specified operation. Requires the field `OR:2:plannedDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedExpenseCost_Mod",
            "description": "Filter results by Planned Expense Cost using the specified operation. Requires the field `OR:2:plannedExpenseCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedLaborCost_Mod",
            "description": "Filter results by Planned Labor Cost using the specified operation. Requires the field `OR:2:plannedLaborCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedRevenue_Mod",
            "description": "Filter results by Planned Revenue using the specified operation. Requires the field `OR:2:plannedRevenue`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedStartDate_Mod",
            "description": "Filter results by Planned Start Date using the specified operation. Requires the field `OR:2:plannedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:previousStatus_Mod",
            "description": "Filter results by Previous Status using the specified operation. Requires the field `OR:2:previousStatus`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:priority_Mod",
            "description": "Filter results by Priority using the specified operation. Requires the field `OR:2:priority`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:progressStatus_Mod",
            "description": "Filter results by Progress Status using the specified operation. Requires the field `OR:2:progressStatus`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:projectID_Mod",
            "description": "Filter results by Project ID using the specified operation. Requires the field `OR:2:projectID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:projectedCompletionDate_Mod",
            "description": "Filter results by Projected Completion Date using the specified operation. Requires the field `OR:2:projectedCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:projectedDurationMinutes_Mod",
            "description": "Filter results by Projected Duration Minutes using the specified operation. Requires the field `OR:2:projectedDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:projectedStartDate_Mod",
            "description": "Filter results by Projected Start Date using the specified operation. Requires the field `OR:2:projectedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:recurrenceNumber_Mod",
            "description": "Filter results by Recurrence Number using the specified operation. Requires the field `OR:2:recurrenceNumber`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:recurrenceRuleID_Mod",
            "description": "Filter results by Recurrence Rule ID using the specified operation. Requires the field `OR:2:recurrenceRuleID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:referenceNumber_Mod",
            "description": "Filter results by Reference Number using the specified operation. Requires the field `OR:2:referenceNumber`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:rejectionIssueID_Mod",
            "description": "Filter results by Rejection Issue ID using the specified operation. Requires the field `OR:2:rejectionIssueID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:remainingDurationMinutes_Mod",
            "description": "Filter results by Remaining Duration Minutes using the specified operation. Requires the field `OR:2:remainingDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:reservedTimeID_Mod",
            "description": "Filter results by Time Off ID using the specified operation. Requires the field `OR:2:reservedTimeID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:resourceScope_Mod",
            "description": "Filter results by Resource Scope using the specified operation. Requires the field `OR:2:resourceScope`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:revenueType_Mod",
            "description": "Filter results by Revenue Type using the specified operation. Requires the field `OR:2:revenueType`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:roleID_Mod",
            "description": "Filter results by Role ID using the specified operation. Requires the field `OR:2:roleID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:securityRootID_Mod",
            "description": "Filter results by securityRootID using the specified operation. Requires the field `OR:2:securityRootID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:securityRootObjCode_Mod",
            "description": "Filter results by securityRootObjCode using the specified operation. Requires the field `OR:2:securityRootObjCode`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:slackDate_Mod",
            "description": "Filter results by Slack Date using the specified operation. Requires the field `OR:2:slackDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:spi_Mod",
            "description": "Filter results by Schedule Performance Index using the specified operation. Requires the field `OR:2:spi`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:status_Mod",
            "description": "Filter results by Status using the specified operation. Requires the field `OR:2:status`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:statusUpdate_Mod",
            "description": "Filter results by Status Update using the specified operation. Requires the field `OR:2:statusUpdate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:submittedByID_Mod",
            "description": "Filter results by Submitted By ID using the specified operation. Requires the field `OR:2:submittedByID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:taskConstraint_Mod",
            "description": "Filter results by Task Constraint using the specified operation. Requires the field `OR:2:taskConstraint`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:taskNumber_Mod",
            "description": "Filter results by Task Number using the specified operation. Requires the field `OR:2:taskNumber`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:teamID_Mod",
            "description": "Filter results by Team ID using the specified operation. Requires the field `OR:2:teamID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:templateTaskID_Mod",
            "description": "Filter results by Template Task ID using the specified operation. Requires the field `OR:2:templateTaskID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:trackingMode_Mod",
            "description": "Filter results by Tracking Mode using the specified operation. Requires the field `OR:2:trackingMode`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:version_Mod",
            "description": "Filter results by Version using the specified operation. Requires the field `OR:2:version`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:wbs_Mod",
            "description": "Filter results by Work Breakdown Structure using the specified operation. Requires the field `OR:2:wbs`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:work_Mod",
            "description": "Filter results by Work using the specified operation. Requires the field `OR:2:work`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:workRequired_Mod",
            "description": "Filter results by Planned Hours using the specified operation. Requires the field `OR:2:workRequired`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:ID",
            "description": "Filter results by OR group 1 applied to ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:URL",
            "description": "Filter results by OR group 1 applied to URL. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualCompletionDate",
            "description": "Filter results by OR group 1 applied to Actual Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualCost",
            "description": "Filter results by OR group 1 applied to Actual Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualDuration",
            "description": "Filter results by OR group 1 applied to Actual Duration. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualDurationMinutes",
            "description": "Filter results by OR group 1 applied to Actual Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualExpenseCost",
            "description": "Filter results by OR group 1 applied to Actual Expense Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualLaborCost",
            "description": "Filter results by OR group 1 applied to Actual Labor Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualRevenue",
            "description": "Filter results by OR group 1 applied to Actual Revenue. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualStartDate",
            "description": "Filter results by OR group 1 applied to Actual Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualWork",
            "description": "Filter results by OR group 1 applied to Actual Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualWorkRequired",
            "description": "Filter results by OR group 1 applied to Actual Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:approvalCompletionDate",
            "description": "Filter results by OR group 1 applied to Approval Path Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:approvalEstStartDate",
            "description": "Filter results by OR group 1 applied to Approval Estimated Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:approvalPlannedStartDate",
            "description": "Filter results by OR group 1 applied to Approval Planned Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:approvalProcessID",
            "description": "Filter results by OR group 1 applied to Approval Processes ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:approvalProjectedStartDate",
            "description": "Filter results by OR group 1 applied to Approval Projected Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:approvalStartDate",
            "description": "Filter results by OR group 1 applied to Approval Path Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:assignedToID",
            "description": "Filter results by OR group 1 applied to Assigned To ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:auditTypes",
            "description": "Filter results by OR group 1 applied to Audit Types. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/22/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:backlogOrder",
            "description": "Filter results by OR group 1 applied to Order. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:billingAmount",
            "description": "Filter results by OR group 1 applied to Cap or Fixed Amount. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:billingRecordID",
            "description": "Filter results by OR group 1 applied to Billing Record ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:canStart",
            "description": "Filter results by OR group 1 applied to Can Start. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:categoryID",
            "description": "Filter results by OR group 1 applied to Category ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:color",
            "description": "Filter results by OR group 1 applied to Color. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:commitDate",
            "description": "Filter results by OR group 1 applied to Commit Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:completionPendingDate",
            "description": "Filter results by OR group 1 applied to Completion Pending Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:condition",
            "description": "Filter results by OR group 1 applied to Condition. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/33/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.ConditionEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:constraintDate",
            "description": "Filter results by OR group 1 applied to Constraint Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:convertedOpTaskEntryDate",
            "description": "Filter results by OR group 1 applied to convertedOpTaskEntryDate. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:convertedOpTaskName",
            "description": "Filter results by OR group 1 applied to convertedOpTaskName. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:convertedOpTaskOriginatorID",
            "description": "Filter results by OR group 1 applied to convertedOpTaskOriginatorID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:costAmount",
            "description": "Filter results by OR group 1 applied to Cost Amount. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:costType",
            "description": "Filter results by OR group 1 applied to Cost Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.CostTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:cpi",
            "description": "Filter results by OR group 1 applied to Cost Performance Index. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:csi",
            "description": "Filter results by OR group 1 applied to Cost Schedule Performance Index. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:currentApprovalStepID",
            "description": "Filter results by OR group 1 applied to Current Approval Stage ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:customerID",
            "description": "Filter results by OR group 1 applied to Customer ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:description",
            "description": "Filter results by OR group 1 applied to Description. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:duration",
            "description": "Filter results by OR group 1 applied to Duration. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:durationMinutes",
            "description": "Filter results by OR group 1 applied to Duration in Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:durationType",
            "description": "Filter results by OR group 1 applied to Duration Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/49/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:durationUnit",
            "description": "Filter results by OR group 1 applied to Duration Unit. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/50/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationUnitEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:eac",
            "description": "Filter results by OR group 1 applied to EAC. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:enteredByID",
            "description": "Filter results by OR group 1 applied to Entered By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:entryDate",
            "description": "Filter results by OR group 1 applied to Entry Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:estCompletionDate",
            "description": "Filter results by OR group 1 applied to Estimated Due Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:estStartDate",
            "description": "Filter results by OR group 1 applied to Estimated Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:extRefID",
            "description": "Filter results by OR group 1 applied to External Reference ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:groupID",
            "description": "Filter results by OR group 1 applied to Group ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:handoffDate",
            "description": "Filter results by OR group 1 applied to Handoff Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasDocuments",
            "description": "Filter results by OR group 1 applied to Has Documents. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasExpenses",
            "description": "Filter results by OR group 1 applied to Has Expenses. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasMessages",
            "description": "Filter results by OR group 1 applied to Has Messages. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasNotes",
            "description": "Filter results by OR group 1 applied to Has Notes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasResolvables",
            "description": "Filter results by OR group 1 applied to Has Resolvables. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasTimedNotifications",
            "description": "Filter results by OR group 1 applied to Has Reminder Notifications. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hoursPerPoint",
            "description": "Filter results by OR group 1 applied to hoursPerPoint. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:indent",
            "description": "Filter results by OR group 1 applied to Indent. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isAgile",
            "description": "Filter results by OR group 1 applied to Agile. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isCritical",
            "description": "Filter results by OR group 1 applied to Is Critical. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isDurationLocked",
            "description": "Filter results by OR group 1 applied to Duration Locked. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isLevelingExcluded",
            "description": "Filter results by OR group 1 applied to Exclude from Leveling. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isReady",
            "description": "Filter results by OR group 1 applied to Ready. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isWorkRequiredLocked",
            "description": "Filter results by OR group 1 applied to Worked Locked. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:iterationID",
            "description": "Filter results by OR group 1 applied to Iteration ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:kanbanBoardID",
            "description": "Filter results by OR group 1 applied to Kanban Board ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:kanbanFlag",
            "description": "Filter results by OR group 1 applied to Kanban Flag. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/76/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.KanbanFlagEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastConditionNoteID",
            "description": "Filter results by OR group 1 applied to Last Condition Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastNoteID",
            "description": "Filter results by OR group 1 applied to Last Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastUpdateDate",
            "description": "Filter results by OR group 1 applied to Last Update Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastUpdatedByID",
            "description": "Filter results by OR group 1 applied to Last Updated By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:levelingStartDelay",
            "description": "Filter results by OR group 1 applied to Leveling Delay. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:levelingStartDelayMinutes",
            "description": "Filter results by OR group 1 applied to levelingStartDelayMinutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:milestoneID",
            "description": "Filter results by OR group 1 applied to Milestone ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:name",
            "description": "Filter results by OR group 1 applied to Name. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:numberOfChildren",
            "description": "Filter results by OR group 1 applied to Number of Children. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:numberOpenOpTasks",
            "description": "Filter results by OR group 1 applied to Number of Open Issues. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:originalDuration",
            "description": "Filter results by OR group 1 applied to Original Duration. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:originalWorkRequired",
            "description": "Filter results by OR group 1 applied to Original Planned Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:parentID",
            "description": "Filter results by OR group 1 applied to Parent ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:parentLag",
            "description": "Filter results by OR group 1 applied to Parent Lag. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:parentLagType",
            "description": "Filter results by OR group 1 applied to Parent Lag Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/92/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.LagTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:pendingCalculation",
            "description": "Filter results by OR group 1 applied to pendingCalculation. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:pendingUpdateMethods",
            "description": "Filter results by OR group 1 applied to pendingUpdateMethods. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:percentComplete",
            "description": "Filter results by OR group 1 applied to Percent Complete. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:personal",
            "description": "Filter results by OR group 1 applied to Personal. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedCompletionDate",
            "description": "Filter results by OR group 1 applied to Planned Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedCost",
            "description": "Filter results by OR group 1 applied to Planned Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedDuration",
            "description": "Filter results by OR group 1 applied to Planned Duration. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedDurationMinutes",
            "description": "Filter results by OR group 1 applied to Planned Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedExpenseCost",
            "description": "Filter results by OR group 1 applied to Planned Expense Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedLaborCost",
            "description": "Filter results by OR group 1 applied to Planned Labor Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedRevenue",
            "description": "Filter results by OR group 1 applied to Planned Revenue. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedStartDate",
            "description": "Filter results by OR group 1 applied to Planned Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:previousStatus",
            "description": "Filter results by OR group 1 applied to Previous Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/106/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:priority",
            "description": "Filter results by OR group 1 applied to Priority. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/107/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:progressStatus",
            "description": "Filter results by OR group 1 applied to Progress Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/109/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.ProgressStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:projectID",
            "description": "Filter results by OR group 1 applied to Project ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:projectedCompletionDate",
            "description": "Filter results by OR group 1 applied to Projected Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:projectedDurationMinutes",
            "description": "Filter results by OR group 1 applied to Projected Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:projectedStartDate",
            "description": "Filter results by OR group 1 applied to Projected Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:recurrenceNumber",
            "description": "Filter results by OR group 1 applied to Recurrence Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:recurrenceRuleID",
            "description": "Filter results by OR group 1 applied to Recurrence Rule ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:referenceNumber",
            "description": "Filter results by OR group 1 applied to Reference Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:rejectionIssueID",
            "description": "Filter results by OR group 1 applied to Rejection Issue ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:remainingDurationMinutes",
            "description": "Filter results by OR group 1 applied to Remaining Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:reservedTimeID",
            "description": "Filter results by OR group 1 applied to Time Off ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:resourceScope",
            "description": "Filter results by OR group 1 applied to Resource Scope. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/120/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskResourceScopeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:revenueType",
            "description": "Filter results by OR group 1 applied to Revenue Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/121/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.RevenueTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:roleID",
            "description": "Filter results by OR group 1 applied to Role ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:securityRootID",
            "description": "Filter results by OR group 1 applied to securityRootID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:securityRootObjCode",
            "description": "Filter results by OR group 1 applied to securityRootObjCode. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:slackDate",
            "description": "Filter results by OR group 1 applied to Slack Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/125/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/date.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:spi",
            "description": "Filter results by OR group 1 applied to Schedule Performance Index. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:status",
            "description": "Filter results by OR group 1 applied to Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/106/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:statusUpdate",
            "description": "Filter results by OR group 1 applied to Status Update. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:submittedByID",
            "description": "Filter results by OR group 1 applied to Submitted By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:taskConstraint",
            "description": "Filter results by OR group 1 applied to Task Constraint. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/131/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskConstraintEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:taskNumber",
            "description": "Filter results by OR group 1 applied to Task Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:teamID",
            "description": "Filter results by OR group 1 applied to Team ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:templateTaskID",
            "description": "Filter results by OR group 1 applied to Template Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:trackingMode",
            "description": "Filter results by OR group 1 applied to Tracking Mode. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/135/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskTrackingModeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:version",
            "description": "Filter results by OR group 1 applied to Version. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:wbs",
            "description": "Filter results by OR group 1 applied to Work Breakdown Structure. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:work",
            "description": "Filter results by OR group 1 applied to Work. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:workRequired",
            "description": "Filter results by OR group 1 applied to Planned Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:ID_Mod",
            "description": "Filter results by ID using the specified operation. Requires the field `OR:1:ID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:URL_Mod",
            "description": "Filter results by URL using the specified operation. Requires the field `OR:1:URL`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualCompletionDate_Mod",
            "description": "Filter results by Actual Completion Date using the specified operation. Requires the field `OR:1:actualCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualCost_Mod",
            "description": "Filter results by Actual Cost using the specified operation. Requires the field `OR:1:actualCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualDuration_Mod",
            "description": "Filter results by Actual Duration using the specified operation. Requires the field `OR:1:actualDuration`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualDurationMinutes_Mod",
            "description": "Filter results by Actual Duration Minutes using the specified operation. Requires the field `OR:1:actualDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualExpenseCost_Mod",
            "description": "Filter results by Actual Expense Cost using the specified operation. Requires the field `OR:1:actualExpenseCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualLaborCost_Mod",
            "description": "Filter results by Actual Labor Cost using the specified operation. Requires the field `OR:1:actualLaborCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualRevenue_Mod",
            "description": "Filter results by Actual Revenue using the specified operation. Requires the field `OR:1:actualRevenue`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualStartDate_Mod",
            "description": "Filter results by Actual Start Date using the specified operation. Requires the field `OR:1:actualStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualWork_Mod",
            "description": "Filter results by Actual Hours using the specified operation. Requires the field `OR:1:actualWork`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualWorkRequired_Mod",
            "description": "Filter results by Actual Hours using the specified operation. Requires the field `OR:1:actualWorkRequired`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:approvalCompletionDate_Mod",
            "description": "Filter results by Approval Path Completion Date using the specified operation. Requires the field `OR:1:approvalCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:approvalEstStartDate_Mod",
            "description": "Filter results by Approval Estimated Start Date using the specified operation. Requires the field `OR:1:approvalEstStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:approvalPlannedStartDate_Mod",
            "description": "Filter results by Approval Planned Start Date using the specified operation. Requires the field `OR:1:approvalPlannedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:approvalProcessID_Mod",
            "description": "Filter results by Approval Processes ID using the specified operation. Requires the field `OR:1:approvalProcessID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:approvalProjectedStartDate_Mod",
            "description": "Filter results by Approval Projected Start Date using the specified operation. Requires the field `OR:1:approvalProjectedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:approvalStartDate_Mod",
            "description": "Filter results by Approval Path Start Date using the specified operation. Requires the field `OR:1:approvalStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:assignedToID_Mod",
            "description": "Filter results by Assigned To ID using the specified operation. Requires the field `OR:1:assignedToID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:auditTypes_Mod",
            "description": "Filter results by Audit Types using the specified operation. Requires the field `OR:1:auditTypes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:backlogOrder_Mod",
            "description": "Filter results by Order using the specified operation. Requires the field `OR:1:backlogOrder`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:billingAmount_Mod",
            "description": "Filter results by Cap or Fixed Amount using the specified operation. Requires the field `OR:1:billingAmount`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:billingRecordID_Mod",
            "description": "Filter results by Billing Record ID using the specified operation. Requires the field `OR:1:billingRecordID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:canStart_Mod",
            "description": "Filter results by Can Start using the specified operation. Requires the field `OR:1:canStart`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:categoryID_Mod",
            "description": "Filter results by Category ID using the specified operation. Requires the field `OR:1:categoryID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:color_Mod",
            "description": "Filter results by Color using the specified operation. Requires the field `OR:1:color`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:commitDate_Mod",
            "description": "Filter results by Commit Date using the specified operation. Requires the field `OR:1:commitDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:completionPendingDate_Mod",
            "description": "Filter results by Completion Pending Date using the specified operation. Requires the field `OR:1:completionPendingDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:condition_Mod",
            "description": "Filter results by Condition using the specified operation. Requires the field `OR:1:condition`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:constraintDate_Mod",
            "description": "Filter results by Constraint Date using the specified operation. Requires the field `OR:1:constraintDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:convertedOpTaskEntryDate_Mod",
            "description": "Filter results by convertedOpTaskEntryDate using the specified operation. Requires the field `OR:1:convertedOpTaskEntryDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:convertedOpTaskName_Mod",
            "description": "Filter results by convertedOpTaskName using the specified operation. Requires the field `OR:1:convertedOpTaskName`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:convertedOpTaskOriginatorID_Mod",
            "description": "Filter results by convertedOpTaskOriginatorID using the specified operation. Requires the field `OR:1:convertedOpTaskOriginatorID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:costAmount_Mod",
            "description": "Filter results by Cost Amount using the specified operation. Requires the field `OR:1:costAmount`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:costType_Mod",
            "description": "Filter results by Cost Type using the specified operation. Requires the field `OR:1:costType`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:cpi_Mod",
            "description": "Filter results by Cost Performance Index using the specified operation. Requires the field `OR:1:cpi`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:csi_Mod",
            "description": "Filter results by Cost Schedule Performance Index using the specified operation. Requires the field `OR:1:csi`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:currentApprovalStepID_Mod",
            "description": "Filter results by Current Approval Stage ID using the specified operation. Requires the field `OR:1:currentApprovalStepID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:customerID_Mod",
            "description": "Filter results by Customer ID using the specified operation. Requires the field `OR:1:customerID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:description_Mod",
            "description": "Filter results by Description using the specified operation. Requires the field `OR:1:description`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:duration_Mod",
            "description": "Filter results by Duration using the specified operation. Requires the field `OR:1:duration`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:durationMinutes_Mod",
            "description": "Filter results by Duration in Minutes using the specified operation. Requires the field `OR:1:durationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:durationType_Mod",
            "description": "Filter results by Duration Type using the specified operation. Requires the field `OR:1:durationType`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:durationUnit_Mod",
            "description": "Filter results by Duration Unit using the specified operation. Requires the field `OR:1:durationUnit`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:eac_Mod",
            "description": "Filter results by EAC using the specified operation. Requires the field `OR:1:eac`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:enteredByID_Mod",
            "description": "Filter results by Entered By ID using the specified operation. Requires the field `OR:1:enteredByID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:entryDate_Mod",
            "description": "Filter results by Entry Date using the specified operation. Requires the field `OR:1:entryDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:estCompletionDate_Mod",
            "description": "Filter results by Estimated Due Date using the specified operation. Requires the field `OR:1:estCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:estStartDate_Mod",
            "description": "Filter results by Estimated Start Date using the specified operation. Requires the field `OR:1:estStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:extRefID_Mod",
            "description": "Filter results by External Reference ID using the specified operation. Requires the field `OR:1:extRefID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:groupID_Mod",
            "description": "Filter results by Group ID using the specified operation. Requires the field `OR:1:groupID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:handoffDate_Mod",
            "description": "Filter results by Handoff Date using the specified operation. Requires the field `OR:1:handoffDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasDocuments_Mod",
            "description": "Filter results by Has Documents using the specified operation. Requires the field `OR:1:hasDocuments`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasExpenses_Mod",
            "description": "Filter results by Has Expenses using the specified operation. Requires the field `OR:1:hasExpenses`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasMessages_Mod",
            "description": "Filter results by Has Messages using the specified operation. Requires the field `OR:1:hasMessages`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasNotes_Mod",
            "description": "Filter results by Has Notes using the specified operation. Requires the field `OR:1:hasNotes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasResolvables_Mod",
            "description": "Filter results by Has Resolvables using the specified operation. Requires the field `OR:1:hasResolvables`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasTimedNotifications_Mod",
            "description": "Filter results by Has Reminder Notifications using the specified operation. Requires the field `OR:1:hasTimedNotifications`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hoursPerPoint_Mod",
            "description": "Filter results by hoursPerPoint using the specified operation. Requires the field `OR:1:hoursPerPoint`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:indent_Mod",
            "description": "Filter results by Indent using the specified operation. Requires the field `OR:1:indent`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isAgile_Mod",
            "description": "Filter results by Agile using the specified operation. Requires the field `OR:1:isAgile`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isCritical_Mod",
            "description": "Filter results by Is Critical using the specified operation. Requires the field `OR:1:isCritical`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isDurationLocked_Mod",
            "description": "Filter results by Duration Locked using the specified operation. Requires the field `OR:1:isDurationLocked`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isLevelingExcluded_Mod",
            "description": "Filter results by Exclude from Leveling using the specified operation. Requires the field `OR:1:isLevelingExcluded`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isReady_Mod",
            "description": "Filter results by Ready using the specified operation. Requires the field `OR:1:isReady`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isWorkRequiredLocked_Mod",
            "description": "Filter results by Worked Locked using the specified operation. Requires the field `OR:1:isWorkRequiredLocked`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:iterationID_Mod",
            "description": "Filter results by Iteration ID using the specified operation. Requires the field `OR:1:iterationID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:kanbanBoardID_Mod",
            "description": "Filter results by Kanban Board ID using the specified operation. Requires the field `OR:1:kanbanBoardID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:kanbanFlag_Mod",
            "description": "Filter results by Kanban Flag using the specified operation. Requires the field `OR:1:kanbanFlag`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastConditionNoteID_Mod",
            "description": "Filter results by Last Condition Note ID using the specified operation. Requires the field `OR:1:lastConditionNoteID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastNoteID_Mod",
            "description": "Filter results by Last Note ID using the specified operation. Requires the field `OR:1:lastNoteID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastUpdateDate_Mod",
            "description": "Filter results by Last Update Date using the specified operation. Requires the field `OR:1:lastUpdateDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastUpdatedByID_Mod",
            "description": "Filter results by Last Updated By ID using the specified operation. Requires the field `OR:1:lastUpdatedByID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:levelingStartDelay_Mod",
            "description": "Filter results by Leveling Delay using the specified operation. Requires the field `OR:1:levelingStartDelay`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:levelingStartDelayMinutes_Mod",
            "description": "Filter results by levelingStartDelayMinutes using the specified operation. Requires the field `OR:1:levelingStartDelayMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:milestoneID_Mod",
            "description": "Filter results by Milestone ID using the specified operation. Requires the field `OR:1:milestoneID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:name_Mod",
            "description": "Filter results by Name using the specified operation. Requires the field `OR:1:name`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:numberOfChildren_Mod",
            "description": "Filter results by Number of Children using the specified operation. Requires the field `OR:1:numberOfChildren`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:numberOpenOpTasks_Mod",
            "description": "Filter results by Number of Open Issues using the specified operation. Requires the field `OR:1:numberOpenOpTasks`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:originalDuration_Mod",
            "description": "Filter results by Original Duration using the specified operation. Requires the field `OR:1:originalDuration`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:originalWorkRequired_Mod",
            "description": "Filter results by Original Planned Hours using the specified operation. Requires the field `OR:1:originalWorkRequired`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:parentID_Mod",
            "description": "Filter results by Parent ID using the specified operation. Requires the field `OR:1:parentID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:parentLag_Mod",
            "description": "Filter results by Parent Lag using the specified operation. Requires the field `OR:1:parentLag`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:parentLagType_Mod",
            "description": "Filter results by Parent Lag Type using the specified operation. Requires the field `OR:1:parentLagType`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:pendingCalculation_Mod",
            "description": "Filter results by pendingCalculation using the specified operation. Requires the field `OR:1:pendingCalculation`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:pendingUpdateMethods_Mod",
            "description": "Filter results by pendingUpdateMethods using the specified operation. Requires the field `OR:1:pendingUpdateMethods`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:percentComplete_Mod",
            "description": "Filter results by Percent Complete using the specified operation. Requires the field `OR:1:percentComplete`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:personal_Mod",
            "description": "Filter results by Personal using the specified operation. Requires the field `OR:1:personal`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedCompletionDate_Mod",
            "description": "Filter results by Planned Completion Date using the specified operation. Requires the field `OR:1:plannedCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedCost_Mod",
            "description": "Filter results by Planned Cost using the specified operation. Requires the field `OR:1:plannedCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedDuration_Mod",
            "description": "Filter results by Planned Duration using the specified operation. Requires the field `OR:1:plannedDuration`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedDurationMinutes_Mod",
            "description": "Filter results by Planned Duration Minutes using the specified operation. Requires the field `OR:1:plannedDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedExpenseCost_Mod",
            "description": "Filter results by Planned Expense Cost using the specified operation. Requires the field `OR:1:plannedExpenseCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedLaborCost_Mod",
            "description": "Filter results by Planned Labor Cost using the specified operation. Requires the field `OR:1:plannedLaborCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedRevenue_Mod",
            "description": "Filter results by Planned Revenue using the specified operation. Requires the field `OR:1:plannedRevenue`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedStartDate_Mod",
            "description": "Filter results by Planned Start Date using the specified operation. Requires the field `OR:1:plannedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:previousStatus_Mod",
            "description": "Filter results by Previous Status using the specified operation. Requires the field `OR:1:previousStatus`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:priority_Mod",
            "description": "Filter results by Priority using the specified operation. Requires the field `OR:1:priority`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:progressStatus_Mod",
            "description": "Filter results by Progress Status using the specified operation. Requires the field `OR:1:progressStatus`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:projectID_Mod",
            "description": "Filter results by Project ID using the specified operation. Requires the field `OR:1:projectID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:projectedCompletionDate_Mod",
            "description": "Filter results by Projected Completion Date using the specified operation. Requires the field `OR:1:projectedCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:projectedDurationMinutes_Mod",
            "description": "Filter results by Projected Duration Minutes using the specified operation. Requires the field `OR:1:projectedDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:projectedStartDate_Mod",
            "description": "Filter results by Projected Start Date using the specified operation. Requires the field `OR:1:projectedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:recurrenceNumber_Mod",
            "description": "Filter results by Recurrence Number using the specified operation. Requires the field `OR:1:recurrenceNumber`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:recurrenceRuleID_Mod",
            "description": "Filter results by Recurrence Rule ID using the specified operation. Requires the field `OR:1:recurrenceRuleID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:referenceNumber_Mod",
            "description": "Filter results by Reference Number using the specified operation. Requires the field `OR:1:referenceNumber`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:rejectionIssueID_Mod",
            "description": "Filter results by Rejection Issue ID using the specified operation. Requires the field `OR:1:rejectionIssueID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:remainingDurationMinutes_Mod",
            "description": "Filter results by Remaining Duration Minutes using the specified operation. Requires the field `OR:1:remainingDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:reservedTimeID_Mod",
            "description": "Filter results by Time Off ID using the specified operation. Requires the field `OR:1:reservedTimeID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:resourceScope_Mod",
            "description": "Filter results by Resource Scope using the specified operation. Requires the field `OR:1:resourceScope`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:revenueType_Mod",
            "description": "Filter results by Revenue Type using the specified operation. Requires the field `OR:1:revenueType`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:roleID_Mod",
            "description": "Filter results by Role ID using the specified operation. Requires the field `OR:1:roleID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:securityRootID_Mod",
            "description": "Filter results by securityRootID using the specified operation. Requires the field `OR:1:securityRootID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:securityRootObjCode_Mod",
            "description": "Filter results by securityRootObjCode using the specified operation. Requires the field `OR:1:securityRootObjCode`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:slackDate_Mod",
            "description": "Filter results by Slack Date using the specified operation. Requires the field `OR:1:slackDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:spi_Mod",
            "description": "Filter results by Schedule Performance Index using the specified operation. Requires the field `OR:1:spi`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:status_Mod",
            "description": "Filter results by Status using the specified operation. Requires the field `OR:1:status`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:statusUpdate_Mod",
            "description": "Filter results by Status Update using the specified operation. Requires the field `OR:1:statusUpdate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:submittedByID_Mod",
            "description": "Filter results by Submitted By ID using the specified operation. Requires the field `OR:1:submittedByID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:taskConstraint_Mod",
            "description": "Filter results by Task Constraint using the specified operation. Requires the field `OR:1:taskConstraint`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:taskNumber_Mod",
            "description": "Filter results by Task Number using the specified operation. Requires the field `OR:1:taskNumber`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:teamID_Mod",
            "description": "Filter results by Team ID using the specified operation. Requires the field `OR:1:teamID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:templateTaskID_Mod",
            "description": "Filter results by Template Task ID using the specified operation. Requires the field `OR:1:templateTaskID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:trackingMode_Mod",
            "description": "Filter results by Tracking Mode using the specified operation. Requires the field `OR:1:trackingMode`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:version_Mod",
            "description": "Filter results by Version using the specified operation. Requires the field `OR:1:version`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:wbs_Mod",
            "description": "Filter results by Work Breakdown Structure using the specified operation. Requires the field `OR:1:wbs`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:work_Mod",
            "description": "Filter results by Work using the specified operation. Requires the field `OR:1:work`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:workRequired_Mod",
            "description": "Filter results by Planned Hours using the specified operation. Requires the field `OR:1:workRequired`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "ID",
            "description": "Filter results by OR group 0 applied to ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "URL",
            "description": "Filter results by OR group 0 applied to URL. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "actualCompletionDate",
            "description": "Filter results by OR group 0 applied to Actual Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "actualCost",
            "description": "Filter results by OR group 0 applied to Actual Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "actualDuration",
            "description": "Filter results by OR group 0 applied to Actual Duration. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "actualDurationMinutes",
            "description": "Filter results by OR group 0 applied to Actual Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "actualExpenseCost",
            "description": "Filter results by OR group 0 applied to Actual Expense Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "actualLaborCost",
            "description": "Filter results by OR group 0 applied to Actual Labor Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "actualRevenue",
            "description": "Filter results by OR group 0 applied to Actual Revenue. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "actualStartDate",
            "description": "Filter results by OR group 0 applied to Actual Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "actualWork",
            "description": "Filter results by OR group 0 applied to Actual Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "actualWorkRequired",
            "description": "Filter results by OR group 0 applied to Actual Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "approvalCompletionDate",
            "description": "Filter results by OR group 0 applied to Approval Path Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "approvalEstStartDate",
            "description": "Filter results by OR group 0 applied to Approval Estimated Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "approvalPlannedStartDate",
            "description": "Filter results by OR group 0 applied to Approval Planned Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "approvalProcessID",
            "description": "Filter results by OR group 0 applied to Approval Processes ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "approvalProjectedStartDate",
            "description": "Filter results by OR group 0 applied to Approval Projected Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "approvalStartDate",
            "description": "Filter results by OR group 0 applied to Approval Path Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "assignedToID",
            "description": "Filter results by OR group 0 applied to Assigned To ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "auditTypes",
            "description": "Filter results by OR group 0 applied to Audit Types. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/22/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "backlogOrder",
            "description": "Filter results by OR group 0 applied to Order. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "billingAmount",
            "description": "Filter results by OR group 0 applied to Cap or Fixed Amount. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "billingRecordID",
            "description": "Filter results by OR group 0 applied to Billing Record ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "canStart",
            "description": "Filter results by OR group 0 applied to Can Start. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "categoryID",
            "description": "Filter results by OR group 0 applied to Category ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "color",
            "description": "Filter results by OR group 0 applied to Color. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "commitDate",
            "description": "Filter results by OR group 0 applied to Commit Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "completionPendingDate",
            "description": "Filter results by OR group 0 applied to Completion Pending Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "condition",
            "description": "Filter results by OR group 0 applied to Condition. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/33/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.ConditionEnum.json"
            }
          },
          {
            "in": "query",
            "name": "constraintDate",
            "description": "Filter results by OR group 0 applied to Constraint Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "convertedOpTaskEntryDate",
            "description": "Filter results by OR group 0 applied to convertedOpTaskEntryDate. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "convertedOpTaskName",
            "description": "Filter results by OR group 0 applied to convertedOpTaskName. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "convertedOpTaskOriginatorID",
            "description": "Filter results by OR group 0 applied to convertedOpTaskOriginatorID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "costAmount",
            "description": "Filter results by OR group 0 applied to Cost Amount. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "costType",
            "description": "Filter results by OR group 0 applied to Cost Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.CostTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "cpi",
            "description": "Filter results by OR group 0 applied to Cost Performance Index. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "csi",
            "description": "Filter results by OR group 0 applied to Cost Schedule Performance Index. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "currentApprovalStepID",
            "description": "Filter results by OR group 0 applied to Current Approval Stage ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "customerID",
            "description": "Filter results by OR group 0 applied to Customer ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "description",
            "description": "Filter results by OR group 0 applied to Description. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "duration",
            "description": "Filter results by OR group 0 applied to Duration. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "durationMinutes",
            "description": "Filter results by OR group 0 applied to Duration in Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "durationType",
            "description": "Filter results by OR group 0 applied to Duration Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/49/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "durationUnit",
            "description": "Filter results by OR group 0 applied to Duration Unit. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/50/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationUnitEnum.json"
            }
          },
          {
            "in": "query",
            "name": "eac",
            "description": "Filter results by OR group 0 applied to EAC. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "enteredByID",
            "description": "Filter results by OR group 0 applied to Entered By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "entryDate",
            "description": "Filter results by OR group 0 applied to Entry Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "estCompletionDate",
            "description": "Filter results by OR group 0 applied to Estimated Due Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "estStartDate",
            "description": "Filter results by OR group 0 applied to Estimated Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "extRefID",
            "description": "Filter results by OR group 0 applied to External Reference ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "groupID",
            "description": "Filter results by OR group 0 applied to Group ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "handoffDate",
            "description": "Filter results by OR group 0 applied to Handoff Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "hasDocuments",
            "description": "Filter results by OR group 0 applied to Has Documents. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "hasExpenses",
            "description": "Filter results by OR group 0 applied to Has Expenses. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "hasMessages",
            "description": "Filter results by OR group 0 applied to Has Messages. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "hasNotes",
            "description": "Filter results by OR group 0 applied to Has Notes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "hasResolvables",
            "description": "Filter results by OR group 0 applied to Has Resolvables. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "hasTimedNotifications",
            "description": "Filter results by OR group 0 applied to Has Reminder Notifications. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "hoursPerPoint",
            "description": "Filter results by OR group 0 applied to hoursPerPoint. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "indent",
            "description": "Filter results by OR group 0 applied to Indent. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "isAgile",
            "description": "Filter results by OR group 0 applied to Agile. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "isCritical",
            "description": "Filter results by OR group 0 applied to Is Critical. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "isDurationLocked",
            "description": "Filter results by OR group 0 applied to Duration Locked. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "isLevelingExcluded",
            "description": "Filter results by OR group 0 applied to Exclude from Leveling. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "isReady",
            "description": "Filter results by OR group 0 applied to Ready. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "isWorkRequiredLocked",
            "description": "Filter results by OR group 0 applied to Worked Locked. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "iterationID",
            "description": "Filter results by OR group 0 applied to Iteration ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "kanbanBoardID",
            "description": "Filter results by OR group 0 applied to Kanban Board ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "kanbanFlag",
            "description": "Filter results by OR group 0 applied to Kanban Flag. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/76/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.KanbanFlagEnum.json"
            }
          },
          {
            "in": "query",
            "name": "lastConditionNoteID",
            "description": "Filter results by OR group 0 applied to Last Condition Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "lastNoteID",
            "description": "Filter results by OR group 0 applied to Last Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "lastUpdateDate",
            "description": "Filter results by OR group 0 applied to Last Update Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "lastUpdatedByID",
            "description": "Filter results by OR group 0 applied to Last Updated By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "levelingStartDelay",
            "description": "Filter results by OR group 0 applied to Leveling Delay. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "levelingStartDelayMinutes",
            "description": "Filter results by OR group 0 applied to levelingStartDelayMinutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "milestoneID",
            "description": "Filter results by OR group 0 applied to Milestone ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "name",
            "description": "Filter results by OR group 0 applied to Name. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "numberOfChildren",
            "description": "Filter results by OR group 0 applied to Number of Children. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "numberOpenOpTasks",
            "description": "Filter results by OR group 0 applied to Number of Open Issues. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "originalDuration",
            "description": "Filter results by OR group 0 applied to Original Duration. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "originalWorkRequired",
            "description": "Filter results by OR group 0 applied to Original Planned Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "parentID",
            "description": "Filter results by OR group 0 applied to Parent ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "parentLag",
            "description": "Filter results by OR group 0 applied to Parent Lag. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "parentLagType",
            "description": "Filter results by OR group 0 applied to Parent Lag Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/92/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.LagTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "pendingCalculation",
            "description": "Filter results by OR group 0 applied to pendingCalculation. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "pendingUpdateMethods",
            "description": "Filter results by OR group 0 applied to pendingUpdateMethods. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "percentComplete",
            "description": "Filter results by OR group 0 applied to Percent Complete. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "personal",
            "description": "Filter results by OR group 0 applied to Personal. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "plannedCompletionDate",
            "description": "Filter results by OR group 0 applied to Planned Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "plannedCost",
            "description": "Filter results by OR group 0 applied to Planned Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "plannedDuration",
            "description": "Filter results by OR group 0 applied to Planned Duration. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "plannedDurationMinutes",
            "description": "Filter results by OR group 0 applied to Planned Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "plannedExpenseCost",
            "description": "Filter results by OR group 0 applied to Planned Expense Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "plannedLaborCost",
            "description": "Filter results by OR group 0 applied to Planned Labor Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "plannedRevenue",
            "description": "Filter results by OR group 0 applied to Planned Revenue. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "plannedStartDate",
            "description": "Filter results by OR group 0 applied to Planned Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "previousStatus",
            "description": "Filter results by OR group 0 applied to Previous Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/106/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "priority",
            "description": "Filter results by OR group 0 applied to Priority. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/107/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
            }
          },
          {
            "in": "query",
            "name": "progressStatus",
            "description": "Filter results by OR group 0 applied to Progress Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/109/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.ProgressStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "projectID",
            "description": "Filter results by OR group 0 applied to Project ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "projectedCompletionDate",
            "description": "Filter results by OR group 0 applied to Projected Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "projectedDurationMinutes",
            "description": "Filter results by OR group 0 applied to Projected Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "projectedStartDate",
            "description": "Filter results by OR group 0 applied to Projected Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "recurrenceNumber",
            "description": "Filter results by OR group 0 applied to Recurrence Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "recurrenceRuleID",
            "description": "Filter results by OR group 0 applied to Recurrence Rule ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "referenceNumber",
            "description": "Filter results by OR group 0 applied to Reference Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "rejectionIssueID",
            "description": "Filter results by OR group 0 applied to Rejection Issue ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "remainingDurationMinutes",
            "description": "Filter results by OR group 0 applied to Remaining Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "reservedTimeID",
            "description": "Filter results by OR group 0 applied to Time Off ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "resourceScope",
            "description": "Filter results by OR group 0 applied to Resource Scope. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/120/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskResourceScopeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "revenueType",
            "description": "Filter results by OR group 0 applied to Revenue Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/121/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.RevenueTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "roleID",
            "description": "Filter results by OR group 0 applied to Role ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "securityRootID",
            "description": "Filter results by OR group 0 applied to securityRootID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "securityRootObjCode",
            "description": "Filter results by OR group 0 applied to securityRootObjCode. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "slackDate",
            "description": "Filter results by OR group 0 applied to Slack Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/125/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/date.json"
            }
          },
          {
            "in": "query",
            "name": "spi",
            "description": "Filter results by OR group 0 applied to Schedule Performance Index. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "Filter results by OR group 0 applied to Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/106/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "statusUpdate",
            "description": "Filter results by OR group 0 applied to Status Update. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "submittedByID",
            "description": "Filter results by OR group 0 applied to Submitted By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "taskConstraint",
            "description": "Filter results by OR group 0 applied to Task Constraint. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/131/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskConstraintEnum.json"
            }
          },
          {
            "in": "query",
            "name": "taskNumber",
            "description": "Filter results by OR group 0 applied to Task Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "teamID",
            "description": "Filter results by OR group 0 applied to Team ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "templateTaskID",
            "description": "Filter results by OR group 0 applied to Template Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "trackingMode",
            "description": "Filter results by OR group 0 applied to Tracking Mode. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/135/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskTrackingModeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "version",
            "description": "Filter results by OR group 0 applied to Version. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "wbs",
            "description": "Filter results by OR group 0 applied to Work Breakdown Structure. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "work",
            "description": "Filter results by OR group 0 applied to Work. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "workRequired",
            "description": "Filter results by OR group 0 applied to Planned Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "ID_Mod",
            "description": "Filter results by ID using the specified operation. Requires the field `ID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "URL_Mod",
            "description": "Filter results by URL using the specified operation. Requires the field `URL`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "actualCompletionDate_Mod",
            "description": "Filter results by Actual Completion Date using the specified operation. Requires the field `actualCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "actualCost_Mod",
            "description": "Filter results by Actual Cost using the specified operation. Requires the field `actualCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "actualDuration_Mod",
            "description": "Filter results by Actual Duration using the specified operation. Requires the field `actualDuration`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "actualDurationMinutes_Mod",
            "description": "Filter results by Actual Duration Minutes using the specified operation. Requires the field `actualDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "actualExpenseCost_Mod",
            "description": "Filter results by Actual Expense Cost using the specified operation. Requires the field `actualExpenseCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "actualLaborCost_Mod",
            "description": "Filter results by Actual Labor Cost using the specified operation. Requires the field `actualLaborCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "actualRevenue_Mod",
            "description": "Filter results by Actual Revenue using the specified operation. Requires the field `actualRevenue`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "actualStartDate_Mod",
            "description": "Filter results by Actual Start Date using the specified operation. Requires the field `actualStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "actualWork_Mod",
            "description": "Filter results by Actual Hours using the specified operation. Requires the field `actualWork`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "actualWorkRequired_Mod",
            "description": "Filter results by Actual Hours using the specified operation. Requires the field `actualWorkRequired`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "approvalCompletionDate_Mod",
            "description": "Filter results by Approval Path Completion Date using the specified operation. Requires the field `approvalCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "approvalEstStartDate_Mod",
            "description": "Filter results by Approval Estimated Start Date using the specified operation. Requires the field `approvalEstStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "approvalPlannedStartDate_Mod",
            "description": "Filter results by Approval Planned Start Date using the specified operation. Requires the field `approvalPlannedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "approvalProcessID_Mod",
            "description": "Filter results by Approval Processes ID using the specified operation. Requires the field `approvalProcessID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "approvalProjectedStartDate_Mod",
            "description": "Filter results by Approval Projected Start Date using the specified operation. Requires the field `approvalProjectedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "approvalStartDate_Mod",
            "description": "Filter results by Approval Path Start Date using the specified operation. Requires the field `approvalStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "assignedToID_Mod",
            "description": "Filter results by Assigned To ID using the specified operation. Requires the field `assignedToID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "auditTypes_Mod",
            "description": "Filter results by Audit Types using the specified operation. Requires the field `auditTypes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "backlogOrder_Mod",
            "description": "Filter results by Order using the specified operation. Requires the field `backlogOrder`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "billingAmount_Mod",
            "description": "Filter results by Cap or Fixed Amount using the specified operation. Requires the field `billingAmount`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "billingRecordID_Mod",
            "description": "Filter results by Billing Record ID using the specified operation. Requires the field `billingRecordID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "canStart_Mod",
            "description": "Filter results by Can Start using the specified operation. Requires the field `canStart`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "categoryID_Mod",
            "description": "Filter results by Category ID using the specified operation. Requires the field `categoryID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "color_Mod",
            "description": "Filter results by Color using the specified operation. Requires the field `color`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "commitDate_Mod",
            "description": "Filter results by Commit Date using the specified operation. Requires the field `commitDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "completionPendingDate_Mod",
            "description": "Filter results by Completion Pending Date using the specified operation. Requires the field `completionPendingDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "condition_Mod",
            "description": "Filter results by Condition using the specified operation. Requires the field `condition`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "constraintDate_Mod",
            "description": "Filter results by Constraint Date using the specified operation. Requires the field `constraintDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "convertedOpTaskEntryDate_Mod",
            "description": "Filter results by convertedOpTaskEntryDate using the specified operation. Requires the field `convertedOpTaskEntryDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "convertedOpTaskName_Mod",
            "description": "Filter results by convertedOpTaskName using the specified operation. Requires the field `convertedOpTaskName`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "convertedOpTaskOriginatorID_Mod",
            "description": "Filter results by convertedOpTaskOriginatorID using the specified operation. Requires the field `convertedOpTaskOriginatorID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "costAmount_Mod",
            "description": "Filter results by Cost Amount using the specified operation. Requires the field `costAmount`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "costType_Mod",
            "description": "Filter results by Cost Type using the specified operation. Requires the field `costType`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "cpi_Mod",
            "description": "Filter results by Cost Performance Index using the specified operation. Requires the field `cpi`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "csi_Mod",
            "description": "Filter results by Cost Schedule Performance Index using the specified operation. Requires the field `csi`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "currentApprovalStepID_Mod",
            "description": "Filter results by Current Approval Stage ID using the specified operation. Requires the field `currentApprovalStepID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "customerID_Mod",
            "description": "Filter results by Customer ID using the specified operation. Requires the field `customerID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "description_Mod",
            "description": "Filter results by Description using the specified operation. Requires the field `description`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "duration_Mod",
            "description": "Filter results by Duration using the specified operation. Requires the field `duration`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "durationMinutes_Mod",
            "description": "Filter results by Duration in Minutes using the specified operation. Requires the field `durationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "durationType_Mod",
            "description": "Filter results by Duration Type using the specified operation. Requires the field `durationType`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "durationUnit_Mod",
            "description": "Filter results by Duration Unit using the specified operation. Requires the field `durationUnit`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "eac_Mod",
            "description": "Filter results by EAC using the specified operation. Requires the field `eac`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "enteredByID_Mod",
            "description": "Filter results by Entered By ID using the specified operation. Requires the field `enteredByID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "entryDate_Mod",
            "description": "Filter results by Entry Date using the specified operation. Requires the field `entryDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "estCompletionDate_Mod",
            "description": "Filter results by Estimated Due Date using the specified operation. Requires the field `estCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "estStartDate_Mod",
            "description": "Filter results by Estimated Start Date using the specified operation. Requires the field `estStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "extRefID_Mod",
            "description": "Filter results by External Reference ID using the specified operation. Requires the field `extRefID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "groupID_Mod",
            "description": "Filter results by Group ID using the specified operation. Requires the field `groupID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "handoffDate_Mod",
            "description": "Filter results by Handoff Date using the specified operation. Requires the field `handoffDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "hasDocuments_Mod",
            "description": "Filter results by Has Documents using the specified operation. Requires the field `hasDocuments`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "hasExpenses_Mod",
            "description": "Filter results by Has Expenses using the specified operation. Requires the field `hasExpenses`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "hasMessages_Mod",
            "description": "Filter results by Has Messages using the specified operation. Requires the field `hasMessages`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "hasNotes_Mod",
            "description": "Filter results by Has Notes using the specified operation. Requires the field `hasNotes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "hasResolvables_Mod",
            "description": "Filter results by Has Resolvables using the specified operation. Requires the field `hasResolvables`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "hasTimedNotifications_Mod",
            "description": "Filter results by Has Reminder Notifications using the specified operation. Requires the field `hasTimedNotifications`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "hoursPerPoint_Mod",
            "description": "Filter results by hoursPerPoint using the specified operation. Requires the field `hoursPerPoint`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "indent_Mod",
            "description": "Filter results by Indent using the specified operation. Requires the field `indent`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "isAgile_Mod",
            "description": "Filter results by Agile using the specified operation. Requires the field `isAgile`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "isCritical_Mod",
            "description": "Filter results by Is Critical using the specified operation. Requires the field `isCritical`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "isDurationLocked_Mod",
            "description": "Filter results by Duration Locked using the specified operation. Requires the field `isDurationLocked`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "isLevelingExcluded_Mod",
            "description": "Filter results by Exclude from Leveling using the specified operation. Requires the field `isLevelingExcluded`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "isReady_Mod",
            "description": "Filter results by Ready using the specified operation. Requires the field `isReady`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "isWorkRequiredLocked_Mod",
            "description": "Filter results by Worked Locked using the specified operation. Requires the field `isWorkRequiredLocked`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "iterationID_Mod",
            "description": "Filter results by Iteration ID using the specified operation. Requires the field `iterationID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "kanbanBoardID_Mod",
            "description": "Filter results by Kanban Board ID using the specified operation. Requires the field `kanbanBoardID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "kanbanFlag_Mod",
            "description": "Filter results by Kanban Flag using the specified operation. Requires the field `kanbanFlag`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "lastConditionNoteID_Mod",
            "description": "Filter results by Last Condition Note ID using the specified operation. Requires the field `lastConditionNoteID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "lastNoteID_Mod",
            "description": "Filter results by Last Note ID using the specified operation. Requires the field `lastNoteID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "lastUpdateDate_Mod",
            "description": "Filter results by Last Update Date using the specified operation. Requires the field `lastUpdateDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "lastUpdatedByID_Mod",
            "description": "Filter results by Last Updated By ID using the specified operation. Requires the field `lastUpdatedByID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "levelingStartDelay_Mod",
            "description": "Filter results by Leveling Delay using the specified operation. Requires the field `levelingStartDelay`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "levelingStartDelayMinutes_Mod",
            "description": "Filter results by levelingStartDelayMinutes using the specified operation. Requires the field `levelingStartDelayMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "milestoneID_Mod",
            "description": "Filter results by Milestone ID using the specified operation. Requires the field `milestoneID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "name_Mod",
            "description": "Filter results by Name using the specified operation. Requires the field `name`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "numberOfChildren_Mod",
            "description": "Filter results by Number of Children using the specified operation. Requires the field `numberOfChildren`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "numberOpenOpTasks_Mod",
            "description": "Filter results by Number of Open Issues using the specified operation. Requires the field `numberOpenOpTasks`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "originalDuration_Mod",
            "description": "Filter results by Original Duration using the specified operation. Requires the field `originalDuration`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "originalWorkRequired_Mod",
            "description": "Filter results by Original Planned Hours using the specified operation. Requires the field `originalWorkRequired`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "parentID_Mod",
            "description": "Filter results by Parent ID using the specified operation. Requires the field `parentID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "parentLag_Mod",
            "description": "Filter results by Parent Lag using the specified operation. Requires the field `parentLag`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "parentLagType_Mod",
            "description": "Filter results by Parent Lag Type using the specified operation. Requires the field `parentLagType`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "pendingCalculation_Mod",
            "description": "Filter results by pendingCalculation using the specified operation. Requires the field `pendingCalculation`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "pendingUpdateMethods_Mod",
            "description": "Filter results by pendingUpdateMethods using the specified operation. Requires the field `pendingUpdateMethods`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "percentComplete_Mod",
            "description": "Filter results by Percent Complete using the specified operation. Requires the field `percentComplete`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "personal_Mod",
            "description": "Filter results by Personal using the specified operation. Requires the field `personal`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "plannedCompletionDate_Mod",
            "description": "Filter results by Planned Completion Date using the specified operation. Requires the field `plannedCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "plannedCost_Mod",
            "description": "Filter results by Planned Cost using the specified operation. Requires the field `plannedCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "plannedDuration_Mod",
            "description": "Filter results by Planned Duration using the specified operation. Requires the field `plannedDuration`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "plannedDurationMinutes_Mod",
            "description": "Filter results by Planned Duration Minutes using the specified operation. Requires the field `plannedDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "plannedExpenseCost_Mod",
            "description": "Filter results by Planned Expense Cost using the specified operation. Requires the field `plannedExpenseCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "plannedLaborCost_Mod",
            "description": "Filter results by Planned Labor Cost using the specified operation. Requires the field `plannedLaborCost`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "plannedRevenue_Mod",
            "description": "Filter results by Planned Revenue using the specified operation. Requires the field `plannedRevenue`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "plannedStartDate_Mod",
            "description": "Filter results by Planned Start Date using the specified operation. Requires the field `plannedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "previousStatus_Mod",
            "description": "Filter results by Previous Status using the specified operation. Requires the field `previousStatus`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "priority_Mod",
            "description": "Filter results by Priority using the specified operation. Requires the field `priority`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "progressStatus_Mod",
            "description": "Filter results by Progress Status using the specified operation. Requires the field `progressStatus`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "projectID_Mod",
            "description": "Filter results by Project ID using the specified operation. Requires the field `projectID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "projectedCompletionDate_Mod",
            "description": "Filter results by Projected Completion Date using the specified operation. Requires the field `projectedCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "projectedDurationMinutes_Mod",
            "description": "Filter results by Projected Duration Minutes using the specified operation. Requires the field `projectedDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "projectedStartDate_Mod",
            "description": "Filter results by Projected Start Date using the specified operation. Requires the field `projectedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "recurrenceNumber_Mod",
            "description": "Filter results by Recurrence Number using the specified operation. Requires the field `recurrenceNumber`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "recurrenceRuleID_Mod",
            "description": "Filter results by Recurrence Rule ID using the specified operation. Requires the field `recurrenceRuleID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "referenceNumber_Mod",
            "description": "Filter results by Reference Number using the specified operation. Requires the field `referenceNumber`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "rejectionIssueID_Mod",
            "description": "Filter results by Rejection Issue ID using the specified operation. Requires the field `rejectionIssueID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "remainingDurationMinutes_Mod",
            "description": "Filter results by Remaining Duration Minutes using the specified operation. Requires the field `remainingDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "reservedTimeID_Mod",
            "description": "Filter results by Time Off ID using the specified operation. Requires the field `reservedTimeID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "resourceScope_Mod",
            "description": "Filter results by Resource Scope using the specified operation. Requires the field `resourceScope`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "revenueType_Mod",
            "description": "Filter results by Revenue Type using the specified operation. Requires the field `revenueType`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "roleID_Mod",
            "description": "Filter results by Role ID using the specified operation. Requires the field `roleID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "securityRootID_Mod",
            "description": "Filter results by securityRootID using the specified operation. Requires the field `securityRootID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "securityRootObjCode_Mod",
            "description": "Filter results by securityRootObjCode using the specified operation. Requires the field `securityRootObjCode`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "slackDate_Mod",
            "description": "Filter results by Slack Date using the specified operation. Requires the field `slackDate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "spi_Mod",
            "description": "Filter results by Schedule Performance Index using the specified operation. Requires the field `spi`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "status_Mod",
            "description": "Filter results by Status using the specified operation. Requires the field `status`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "statusUpdate_Mod",
            "description": "Filter results by Status Update using the specified operation. Requires the field `statusUpdate`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "submittedByID_Mod",
            "description": "Filter results by Submitted By ID using the specified operation. Requires the field `submittedByID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "taskConstraint_Mod",
            "description": "Filter results by Task Constraint using the specified operation. Requires the field `taskConstraint`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "taskNumber_Mod",
            "description": "Filter results by Task Number using the specified operation. Requires the field `taskNumber`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "teamID_Mod",
            "description": "Filter results by Team ID using the specified operation. Requires the field `teamID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "templateTaskID_Mod",
            "description": "Filter results by Template Task ID using the specified operation. Requires the field `templateTaskID`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "trackingMode_Mod",
            "description": "Filter results by Tracking Mode using the specified operation. Requires the field `trackingMode`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "version_Mod",
            "description": "Filter results by Version using the specified operation. Requires the field `version`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "wbs_Mod",
            "description": "Filter results by Work Breakdown Structure using the specified operation. Requires the field `wbs`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "work_Mod",
            "description": "Filter results by Work using the specified operation. Requires the field `work`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "workRequired_Mod",
            "description": "Filter results by Planned Hours using the specified operation. Requires the field `workRequired`.",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/129/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "ID_Sort",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false,
            "description": "ID"
          },
          {
            "in": "query",
            "name": "URL_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "URL"
          },
          {
            "in": "query",
            "name": "accessorIDs_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "accessorIDs"
          },
          {
            "in": "query",
            "name": "actualCompletionDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Actual Completion Date"
          },
          {
            "in": "query",
            "name": "actualCost_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Actual Cost"
          },
          {
            "in": "query",
            "name": "actualDuration_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Actual Duration"
          },
          {
            "in": "query",
            "name": "actualDurationMinutes_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Actual Duration Minutes"
          },
          {
            "in": "query",
            "name": "actualExpenseCost_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Actual Expense Cost"
          },
          {
            "in": "query",
            "name": "actualLaborCost_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Actual Labor Cost"
          },
          {
            "in": "query",
            "name": "actualRevenue_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Actual Revenue"
          },
          {
            "in": "query",
            "name": "actualStartDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Actual Start Date"
          },
          {
            "in": "query",
            "name": "actualWork_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Actual Hours"
          },
          {
            "in": "query",
            "name": "actualWorkRequired_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Actual Hours"
          },
          {
            "in": "query",
            "name": "approvalCompletionDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Approval Path Completion Date"
          },
          {
            "in": "query",
            "name": "approvalEstStartDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Approval Estimated Start Date"
          },
          {
            "in": "query",
            "name": "approvalPlannedStartDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Approval Planned Start Date"
          },
          {
            "in": "query",
            "name": "approvalPlannedStartDay_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "approvalPlannedStartDay"
          },
          {
            "in": "query",
            "name": "approvalProcessID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Approval Processes ID"
          },
          {
            "in": "query",
            "name": "approvalProjectedStartDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Approval Projected Start Date"
          },
          {
            "in": "query",
            "name": "approvalStartDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Approval Path Start Date"
          },
          {
            "in": "query",
            "name": "approversString_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "approversString"
          },
          {
            "in": "query",
            "name": "assignedToID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Assigned To ID"
          },
          {
            "in": "query",
            "name": "assignmentsListString_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "assignmentsListString"
          },
          {
            "in": "query",
            "name": "auditTypes_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Audit Types"
          },
          {
            "in": "query",
            "name": "backlogOrder_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Order"
          },
          {
            "in": "query",
            "name": "backlogParent_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Parent"
          },
          {
            "in": "query",
            "name": "billingAmount_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Cap or Fixed Amount"
          },
          {
            "in": "query",
            "name": "billingRecordID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Billing Record ID"
          },
          {
            "in": "query",
            "name": "canStart_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Can Start"
          },
          {
            "in": "query",
            "name": "categoryID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Category ID"
          },
          {
            "in": "query",
            "name": "color_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Color"
          },
          {
            "in": "query",
            "name": "commitDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Commit Date"
          },
          {
            "in": "query",
            "name": "commitDateRange_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "commitDateRange"
          },
          {
            "in": "query",
            "name": "completionPendingDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Completion Pending Date"
          },
          {
            "in": "query",
            "name": "condition_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Condition"
          },
          {
            "in": "query",
            "name": "constraintDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Constraint Date"
          },
          {
            "in": "query",
            "name": "convertedOpTaskEntryDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "convertedOpTaskEntryDate"
          },
          {
            "in": "query",
            "name": "convertedOpTaskName_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "convertedOpTaskName"
          },
          {
            "in": "query",
            "name": "convertedOpTaskOriginatorID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "convertedOpTaskOriginatorID"
          },
          {
            "in": "query",
            "name": "costAmount_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Cost Amount"
          },
          {
            "in": "query",
            "name": "costType_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Cost Type"
          },
          {
            "in": "query",
            "name": "cpi_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Cost Performance Index"
          },
          {
            "in": "query",
            "name": "csi_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Cost Schedule Performance Index"
          },
          {
            "in": "query",
            "name": "currentApprovalStepID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Current Approval Stage ID"
          },
          {
            "in": "query",
            "name": "customerID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Customer ID"
          },
          {
            "in": "query",
            "name": "daysLate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Days Late"
          },
          {
            "in": "query",
            "name": "description_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Description"
          },
          {
            "in": "query",
            "name": "dueDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Due Date"
          },
          {
            "in": "query",
            "name": "duration_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Duration"
          },
          {
            "in": "query",
            "name": "durationExpression_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "durationExpression"
          },
          {
            "in": "query",
            "name": "durationMinutes_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Duration in Minutes"
          },
          {
            "in": "query",
            "name": "durationType_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Duration Type"
          },
          {
            "in": "query",
            "name": "durationUnit_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Duration Unit"
          },
          {
            "in": "query",
            "name": "eac_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "EAC"
          },
          {
            "in": "query",
            "name": "enteredByID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Entered By ID"
          },
          {
            "in": "query",
            "name": "entryDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Entry Date"
          },
          {
            "in": "query",
            "name": "estCompletionDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Estimated Due Date"
          },
          {
            "in": "query",
            "name": "estStartDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Estimated Start Date"
          },
          {
            "in": "query",
            "name": "estimate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Estimate"
          },
          {
            "in": "query",
            "name": "extRefID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "External Reference ID"
          },
          {
            "in": "query",
            "name": "groupID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Group ID"
          },
          {
            "in": "query",
            "name": "handoffDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Handoff Date"
          },
          {
            "in": "query",
            "name": "hasCompletionConstraint_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "hasCompletionConstraint"
          },
          {
            "in": "query",
            "name": "hasDocuments_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Has Documents"
          },
          {
            "in": "query",
            "name": "hasExpenses_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Has Expenses"
          },
          {
            "in": "query",
            "name": "hasMessages_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Has Messages"
          },
          {
            "in": "query",
            "name": "hasNotes_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Has Notes"
          },
          {
            "in": "query",
            "name": "hasResolvables_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Has Resolvables"
          },
          {
            "in": "query",
            "name": "hasStartConstraint_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "hasStartConstraint"
          },
          {
            "in": "query",
            "name": "hasTimedNotifications_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Has Reminder Notifications"
          },
          {
            "in": "query",
            "name": "hoursPerPoint_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "hoursPerPoint"
          },
          {
            "in": "query",
            "name": "indent_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Indent"
          },
          {
            "in": "query",
            "name": "isAgile_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Agile"
          },
          {
            "in": "query",
            "name": "isCritical_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Is Critical"
          },
          {
            "in": "query",
            "name": "isDurationLocked_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Duration Locked"
          },
          {
            "in": "query",
            "name": "isLevelingExcluded_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Exclude from Leveling"
          },
          {
            "in": "query",
            "name": "isReady_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Ready"
          },
          {
            "in": "query",
            "name": "isStatusComplete_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "isStatusComplete"
          },
          {
            "in": "query",
            "name": "isWorkRequiredLocked_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Worked Locked"
          },
          {
            "in": "query",
            "name": "iterationID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Iteration ID"
          },
          {
            "in": "query",
            "name": "kanbanBoardID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Kanban Board ID"
          },
          {
            "in": "query",
            "name": "kanbanFlag_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Kanban Flag"
          },
          {
            "in": "query",
            "name": "lastConditionNoteID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Last Condition Note ID"
          },
          {
            "in": "query",
            "name": "lastNoteID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Last Note ID"
          },
          {
            "in": "query",
            "name": "lastUpdateDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Last Update Date"
          },
          {
            "in": "query",
            "name": "lastUpdatedByID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Last Updated By ID"
          },
          {
            "in": "query",
            "name": "levelingStartDelay_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Leveling Delay"
          },
          {
            "in": "query",
            "name": "levelingStartDelayExpression_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "levelingStartDelayExpression"
          },
          {
            "in": "query",
            "name": "levelingStartDelayMinutes_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "levelingStartDelayMinutes"
          },
          {
            "in": "query",
            "name": "milestoneID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Milestone ID"
          },
          {
            "in": "query",
            "name": "name_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Name"
          },
          {
            "in": "query",
            "name": "numberOfChildren_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Number of Children"
          },
          {
            "in": "query",
            "name": "numberOpenOpTasks_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Number of Open Issues"
          },
          {
            "in": "query",
            "name": "originalDuration_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Original Duration"
          },
          {
            "in": "query",
            "name": "originalWorkRequired_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Original Planned Hours"
          },
          {
            "in": "query",
            "name": "parentID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Parent ID"
          },
          {
            "in": "query",
            "name": "parentLag_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Parent Lag"
          },
          {
            "in": "query",
            "name": "parentLagType_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Parent Lag Type"
          },
          {
            "in": "query",
            "name": "pendingCalculation_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "pendingCalculation"
          },
          {
            "in": "query",
            "name": "pendingPredecessors_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Pending Predecessors"
          },
          {
            "in": "query",
            "name": "pendingUpdateMethods_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "pendingUpdateMethods"
          },
          {
            "in": "query",
            "name": "percentComplete_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Percent Complete"
          },
          {
            "in": "query",
            "name": "personal_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Personal"
          },
          {
            "in": "query",
            "name": "plannedCompletionDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Planned Completion Date"
          },
          {
            "in": "query",
            "name": "plannedCost_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Planned Cost"
          },
          {
            "in": "query",
            "name": "plannedDateAlignment_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Planned Date Alignment"
          },
          {
            "in": "query",
            "name": "plannedDuration_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Planned Duration"
          },
          {
            "in": "query",
            "name": "plannedDurationMinutes_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Planned Duration Minutes"
          },
          {
            "in": "query",
            "name": "plannedExpenseCost_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Planned Expense Cost"
          },
          {
            "in": "query",
            "name": "plannedHoursAlignment_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Planned Hours Alignment"
          },
          {
            "in": "query",
            "name": "plannedLaborCost_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Planned Labor Cost"
          },
          {
            "in": "query",
            "name": "plannedRevenue_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Planned Revenue"
          },
          {
            "in": "query",
            "name": "plannedStartDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Planned Start Date"
          },
          {
            "in": "query",
            "name": "previousStatus_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Previous Status"
          },
          {
            "in": "query",
            "name": "priority_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Priority"
          },
          {
            "in": "query",
            "name": "priorityColor_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "priorityColor"
          },
          {
            "in": "query",
            "name": "progressStatus_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Progress Status"
          },
          {
            "in": "query",
            "name": "projectID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Project ID"
          },
          {
            "in": "query",
            "name": "projectedCompletionDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Projected Completion Date"
          },
          {
            "in": "query",
            "name": "projectedDurationMinutes_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Projected Duration Minutes"
          },
          {
            "in": "query",
            "name": "projectedStartDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Projected Start Date"
          },
          {
            "in": "query",
            "name": "recurrenceNumber_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Recurrence Number"
          },
          {
            "in": "query",
            "name": "recurrenceRuleID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Recurrence Rule ID"
          },
          {
            "in": "query",
            "name": "referenceNumber_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Reference Number"
          },
          {
            "in": "query",
            "name": "rejectionIssueID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Rejection Issue ID"
          },
          {
            "in": "query",
            "name": "remainingDurationMinutes_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Remaining Duration Minutes"
          },
          {
            "in": "query",
            "name": "reservedTimeID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Time Off ID"
          },
          {
            "in": "query",
            "name": "resourceScope_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Resource Scope"
          },
          {
            "in": "query",
            "name": "revenueType_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Revenue Type"
          },
          {
            "in": "query",
            "name": "roleID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Role ID"
          },
          {
            "in": "query",
            "name": "securityRootID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "securityRootID"
          },
          {
            "in": "query",
            "name": "securityRootObjCode_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "securityRootObjCode"
          },
          {
            "in": "query",
            "name": "showCommitDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "showCommitDate"
          },
          {
            "in": "query",
            "name": "showCondition_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "showCondition"
          },
          {
            "in": "query",
            "name": "showStatus_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "showStatus"
          },
          {
            "in": "query",
            "name": "slackDate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Slack Date"
          },
          {
            "in": "query",
            "name": "spi_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Schedule Performance Index"
          },
          {
            "in": "query",
            "name": "status_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Status"
          },
          {
            "in": "query",
            "name": "statusEquatesWith_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Status Equates With"
          },
          {
            "in": "query",
            "name": "statusUpdate_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Status Update"
          },
          {
            "in": "query",
            "name": "submittedByID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Submitted By ID"
          },
          {
            "in": "query",
            "name": "taskConstraint_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Task Constraint"
          },
          {
            "in": "query",
            "name": "taskNumber_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Task Number"
          },
          {
            "in": "query",
            "name": "taskNumberPredecessorString_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "taskNumberPredecessorString"
          },
          {
            "in": "query",
            "name": "teamID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Team ID"
          },
          {
            "in": "query",
            "name": "templateTaskID_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Template Task ID"
          },
          {
            "in": "query",
            "name": "trackingMode_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Tracking Mode"
          },
          {
            "in": "query",
            "name": "version_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Version"
          },
          {
            "in": "query",
            "name": "wbs_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Work Breakdown Structure"
          },
          {
            "in": "query",
            "name": "work_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Work"
          },
          {
            "in": "query",
            "name": "workPerDayList_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "workPerDayList"
          },
          {
            "in": "query",
            "name": "workRequired_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Planned Hours"
          },
          {
            "in": "query",
            "name": "workRequiredExpression_Sort",
            "schema": {
              "$ref": "#/paths/~1task~1search/get/parameters/1281/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "workRequiredExpression"
          },
          {
            "$ref": "#/paths/~1task/post/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/fields.yml"
          },
          {
            "in": "query",
            "name": "$$LIMIT",
            "schema": {
              "type": "integer",
              "maximum": 2000,
              "minimum": 1,
              "default": 100
            },
            "description": "Max number of results to include in the response."
          },
          {
            "in": "query",
            "name": "$$FIRST",
            "schema": {
              "type": "integer"
            },
            "description": "The first result to include in the response. Used with $$LIMIT and _Sort for pagination."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/paths/~1task~1report/get/parameters/1/content/application~1json/schema",
                            "x-miro": "swagger/v10.0/schemas/resources/TASK/read.json"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/acceptWork": {
      "put": {
        "operationId": "putTASKActionacceptWorkWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          }
        ],
        "summary": "Task acceptWork",
        "description": "Performs the acceptWork action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {}
                  },
                  {
                    "type": "object",
                    "properties": {
                      "userID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "username": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "password": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "auditNote": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "auditUserIDs": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "sendNoteAsEmail": {
                        "$ref": "#/paths/~1task/put/parameters/7/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "objCode": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "userIDs": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "roleIDs": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "teamID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "taskIDs": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "projectID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "parentID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "options": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "ids": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "project": {
                        "$ref": "#/paths/~1task/put/parameters/18/schema",
                        "x-miro": "swagger/v10.0/schemas/resources/PROJ/write.json"
                      },
                      "exchangeRate": {
                        "$ref": "#/paths/~1task/put/parameters/19/schema",
                        "x-miro": "swagger/v10.0/schemas/resources/EXRATE/write.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "linkedObjectID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "integrationType": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "URL": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "params": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "status": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "assignmentID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "projectID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "parentID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "options": {
                        "$ref": "#/paths/~1task/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "noteText": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "commitDate": {
                        "$ref": "#/paths/~1task/post/parameters/4/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "userID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "linkedObjectID": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "integrationType": {
                        "$ref": "#/paths/~1task/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  }
                ]
              },
              "examples": {
                "putTASKActionacceptWorkWithId": {
                  "value": {}
                },
                "putTASKActionapproveApprovalWithId": {
                  "value": {}
                },
                "putTASKActionassignWithId": {
                  "value": {}
                },
                "putTASKActionassignMultipleWithId": {
                  "value": {}
                },
                "putTASKActionbulkCopyWithId": {
                  "value": {}
                },
                "putTASKActionbulkMoveWithId": {
                  "value": {}
                },
                "putTASKActioncalculateDataExtensionWithId": {
                  "value": {}
                },
                "putTASKActioncalculateDataExtensionsWithId": {
                  "value": {}
                },
                "putTASKActionconvertToProjectWithId": {
                  "value": {}
                },
                "putTASKActionlinkExternalObjectWithId": {
                  "value": {}
                },
                "putTASKActionmarkDoneWithId": {
                  "value": {}
                },
                "putTASKActionmarkNotDoneWithId": {
                  "value": {}
                },
                "putTASKActionmoveWithId": {
                  "value": {}
                },
                "putTASKActionrecallApprovalWithId": {
                  "value": {}
                },
                "putTASKActionrejectApprovalWithId": {
                  "value": {}
                },
                "putTASKActionreplyToAssignmentWithId": {
                  "value": {}
                },
                "putTASKActionunacceptWorkWithId": {
                  "value": {}
                },
                "putTASKActionunassignWithId": {
                  "value": {}
                },
                "putTASKActionunassignOccurrencesWithId": {
                  "value": {}
                },
                "putTASKActionunlinkExternalObjectWithId": {
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "examples": {
                  "putTASKActionacceptWorkWithId": {
                    "value": {}
                  },
                  "putTASKActionapproveApprovalWithId": {
                    "value": {}
                  },
                  "putTASKActionassignWithId": {
                    "value": {}
                  },
                  "putTASKActionassignMultipleWithId": {
                    "value": {}
                  },
                  "putTASKActionbulkCopyWithId": {
                    "value": {}
                  },
                  "putTASKActionbulkMoveWithId": {
                    "value": {}
                  },
                  "putTASKActioncalculateDataExtensionWithId": {
                    "value": {}
                  },
                  "putTASKActioncalculateDataExtensionsWithId": {
                    "value": {}
                  },
                  "putTASKActionconvertToProjectWithId": {
                    "value": {}
                  },
                  "putTASKActionlinkExternalObjectWithId": {
                    "value": {}
                  },
                  "putTASKActionmarkDoneWithId": {
                    "value": {}
                  },
                  "putTASKActionmarkNotDoneWithId": {
                    "value": {}
                  },
                  "putTASKActionmoveWithId": {
                    "value": {}
                  },
                  "putTASKActionrecallApprovalWithId": {
                    "value": {}
                  },
                  "putTASKActionrejectApprovalWithId": {
                    "value": {}
                  },
                  "putTASKActionreplyToAssignmentWithId": {
                    "value": {}
                  },
                  "putTASKActionunacceptWorkWithId": {
                    "value": {}
                  },
                  "putTASKActionunassignWithId": {
                    "value": {}
                  },
                  "putTASKActionunassignOccurrencesWithId": {
                    "value": {}
                  },
                  "putTASKActionunlinkExternalObjectWithId": {
                    "value": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/{ID}/acceptWork": {
      "put": {
        "operationId": "putTASKActionacceptWorkWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          }
        ],
        "summary": "Task acceptWork",
        "description": "Performs the acceptWork action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/approveApproval": {
      "put": {
        "operationId": "putTASKActionapproveApprovalWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "userID",
            "description": "userID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "username",
            "description": "username",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "password",
            "description": "password",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "auditNote",
            "description": "auditNote",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "auditUserIDs",
            "description": "auditUserIDs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "sendNoteAsEmail",
            "description": "sendNoteAsEmail",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          }
        ],
        "summary": "Task approveApproval",
        "description": "Performs the approveApproval action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "username": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "password": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "auditNote": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "auditUserIDs": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "sendNoteAsEmail": {
                    "$ref": "#/paths/~1task/put/parameters/7/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/{ID}/approveApproval": {
      "put": {
        "operationId": "putTASKActionapproveApprovalWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "userID",
            "description": "userID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "username",
            "description": "username",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "password",
            "description": "password",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "auditNote",
            "description": "auditNote",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "auditUserIDs",
            "description": "auditUserIDs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "sendNoteAsEmail",
            "description": "sendNoteAsEmail",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          }
        ],
        "summary": "Task approveApproval",
        "description": "Performs the approveApproval action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "username": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "password": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "auditNote": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "auditUserIDs": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "sendNoteAsEmail": {
                    "$ref": "#/paths/~1task/put/parameters/7/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/assign": {
      "put": {
        "operationId": "putTASKActionassignWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "objID",
            "description": "objID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "objCode",
            "description": "objCode",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Task assign",
        "description": "Performs the assign action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "objID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "objCode": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/{ID}/assign": {
      "put": {
        "operationId": "putTASKActionassignWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "objID",
            "description": "objID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "objCode",
            "description": "objCode",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Task assign",
        "description": "Performs the assign action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "objID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "objCode": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/assignMultiple": {
      "put": {
        "operationId": "putTASKActionassignMultipleWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "userIDs",
            "description": "userIDs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "roleIDs",
            "description": "roleIDs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "teamID",
            "description": "teamID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Task assignMultiple",
        "description": "Performs the assignMultiple action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userIDs": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "roleIDs": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "teamID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/{ID}/assignMultiple": {
      "put": {
        "operationId": "putTASKActionassignMultipleWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "userIDs",
            "description": "userIDs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "roleIDs",
            "description": "roleIDs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "teamID",
            "description": "teamID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Task assignMultiple",
        "description": "Performs the assignMultiple action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userIDs": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "roleIDs": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "teamID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/bulkCopy": {
      "put": {
        "operationId": "putTASKActionbulkCopyWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "taskIDs",
            "description": "taskIDs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "projectID",
            "description": "projectID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "parentID",
            "description": "parentID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "options",
            "description": "options",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Task bulkCopy",
        "description": "Performs the bulkCopy action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taskIDs": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "projectID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "parentID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "options": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/{ID}/bulkCopy": {
      "put": {
        "operationId": "putTASKActionbulkCopyWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "taskIDs",
            "description": "taskIDs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "projectID",
            "description": "projectID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "parentID",
            "description": "parentID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "options",
            "description": "options",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Task bulkCopy",
        "description": "Performs the bulkCopy action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taskIDs": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "projectID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "parentID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "options": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/bulkMove": {
      "put": {
        "operationId": "putTASKActionbulkMoveWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "taskIDs",
            "description": "taskIDs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "projectID",
            "description": "projectID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "parentID",
            "description": "parentID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "options",
            "description": "options",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Task bulkMove",
        "description": "Performs the bulkMove action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taskIDs": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "projectID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "parentID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "options": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/{ID}/bulkMove": {
      "put": {
        "operationId": "putTASKActionbulkMoveWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "taskIDs",
            "description": "taskIDs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "projectID",
            "description": "projectID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "parentID",
            "description": "parentID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "options",
            "description": "options",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Task bulkMove",
        "description": "Performs the bulkMove action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taskIDs": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "projectID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "parentID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "options": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/calculateDataExtension": {
      "put": {
        "operationId": "putTASKActioncalculateDataExtensionWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          }
        ],
        "summary": "Task calculateDataExtension",
        "description": "Performs the calculateDataExtension action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/{ID}/calculateDataExtension": {
      "put": {
        "operationId": "putTASKActioncalculateDataExtensionWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          }
        ],
        "summary": "Task calculateDataExtension",
        "description": "Performs the calculateDataExtension action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/calculateDataExtensions": {
      "put": {
        "operationId": "putTASKActioncalculateDataExtensionsWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "ids",
            "description": "ids",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Task calculateDataExtensions",
        "description": "Performs the calculateDataExtensions action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/{ID}/calculateDataExtensions": {
      "put": {
        "operationId": "putTASKActioncalculateDataExtensionsWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "ids",
            "description": "ids",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Task calculateDataExtensions",
        "description": "Performs the calculateDataExtensions action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/convertToProject": {
      "put": {
        "operationId": "putTASKActionconvertToProjectWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "project",
            "description": "project",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/18/schema",
              "x-miro": "swagger/v10.0/schemas/resources/PROJ/write.json"
            }
          },
          {
            "in": "query",
            "name": "exchangeRate",
            "description": "exchangeRate",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/19/schema",
              "x-miro": "swagger/v10.0/schemas/resources/EXRATE/write.json"
            }
          }
        ],
        "summary": "Task convertToProject",
        "description": "Performs the convertToProject action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": {
                    "$ref": "#/paths/~1task/put/parameters/18/schema",
                    "x-miro": "swagger/v10.0/schemas/resources/PROJ/write.json"
                  },
                  "exchangeRate": {
                    "$ref": "#/paths/~1task/put/parameters/19/schema",
                    "x-miro": "swagger/v10.0/schemas/resources/EXRATE/write.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/{ID}/convertToProject": {
      "put": {
        "operationId": "putTASKActionconvertToProjectWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "project",
            "description": "project",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/18/schema",
              "x-miro": "swagger/v10.0/schemas/resources/PROJ/write.json"
            }
          },
          {
            "in": "query",
            "name": "exchangeRate",
            "description": "exchangeRate",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/19/schema",
              "x-miro": "swagger/v10.0/schemas/resources/EXRATE/write.json"
            }
          }
        ],
        "summary": "Task convertToProject",
        "description": "Performs the convertToProject action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": {
                    "$ref": "#/paths/~1task/put/parameters/18/schema",
                    "x-miro": "swagger/v10.0/schemas/resources/PROJ/write.json"
                  },
                  "exchangeRate": {
                    "$ref": "#/paths/~1task/put/parameters/19/schema",
                    "x-miro": "swagger/v10.0/schemas/resources/EXRATE/write.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/linkExternalObject": {
      "put": {
        "operationId": "putTASKActionlinkExternalObjectWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "objID",
            "description": "objID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "linkedObjectID",
            "description": "linkedObjectID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "integrationType",
            "description": "integrationType",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "URL",
            "description": "URL",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "params",
            "description": "params",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Task linkExternalObject",
        "description": "Performs the linkExternalObject action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "objID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "linkedObjectID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "integrationType": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "URL": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "params": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/{ID}/linkExternalObject": {
      "put": {
        "operationId": "putTASKActionlinkExternalObjectWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "objID",
            "description": "objID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "linkedObjectID",
            "description": "linkedObjectID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "integrationType",
            "description": "integrationType",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "URL",
            "description": "URL",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "params",
            "description": "params",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Task linkExternalObject",
        "description": "Performs the linkExternalObject action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "objID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "linkedObjectID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "integrationType": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "URL": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "params": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/markDone": {
      "put": {
        "operationId": "putTASKActionmarkDoneWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "status",
            "description": "status",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Task markDone",
        "description": "Performs the markDone action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/{ID}/markDone": {
      "put": {
        "operationId": "putTASKActionmarkDoneWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "status",
            "description": "status",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Task markDone",
        "description": "Performs the markDone action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/markNotDone": {
      "put": {
        "operationId": "putTASKActionmarkNotDoneWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "assignmentID",
            "description": "assignmentID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Task markNotDone",
        "description": "Performs the markNotDone action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "assignmentID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/{ID}/markNotDone": {
      "put": {
        "operationId": "putTASKActionmarkNotDoneWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "assignmentID",
            "description": "assignmentID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Task markNotDone",
        "description": "Performs the markNotDone action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "assignmentID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/move": {
      "put": {
        "operationId": "putTASKActionmoveWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "projectID",
            "description": "projectID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "parentID",
            "description": "parentID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "options",
            "description": "options",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Task move",
        "description": "Performs the move action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "parentID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "options": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/{ID}/move": {
      "put": {
        "operationId": "putTASKActionmoveWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "projectID",
            "description": "projectID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "parentID",
            "description": "parentID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "options",
            "description": "options",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Task move",
        "description": "Performs the move action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "parentID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "options": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/recallApproval": {
      "put": {
        "operationId": "putTASKActionrecallApprovalWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          }
        ],
        "summary": "Task recallApproval",
        "description": "Performs the recallApproval action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/{ID}/recallApproval": {
      "put": {
        "operationId": "putTASKActionrecallApprovalWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          }
        ],
        "summary": "Task recallApproval",
        "description": "Performs the recallApproval action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/rejectApproval": {
      "put": {
        "operationId": "putTASKActionrejectApprovalWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "userID",
            "description": "userID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "username",
            "description": "username",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "password",
            "description": "password",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "auditNote",
            "description": "auditNote",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "auditUserIDs",
            "description": "auditUserIDs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "sendNoteAsEmail",
            "description": "sendNoteAsEmail",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          }
        ],
        "summary": "Task rejectApproval",
        "description": "Performs the rejectApproval action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "username": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "password": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "auditNote": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "auditUserIDs": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "sendNoteAsEmail": {
                    "$ref": "#/paths/~1task/put/parameters/7/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/{ID}/rejectApproval": {
      "put": {
        "operationId": "putTASKActionrejectApprovalWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "userID",
            "description": "userID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "username",
            "description": "username",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "password",
            "description": "password",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "auditNote",
            "description": "auditNote",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "auditUserIDs",
            "description": "auditUserIDs",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "sendNoteAsEmail",
            "description": "sendNoteAsEmail",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          }
        ],
        "summary": "Task rejectApproval",
        "description": "Performs the rejectApproval action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "username": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "password": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "auditNote": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "auditUserIDs": {
                    "$ref": "#/paths/~1task/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "sendNoteAsEmail": {
                    "$ref": "#/paths/~1task/put/parameters/7/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/replyToAssignment": {
      "put": {
        "operationId": "putTASKActionreplyToAssignmentWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "noteText",
            "description": "noteText",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "commitDate",
            "description": "commitDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          }
        ],
        "summary": "Task replyToAssignment",
        "description": "Performs the replyToAssignment action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteText": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "commitDate": {
                    "$ref": "#/paths/~1task/post/parameters/4/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/{ID}/replyToAssignment": {
      "put": {
        "operationId": "putTASKActionreplyToAssignmentWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "noteText",
            "description": "noteText",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "commitDate",
            "description": "commitDate",
            "schema": {
              "$ref": "#/paths/~1task/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          }
        ],
        "summary": "Task replyToAssignment",
        "description": "Performs the replyToAssignment action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteText": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "commitDate": {
                    "$ref": "#/paths/~1task/post/parameters/4/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/unacceptWork": {
      "put": {
        "operationId": "putTASKActionunacceptWorkWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          }
        ],
        "summary": "Task unacceptWork",
        "description": "Performs the unacceptWork action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/{ID}/unacceptWork": {
      "put": {
        "operationId": "putTASKActionunacceptWorkWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          }
        ],
        "summary": "Task unacceptWork",
        "description": "Performs the unacceptWork action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/unassign": {
      "put": {
        "operationId": "putTASKActionunassignWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "userID",
            "description": "userID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Task unassign",
        "description": "Performs the unassign action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/{ID}/unassign": {
      "put": {
        "operationId": "putTASKActionunassignWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "userID",
            "description": "userID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Task unassign",
        "description": "Performs the unassign action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/unassignOccurrences": {
      "put": {
        "operationId": "putTASKActionunassignOccurrencesWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "userID",
            "description": "userID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Task unassignOccurrences",
        "description": "Performs the unassignOccurrences action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/{ID}/unassignOccurrences": {
      "put": {
        "operationId": "putTASKActionunassignOccurrencesWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "userID",
            "description": "userID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Task unassignOccurrences",
        "description": "Performs the unassignOccurrences action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/unlinkExternalObject": {
      "put": {
        "operationId": "putTASKActionunlinkExternalObjectWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "objID",
            "description": "objID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "linkedObjectID",
            "description": "linkedObjectID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "integrationType",
            "description": "integrationType",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Task unlinkExternalObject",
        "description": "Performs the unlinkExternalObject action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "objID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "linkedObjectID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "integrationType": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/task/{ID}/unlinkExternalObject": {
      "put": {
        "operationId": "putTASKActionunlinkExternalObjectWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1task~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "objID",
            "description": "objID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "linkedObjectID",
            "description": "linkedObjectID",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "integrationType",
            "description": "integrationType",
            "schema": {
              "$ref": "#/paths/~1task/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Task unlinkExternalObject",
        "description": "Performs the unlinkExternalObject action on the Task object",
        "tags": [
          "TASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "objID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "linkedObjectID": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "integrationType": {
                    "$ref": "#/paths/~1task/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1task/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    }
  }
}
