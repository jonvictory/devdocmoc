{
  "openapi": "3.0.0",
  "info": {
    "title": "Attask OPTASK API v10.0",
    "version": "v10.0",
    "contact": {
      "email": "support@workfront.com"
    }
  },
  "servers": [
    {
      "url": "https://*.my.workfront.com/attask/api/v10.0",
      "description": "My Workfront API v10.0 Server"
    }
  ],
  "components": {
    "securitySchemes": {
      "apiKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "apiKey"
      },
      "apiKeyQuery": {
        "type": "apiKey",
        "in": "query",
        "name": "apiKey"
      },
      "sessionCookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "sessionID"
      },
      "sessionHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "sessionID"
      },
      "sessionQuery": {
        "type": "apiKey",
        "in": "query",
        "name": "sessionID"
      },
      "usernameBody": {
        "type": "http",
        "scheme": "custom",
        "x-custom-schema": {
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": true
                }
              }
            }
          }
        }
      },
      "usernameHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "username"
      },
      "usernameQuery": {
        "type": "apiKey",
        "in": "query",
        "name": "username"
      },
      "passwordBody": {
        "type": "http",
        "scheme": "custom",
        "x-custom-schema": {
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "password": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": true
                }
              }
            }
          }
        }
      },
      "passwordHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "password"
      },
      "passwordQuery": {
        "type": "apiKey",
        "in": "query",
        "name": "password"
      }
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    },
    {
      "apiKeyQuery": []
    },
    {
      "sessionCookie": []
    },
    {
      "sessionHeader": []
    },
    {
      "sessionQuery": []
    },
    {
      "usernameHeader": [],
      "passwordHeader": []
    },
    {
      "usernameQuery": [],
      "passwordQuery": []
    }
  ],
  "tags": [
    {
      "name": "authentication",
      "description": "Requests related to ensuring follow-up requests have the proper access."
    },
    {
      "name": "general",
      "description": "General purpose requests"
    }
  ],
  "paths": {
    "/optask/metadata": {
      "get": {
        "operationId": "getOPTASKMetadata",
        "summary": "Issue Metadata",
        "description": "Gets the Resource Metadata information for Issue",
        "tags": [
          "OPTASK",
          "general"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "objects": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "label": {
                                "type": "string"
                              },
                              "objCode": {
                                "type": "string"
                              },
                              "url": {
                                "type": "string"
                              },
                              "flags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "fields": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "flags": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "label": {
                                      "type": "string"
                                    },
                                    "typeObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "targetTypeObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "fieldType": {
                                      "type": "string"
                                    },
                                    "enumTargetObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "enumType": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "url": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "possibleValues": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "references": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "typeObjCode": {
                                      "type": "string"
                                    },
                                    "targetTypeObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "fieldType": {
                                      "type": "string"
                                    },
                                    "enumTargetObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "enumType": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "url": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                }
                              },
                              "collections": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "typeObjCode": {
                                      "type": "string"
                                    },
                                    "targetTypeObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "fieldType": {
                                      "type": "string"
                                    },
                                    "enumTargetObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "enumType": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "url": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                }
                              },
                              "search": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "typeObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "targetTypeObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "fieldType": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "enumTargetObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "enumType": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "url": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                }
                              },
                              "custom": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "categories": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "ID": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "objCode": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "actions": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "arguments": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "label": {
                                      "type": "string"
                                    },
                                    "resultType": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "queries": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "arguments": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "label": {
                                      "type": "string"
                                    },
                                    "resultType": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "operations": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "name": "OpTask",
                    "label": "Issue",
                    "objCode": "OPTASK",
                    "flags": [
                      "DATA_EXTENDIBLE",
                      "INLINE_EDITABLE",
                      "REPORTABLE",
                      "RESTORABLE",
                      "SHARABLE"
                    ],
                    "url": "https://hub.workfront.com/attask/api/v10.0/optask/metadata",
                    "fields": {
                      "ID": {
                        "label": "ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "accessorIDs": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "accessorIDs",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string[]",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "actualCompletionDate": {
                        "label": "Actual Completion Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "actualCost": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "CURRENCY"
                        ],
                        "label": "Actual Cost",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "actualStartDate": {
                        "label": "Actual Start Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "actualWorkRequired": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Actual Hours",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "actualWorkRequiredExpression": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "actualWorkRequiredExpression",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "ageRangeAsString": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "ageRangeAsString",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "approvalCompletionDate": {
                        "label": "Approval Path Completion Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "approvalEstStartDate": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Approval Estimated Start Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "approvalPlannedStartDate": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Approval Planned Start Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "approvalPlannedStartDay": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "approvalPlannedStartDay",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "approvalProcessID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Approval Processes ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "approvalProjectedStartDate": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Approval Projected Start Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "approvalStartDate": {
                        "label": "Approval Path Start Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "approversString": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "approversString",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "assignedToID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Assigned To ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "auditTypes": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Audit Types",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string[]",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.AuditTypeEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "Status Change",
                            "value": "ST"
                          },
                          {
                            "label": "Attachment Action",
                            "value": "AA"
                          },
                          {
                            "label": "Scope Change",
                            "value": "SC"
                          },
                          {
                            "label": "Note",
                            "value": "NO"
                          },
                          {
                            "label": "General Edit",
                            "value": "GE"
                          },
                          {
                            "label": "Combined Entry",
                            "value": "CM"
                          },
                          {
                            "label": "Error Entry",
                            "value": "ER"
                          },
                          {
                            "label": "Subscription Change",
                            "value": "SB"
                          }
                        ]
                      },
                      "autoClosureDate": {
                        "label": "Auto Closure Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "backlogOrder": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Order",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "backlogParent": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Parent",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "canStart": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Can Start",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "categoryID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Category ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "color": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Color",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "commitDate": {
                        "label": "Commit Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "commitDateRange": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "commitDateRange",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "condition": {
                        "label": "Condition",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.ConditionEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "Going Smoothly",
                            "value": 0
                          },
                          {
                            "label": "Some Concerns",
                            "value": 1
                          },
                          {
                            "label": "Major Roadblocks",
                            "value": 2
                          }
                        ]
                      },
                      "currentApprovalStepID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Current Approval Stage ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "currentStatusDuration": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "currentStatusDuration",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "customerID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Customer ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "description": {
                        "label": "Description",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "dueDate": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Due Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "durationMinutes": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Duration in Minutes",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "enteredByID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Entered By ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "entryDate": {
                        "label": "Entry Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "estimate": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Estimate",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "extRefID": {
                        "label": "External Reference ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "firstResponse": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "First Response",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "hasDocuments": {
                        "label": "Has Documents",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "hasMessages": {
                        "label": "Has Messages",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "hasNotes": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Has Notes",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "hasResolvables": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Has Resolvables",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "hasTimedNotifications": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Has Reminder Notifications",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "howOld": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Age",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "isComplete": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Is Complete",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "isHelpDesk": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Is Help Desk",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "isReady": {
                        "label": "Ready",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "iterationID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Iteration ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "lastConditionNoteID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Last Condition Note ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "lastNoteID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Last Note ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "lastUpdateDate": {
                        "label": "Last Update Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "lastUpdatedByID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Last Updated By ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "name": {
                        "label": "Name",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "numberOfChildren": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Number of Children",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "opTaskType": {
                        "label": "Issue Type",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.OpTaskTypeEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "Issue",
                            "value": "ISU"
                          },
                          {
                            "label": "Bug Report",
                            "value": "BUG"
                          },
                          {
                            "label": "Change Order",
                            "value": "CHO"
                          },
                          {
                            "label": "Request",
                            "value": "REQ"
                          }
                        ]
                      },
                      "opTaskTypeLabel": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "opTaskTypeLabel",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "ownerID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Owner ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "plannedCompletionDate": {
                        "label": "Planned Completion Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "plannedDateAlignment": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Planned Date Alignment",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.PlannedDatesAlignmentEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "Will be done after the planned completion date",
                            "value": 0
                          },
                          {
                            "label": "Will be done on the planned completion date",
                            "value": 1
                          },
                          {
                            "label": "Will be done before the planned completion date",
                            "value": 2
                          },
                          {
                            "label": "No set planned date",
                            "value": 3
                          }
                        ]
                      },
                      "plannedDurationMinutes": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Planned Duration Minutes",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "plannedHoursAlignment": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Planned Hours Alignment",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.PlannedHoursAlignmentEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "More hours than planned",
                            "value": 0
                          },
                          {
                            "label": "Same hours as planned",
                            "value": 1
                          },
                          {
                            "label": "Less hours than planned",
                            "value": 2
                          },
                          {
                            "label": "No planned hours set",
                            "value": 3
                          }
                        ]
                      },
                      "plannedStartDate": {
                        "label": "Planned Start Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "previousStatus": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Previous Status",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.OpTaskStatusEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "New",
                            "value": "NEW"
                          },
                          {
                            "label": "In Progress",
                            "value": "INP"
                          },
                          {
                            "label": "Awaiting Feedback",
                            "value": "AWF"
                          },
                          {
                            "label": "On Hold",
                            "value": "ONH"
                          },
                          {
                            "label": "Reopened",
                            "value": "ROP"
                          },
                          {
                            "label": "Cannot Duplicate",
                            "value": "CND"
                          },
                          {
                            "label": "Won't Resolve",
                            "value": "WTR"
                          },
                          {
                            "label": "Resolved",
                            "value": "RLV"
                          },
                          {
                            "label": "Verified Complete",
                            "value": "VCP"
                          },
                          {
                            "label": "Closed",
                            "value": "CLS"
                          }
                        ]
                      },
                      "priority": {
                        "label": "Priority",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.TimelinePriorityEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "None",
                            "value": 0
                          },
                          {
                            "label": "Low",
                            "value": 1
                          },
                          {
                            "label": "Normal",
                            "value": 2
                          },
                          {
                            "label": "High",
                            "value": 3
                          },
                          {
                            "label": "Urgent",
                            "value": 4
                          }
                        ]
                      },
                      "priorityColor": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "priorityColor",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "projectID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Project ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "projectedCompletionDate": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Projected Completion Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "projectedDurationMinutes": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Projected Duration Minutes",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "projectedStartDate": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Projected Start Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "queueTopicID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Queue Topic ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "referenceNumber": {
                        "label": "Reference Number",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "referenceObjCode": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "referenceObjCode",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "referenceObjID": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "referenceObjID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "rejectionIssueID": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Rejection Issue ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "remainingDurationMinutes": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Remaining Duration Minutes",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "resolutionTime": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "Resolution time",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "resolveOpTaskID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Resolve Issue ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "resolveProjectID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Resolve Project ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "resolveTaskID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Resolve Task ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "resolvingObjCode": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Resolving Object Type",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "resolvingObjID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Resolving Object ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "roleID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Role ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "securityRootID": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE"
                        ],
                        "label": "securityRootID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "securityRootObjCode": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE"
                        ],
                        "label": "securityRootObjCode",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "severity": {
                        "label": "Severity",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.SeverityEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "Cosmetic",
                            "value": 1
                          },
                          {
                            "label": "Causes Confusion",
                            "value": 2
                          },
                          {
                            "label": "Bug with workaround",
                            "value": 3
                          },
                          {
                            "label": "Bug with no workaround",
                            "value": 4
                          },
                          {
                            "label": "Fatal error",
                            "value": 5
                          }
                        ]
                      },
                      "showCommitDate": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "showCommitDate",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "showCondition": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "showCondition",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "showStatus": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "showStatus",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "sourceObjCode": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Source Object Type",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "sourceObjID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Source Object ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "sourceTaskID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Source Task ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "status": {
                        "label": "Status",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": "com.attask.common.constants.OpTaskStatusEnum",
                        "url": null,
                        "possibleValues": [
                          {
                            "label": "New",
                            "value": "NEW"
                          },
                          {
                            "label": "In Progress",
                            "value": "INP"
                          },
                          {
                            "label": "Awaiting Feedback",
                            "value": "AWF"
                          },
                          {
                            "label": "On Hold",
                            "value": "ONH"
                          },
                          {
                            "label": "Reopened",
                            "value": "ROP"
                          },
                          {
                            "label": "Cannot Duplicate",
                            "value": "CND"
                          },
                          {
                            "label": "Won't Resolve",
                            "value": "WTR"
                          },
                          {
                            "label": "Resolved",
                            "value": "RLV"
                          },
                          {
                            "label": "Verified Complete",
                            "value": "VCP"
                          },
                          {
                            "label": "Closed",
                            "value": "CLS"
                          }
                        ]
                      },
                      "statusUpdate": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Status Update",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "storyBoardOrder": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "storyBoardOrder",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "submittedByID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Submitted By ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "teamID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Team ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "url": {
                        "label": "URL",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "version": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Version",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "workRequired": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "NOT_FILTERABLE"
                        ],
                        "label": "Planned Hours",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "workRequiredExpression": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "LAZY_READ",
                          "DYNAMIC"
                        ],
                        "label": "workRequiredExpression",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      }
                    },
                    "references": {
                      "approvalProcess": {
                        "label": "Approval Process",
                        "typeObjCode": "ARVPRC",
                        "targetTypeObjCode": null,
                        "fieldType": "ApprovalProcess",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/arvprc/metadata"
                      },
                      "assignedTo": {
                        "label": "Assigned To",
                        "typeObjCode": "USER",
                        "targetTypeObjCode": null,
                        "fieldType": "User",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/user/metadata"
                      },
                      "category": {
                        "label": "Category",
                        "typeObjCode": "CTGY",
                        "targetTypeObjCode": null,
                        "fieldType": "Category",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/ctgy/metadata"
                      },
                      "currentApprovalStep": {
                        "label": "Current Approval Stage",
                        "typeObjCode": "ARVSTP",
                        "targetTypeObjCode": null,
                        "fieldType": "ApprovalStep",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/arvstp/metadata"
                      },
                      "customer": {
                        "label": "Customer",
                        "typeObjCode": "CUST",
                        "targetTypeObjCode": null,
                        "fieldType": "Customer",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/cust/metadata"
                      },
                      "enteredBy": {
                        "label": "Entered By",
                        "typeObjCode": "USER",
                        "targetTypeObjCode": null,
                        "fieldType": "User",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/user/metadata"
                      },
                      "iteration": {
                        "label": "Iteration",
                        "typeObjCode": "ITRN",
                        "targetTypeObjCode": null,
                        "fieldType": "Iteration",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/itrn/metadata"
                      },
                      "lastConditionNote": {
                        "label": "Last Condition Note",
                        "typeObjCode": "NOTE",
                        "targetTypeObjCode": null,
                        "fieldType": "Note",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/note/metadata"
                      },
                      "lastNote": {
                        "label": "Last Note",
                        "typeObjCode": "NOTE",
                        "targetTypeObjCode": null,
                        "fieldType": "Note",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/note/metadata"
                      },
                      "lastUpdatedBy": {
                        "label": "Last Updated By",
                        "typeObjCode": "USER",
                        "targetTypeObjCode": null,
                        "fieldType": "User",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/user/metadata"
                      },
                      "owner": {
                        "label": "Owner",
                        "typeObjCode": "USER",
                        "targetTypeObjCode": null,
                        "fieldType": "User",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/user/metadata"
                      },
                      "parent": {
                        "label": "Parent",
                        "typeObjCode": "TASK",
                        "targetTypeObjCode": null,
                        "fieldType": "Task",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/task/metadata"
                      },
                      "primaryAssignment": {
                        "label": "Primary Assignment",
                        "typeObjCode": "ASSGN",
                        "targetTypeObjCode": null,
                        "fieldType": "Assignment",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/assgn/metadata"
                      },
                      "project": {
                        "label": "Project",
                        "typeObjCode": "PROJ",
                        "targetTypeObjCode": null,
                        "fieldType": "Project",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/proj/metadata"
                      },
                      "queueTopic": {
                        "label": "Queue Topic",
                        "typeObjCode": "QUET",
                        "targetTypeObjCode": null,
                        "fieldType": "QueueTopic",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/quet/metadata"
                      },
                      "rejectionIssue": {
                        "label": "Rejection Issue",
                        "typeObjCode": "OPTASK",
                        "targetTypeObjCode": null,
                        "fieldType": "OpTask",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/optask/metadata"
                      },
                      "resolveOpTask": {
                        "label": "Resolve Issue",
                        "typeObjCode": "OPTASK",
                        "targetTypeObjCode": null,
                        "fieldType": "OpTask",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/optask/metadata"
                      },
                      "resolveProject": {
                        "label": "Resolve Project",
                        "typeObjCode": "PROJ",
                        "targetTypeObjCode": null,
                        "fieldType": "Project",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/proj/metadata"
                      },
                      "resolveTask": {
                        "label": "Resolve Task",
                        "typeObjCode": "TASK",
                        "targetTypeObjCode": null,
                        "fieldType": "Task",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/task/metadata"
                      },
                      "role": {
                        "label": "Job Role",
                        "typeObjCode": "ROLE",
                        "targetTypeObjCode": null,
                        "fieldType": "Role",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/role/metadata"
                      },
                      "sourceTask": {
                        "label": "Source Task",
                        "typeObjCode": "TASK",
                        "targetTypeObjCode": null,
                        "fieldType": "Task",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/task/metadata"
                      },
                      "submittedBy": {
                        "label": "Submitted By",
                        "typeObjCode": "USER",
                        "targetTypeObjCode": null,
                        "fieldType": "User",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/user/metadata"
                      },
                      "team": {
                        "label": "Team",
                        "typeObjCode": "TEAMOB",
                        "targetTypeObjCode": null,
                        "fieldType": "Team",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/teamob/metadata"
                      },
                      "teamAssignment": {
                        "label": "Team Assignment",
                        "typeObjCode": "ASSGN",
                        "targetTypeObjCode": null,
                        "fieldType": "Assignment",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/assgn/metadata"
                      },
                      "workItem": {
                        "label": "Work Item",
                        "typeObjCode": "WRKITM",
                        "targetTypeObjCode": null,
                        "fieldType": "WorkItem",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/wrkitm/metadata"
                      }
                    },
                    "collections": {
                      "accessRules": {
                        "label": "accessRules",
                        "typeObjCode": "ACSRUL",
                        "targetTypeObjCode": null,
                        "fieldType": "AccessRule",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/acsrul/metadata"
                      },
                      "allPriorities": {
                        "label": "allPriorities",
                        "typeObjCode": "CSTEM",
                        "targetTypeObjCode": null,
                        "fieldType": "CustomEnum",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/cstem/metadata"
                      },
                      "allSeverities": {
                        "label": "allSeverities",
                        "typeObjCode": "CSTEM",
                        "targetTypeObjCode": null,
                        "fieldType": "CustomEnum",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/cstem/metadata"
                      },
                      "allStatuses": {
                        "label": "allStatuses",
                        "typeObjCode": "CSTEM",
                        "targetTypeObjCode": null,
                        "fieldType": "CustomEnum",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/cstem/metadata"
                      },
                      "approverStatuses": {
                        "label": "approverStatuses",
                        "typeObjCode": "ARVSTS",
                        "targetTypeObjCode": null,
                        "fieldType": "ApproverStatus",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/arvsts/metadata"
                      },
                      "assignments": {
                        "label": "Assignments",
                        "typeObjCode": "ASSGN",
                        "targetTypeObjCode": null,
                        "fieldType": "Assignment",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/assgn/metadata"
                      },
                      "awaitingApprovals": {
                        "label": "awaitingApprovals",
                        "typeObjCode": "AWAPVL",
                        "targetTypeObjCode": null,
                        "fieldType": "AwaitingApproval",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/awapvl/metadata"
                      },
                      "documentRequests": {
                        "label": "Document Requests",
                        "typeObjCode": "DOCREQ",
                        "targetTypeObjCode": null,
                        "fieldType": "DocumentRequest",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/docreq/metadata"
                      },
                      "documents": {
                        "label": "Documents",
                        "typeObjCode": "DOCU",
                        "targetTypeObjCode": null,
                        "fieldType": "Document",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/docu/metadata"
                      },
                      "doneStatuses": {
                        "label": "doneStatuses",
                        "typeObjCode": "CSTEM",
                        "targetTypeObjCode": null,
                        "fieldType": "CustomEnum",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/cstem/metadata"
                      },
                      "hours": {
                        "label": "Hours",
                        "typeObjCode": "HOUR",
                        "targetTypeObjCode": null,
                        "fieldType": "Hour",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/hour/metadata"
                      },
                      "objectCategories": {
                        "label": "objectCategories",
                        "typeObjCode": "OBJCAT",
                        "targetTypeObjCode": null,
                        "fieldType": "ObjectCategory",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/objcat/metadata"
                      },
                      "resolvables": {
                        "label": "resolvables",
                        "typeObjCode": "OPTASK",
                        "targetTypeObjCode": null,
                        "fieldType": "OpTask",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/optask/metadata"
                      },
                      "updates": {
                        "label": "Updates",
                        "typeObjCode": "UPDATE",
                        "targetTypeObjCode": null,
                        "fieldType": "Update",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/update/metadata"
                      }
                    },
                    "search": {
                      "actualWork": {
                        "label": "Actual Hours",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "age": {
                        "label": "Age",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "allNotesOM": {
                        "label": "All Notes",
                        "typeObjCode": "NOTE",
                        "targetTypeObjCode": null,
                        "fieldType": "Note",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/note/metadata"
                      },
                      "assignmentsRolesMM": {
                        "label": "Assignment Roles",
                        "typeObjCode": "ROLE",
                        "targetTypeObjCode": null,
                        "fieldType": "Role",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/role/metadata"
                      },
                      "assignmentsUsersMM": {
                        "label": "Assignment Users",
                        "typeObjCode": "USER",
                        "targetTypeObjCode": null,
                        "fieldType": "User",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/user/metadata"
                      },
                      "awaitingApprovalStepApproversMM": {
                        "label": "Stage Approvers",
                        "typeObjCode": "SPAPVR",
                        "targetTypeObjCode": null,
                        "fieldType": "StepApprover",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/spapvr/metadata"
                      },
                      "currentRoleApproversMM": {
                        "label": "Current Role Approvers",
                        "typeObjCode": "ROLE",
                        "targetTypeObjCode": null,
                        "fieldType": "Role",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/role/metadata"
                      },
                      "currentUserApproversMM": {
                        "label": "Current User Approvers",
                        "typeObjCode": "USER",
                        "targetTypeObjCode": null,
                        "fieldType": "User",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/user/metadata"
                      },
                      "groupMM": {
                        "label": "Group",
                        "typeObjCode": "GROUP",
                        "targetTypeObjCode": null,
                        "fieldType": "Group",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/group/metadata"
                      },
                      "handoffDate": {
                        "label": "Handoff Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "isOpTaskComplete": {
                        "label": "Is Issue Complete",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "journalEntries": {
                        "label": "Journal Entries",
                        "typeObjCode": "JRNLE",
                        "targetTypeObjCode": null,
                        "fieldType": "JournalEntry",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/jrnle/metadata"
                      },
                      "notes": {
                        "label": "Notes",
                        "typeObjCode": "NOTE",
                        "targetTypeObjCode": null,
                        "fieldType": "Note",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/note/metadata"
                      },
                      "objectCategoriesMM": {
                        "label": "Categories",
                        "typeObjCode": "CTGY",
                        "targetTypeObjCode": null,
                        "fieldType": "Category",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/ctgy/metadata"
                      },
                      "ownerCompanyMM": {
                        "label": "Owner Company",
                        "typeObjCode": "CMPY",
                        "targetTypeObjCode": null,
                        "fieldType": "Company",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/cmpy/metadata"
                      },
                      "pendingApproval": {
                        "label": "Pending Approval",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "projectCompanyMM": {
                        "label": "Project Company",
                        "typeObjCode": "CMPY",
                        "targetTypeObjCode": null,
                        "fieldType": "Company",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/cmpy/metadata"
                      },
                      "projectGroupID": {
                        "label": "Project Group ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "projectOwnerID": {
                        "label": "Project Owner ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "projectPortfolioID": {
                        "label": "Project Portfolio ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "projectPortfolioMM": {
                        "label": "Project Portfolio",
                        "typeObjCode": "PORT",
                        "targetTypeObjCode": null,
                        "fieldType": "Portfolio",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/port/metadata"
                      },
                      "projectProgramID": {
                        "label": "Project Program ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "projectUserIDs": {
                        "label": "Project User IDs",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "projectUserRolesOM": {
                        "label": "Project User Roles",
                        "typeObjCode": "PTEAM",
                        "targetTypeObjCode": null,
                        "fieldType": "ProjectUserRole",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/pteam/metadata"
                      },
                      "projectUsersOM": {
                        "label": "Project Users",
                        "typeObjCode": "PRTU",
                        "targetTypeObjCode": null,
                        "fieldType": "ProjectUser",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/prtu/metadata"
                      },
                      "queueDefOO": {
                        "label": "Queue Definition",
                        "typeObjCode": "QUED",
                        "targetTypeObjCode": null,
                        "fieldType": "QueueDef",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/qued/metadata"
                      },
                      "requeststatus": {
                        "label": "Request Status",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "sourcetask": {
                        "label": "Source Task",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "statusEquatesWith": {
                        "label": "Status Equates With",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "statusModifier": {
                        "label": "Pending Status",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "taskID": {
                        "label": "Task ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "work": {
                        "label": "Work",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "double",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      }
                    },
                    "actions": {
                      "acceptWork": {
                        "flags": [],
                        "label": "acceptWork"
                      },
                      "approveApproval": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "userID",
                            "type": "string"
                          },
                          {
                            "name": "username",
                            "type": "string"
                          },
                          {
                            "name": "password",
                            "type": "string"
                          },
                          {
                            "name": "auditNote",
                            "type": "string"
                          },
                          {
                            "name": "auditUserIDs",
                            "type": "string[]"
                          },
                          {
                            "name": "sendNoteAsEmail",
                            "type": "boolean"
                          }
                        ],
                        "label": "approveApproval"
                      },
                      "assign": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "objID",
                            "type": "string"
                          },
                          {
                            "name": "objCode",
                            "type": "string"
                          }
                        ],
                        "label": "assign"
                      },
                      "assignMultiple": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "userIDs",
                            "type": "string[]"
                          },
                          {
                            "name": "roleIDs",
                            "type": "string[]"
                          },
                          {
                            "name": "teamID",
                            "type": "string"
                          }
                        ],
                        "label": "assignMultiple"
                      },
                      "calculateDataExtension": {
                        "flags": [],
                        "label": "calculateDataExtension"
                      },
                      "convertToProject": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "project",
                            "type": "Project"
                          },
                          {
                            "name": "exchangeRate",
                            "type": "ExchangeRate"
                          },
                          {
                            "name": "options",
                            "type": "string[]"
                          }
                        ],
                        "label": "convertToProject",
                        "resultType": "string"
                      },
                      "convertToTask": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "task",
                            "type": "Task"
                          },
                          {
                            "name": "options",
                            "type": "string[]"
                          }
                        ],
                        "label": "convertToTask",
                        "resultType": "string"
                      },
                      "linkExternalObject": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "objID",
                            "type": "string"
                          },
                          {
                            "name": "linkedObjectID",
                            "type": "string"
                          },
                          {
                            "name": "integrationType",
                            "type": "string"
                          },
                          {
                            "name": "URL",
                            "type": "string"
                          },
                          {
                            "name": "params",
                            "type": "string[]"
                          }
                        ],
                        "label": "linkExternalObject"
                      },
                      "markDone": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "status",
                            "type": "string"
                          }
                        ],
                        "label": "markDone"
                      },
                      "markNotDone": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "assignmentID",
                            "type": "string"
                          }
                        ],
                        "label": "markNotDone"
                      },
                      "move": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "projectID",
                            "type": "string"
                          }
                        ],
                        "label": "Move"
                      },
                      "moveToTask": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "projectID",
                            "type": "string"
                          },
                          {
                            "name": "parentID",
                            "type": "string"
                          }
                        ],
                        "label": "moveToTask"
                      },
                      "recallApproval": {
                        "flags": [],
                        "label": "recallApproval"
                      },
                      "rejectApproval": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "userID",
                            "type": "string"
                          },
                          {
                            "name": "username",
                            "type": "string"
                          },
                          {
                            "name": "password",
                            "type": "string"
                          },
                          {
                            "name": "auditNote",
                            "type": "string"
                          },
                          {
                            "name": "auditUserIDs",
                            "type": "string[]"
                          },
                          {
                            "name": "sendNoteAsEmail",
                            "type": "boolean"
                          }
                        ],
                        "label": "rejectApproval"
                      },
                      "replyToAssignment": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "noteText",
                            "type": "string"
                          },
                          {
                            "name": "commitDate",
                            "type": "dateTime"
                          }
                        ],
                        "label": "replyToAssignment"
                      },
                      "unacceptWork": {
                        "flags": [],
                        "label": "unacceptWork"
                      },
                      "unassign": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "userID",
                            "type": "string"
                          }
                        ],
                        "label": "unassign"
                      },
                      "unlinkExternalObject": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "objID",
                            "type": "string"
                          },
                          {
                            "name": "linkedObjectID",
                            "type": "string"
                          },
                          {
                            "name": "integrationType",
                            "type": "string"
                          }
                        ],
                        "label": "unlinkExternalObject"
                      }
                    },
                    "queries": {
                      "defaultShownTimesheetIssues": {
                        "arguments": [
                          {
                            "name": "timesheetID",
                            "type": "string"
                          }
                        ],
                        "label": "defaultShownTimesheetIssues"
                      }
                    },
                    "operations": [
                      "add",
                      "copy",
                      "count",
                      "delete",
                      "edit",
                      "get",
                      "report",
                      "search"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/optask": {
      "post": {
        "operationId": "addOPTASKORcopyOPTASK",
        "summary": "Issue Add OR Issue Copy",
        "description": "Adds a Issue object\nOR\nCopies the Issue having {copySourceID}",
        "tags": [
          "OPTASK",
          "add",
          "copy"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            },
            "description": "Comma separated list of fields, references, and collections supported by this resource, or * for all. The list of fields to be included in the response."
          },
          {
            "in": "query",
            "name": "updates",
            "description": "JSON object whose fields represent the fields of the resource to set",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "actualCompletionDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "actualCost": {
                      "$ref": "#/paths/~1optask/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "actualStartDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "actualWorkRequired": {
                      "$ref": "#/paths/~1optask/post/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "actualWorkRequiredExpression": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "approvalCompletionDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "approvalProcessID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "approvalStartDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "assignedToID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "auditTypes": {
                      "$ref": "#/paths/~1optask/post/parameters/12/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
                    },
                    "autoClosureDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "backlogOrder": {
                      "$ref": "#/paths/~1optask/post/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "backlogParent": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "canStart": {
                      "$ref": "#/paths/~1optask/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "categoryID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "color": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "commitDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "condition": {
                      "$ref": "#/paths/~1optask/post/parameters/20/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.ConditionEnum.json"
                    },
                    "currentApprovalStepID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "customerID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "description": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "durationMinutes": {
                      "$ref": "#/paths/~1optask/post/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "enteredByID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "entryDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "estimate": {
                      "$ref": "#/paths/~1optask/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "extRefID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "hasDocuments": {
                      "$ref": "#/paths/~1optask/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hasMessages": {
                      "$ref": "#/paths/~1optask/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hasNotes": {
                      "$ref": "#/paths/~1optask/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hasResolvables": {
                      "$ref": "#/paths/~1optask/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hasTimedNotifications": {
                      "$ref": "#/paths/~1optask/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "isComplete": {
                      "$ref": "#/paths/~1optask/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "isHelpDesk": {
                      "$ref": "#/paths/~1optask/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "isReady": {
                      "$ref": "#/paths/~1optask/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "iterationID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "lastConditionNoteID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "lastNoteID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "lastUpdateDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "lastUpdatedByID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "name": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "opTaskType": {
                      "$ref": "#/paths/~1optask/post/parameters/43/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskTypeEnum.json"
                    },
                    "ownerID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "plannedCompletionDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "plannedDurationMinutes": {
                      "$ref": "#/paths/~1optask/post/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "plannedStartDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "previousStatus": {
                      "$ref": "#/paths/~1optask/post/parameters/48/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
                    },
                    "priority": {
                      "$ref": "#/paths/~1optask/post/parameters/49/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
                    },
                    "priorityColor": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "projectID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "projectedCompletionDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "projectedDurationMinutes": {
                      "$ref": "#/paths/~1optask/post/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "projectedStartDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "queueTopicID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "referenceNumber": {
                      "$ref": "#/paths/~1optask/post/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "remainingDurationMinutes": {
                      "$ref": "#/paths/~1optask/post/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "resolveOpTaskID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "resolveProjectID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "resolveTaskID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "resolvingObjCode": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "resolvingObjID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "roleID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "securityRootID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "securityRootObjCode": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "severity": {
                      "$ref": "#/paths/~1optask/post/parameters/66/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.SeverityEnum.json"
                    },
                    "sourceObjCode": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "sourceObjID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "sourceTaskID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "status": {
                      "$ref": "#/paths/~1optask/post/parameters/48/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
                    },
                    "statusUpdate": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "storyBoardOrder": {
                      "$ref": "#/paths/~1optask/post/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "submittedByID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "teamID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "url": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "version": {
                      "$ref": "#/paths/~1optask/post/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "workRequired": {
                      "$ref": "#/paths/~1optask/post/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "workRequiredExpression": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    }
                  }
                }
              }
            }
          },
          {
            "in": "query",
            "name": "ID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "ID"
          },
          {
            "in": "query",
            "name": "actualCompletionDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Actual Completion Date"
          },
          {
            "in": "query",
            "name": "actualCost",
            "schema": {
              "type": "number",
              "format": "double"
            },
            "required": false,
            "description": "Actual Cost"
          },
          {
            "in": "query",
            "name": "actualStartDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Actual Start Date"
          },
          {
            "in": "query",
            "name": "actualWorkRequired",
            "schema": {
              "type": "number",
              "format": "int32"
            },
            "required": false,
            "description": "Actual Hours"
          },
          {
            "in": "query",
            "name": "actualWorkRequiredExpression",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "actualWorkRequiredExpression"
          },
          {
            "in": "query",
            "name": "approvalCompletionDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Approval Path Completion Date"
          },
          {
            "in": "query",
            "name": "approvalProcessID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Approval Processes ID"
          },
          {
            "in": "query",
            "name": "approvalStartDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Approval Path Start Date"
          },
          {
            "in": "query",
            "name": "assignedToID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Assigned To ID"
          },
          {
            "in": "query",
            "name": "auditTypes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ST",
                  "AA",
                  "SC",
                  "NO",
                  "GE",
                  "CM",
                  "ER",
                  "SB"
                ]
              }
            },
            "required": false,
            "description": "Audit Types"
          },
          {
            "in": "query",
            "name": "autoClosureDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Auto Closure Date"
          },
          {
            "in": "query",
            "name": "backlogOrder",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Order"
          },
          {
            "in": "query",
            "name": "backlogParent",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Parent"
          },
          {
            "in": "query",
            "name": "canStart",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Can Start"
          },
          {
            "in": "query",
            "name": "categoryID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Category ID"
          },
          {
            "in": "query",
            "name": "color",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Color"
          },
          {
            "in": "query",
            "name": "commitDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Commit Date"
          },
          {
            "in": "query",
            "name": "condition",
            "schema": {
              "type": "number",
              "enum": [
                0,
                1,
                2
              ]
            },
            "required": false,
            "description": "Condition"
          },
          {
            "in": "query",
            "name": "currentApprovalStepID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Current Approval Stage ID"
          },
          {
            "in": "query",
            "name": "customerID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Customer ID"
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Description"
          },
          {
            "in": "query",
            "name": "durationMinutes",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Duration in Minutes"
          },
          {
            "in": "query",
            "name": "enteredByID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Entered By ID"
          },
          {
            "in": "query",
            "name": "entryDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Entry Date"
          },
          {
            "in": "query",
            "name": "estimate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Estimate"
          },
          {
            "in": "query",
            "name": "extRefID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "External Reference ID"
          },
          {
            "in": "query",
            "name": "hasDocuments",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Documents"
          },
          {
            "in": "query",
            "name": "hasMessages",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Messages"
          },
          {
            "in": "query",
            "name": "hasNotes",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Notes"
          },
          {
            "in": "query",
            "name": "hasResolvables",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Resolvables"
          },
          {
            "in": "query",
            "name": "hasTimedNotifications",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Reminder Notifications"
          },
          {
            "in": "query",
            "name": "isComplete",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Is Complete"
          },
          {
            "in": "query",
            "name": "isHelpDesk",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Is Help Desk"
          },
          {
            "in": "query",
            "name": "isReady",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Ready"
          },
          {
            "in": "query",
            "name": "iterationID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Iteration ID"
          },
          {
            "in": "query",
            "name": "lastConditionNoteID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Last Condition Note ID"
          },
          {
            "in": "query",
            "name": "lastNoteID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Last Note ID"
          },
          {
            "in": "query",
            "name": "lastUpdateDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Last Update Date"
          },
          {
            "in": "query",
            "name": "lastUpdatedByID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Last Updated By ID"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Name"
          },
          {
            "in": "query",
            "name": "opTaskType",
            "schema": {
              "type": "string",
              "enum": [
                "ISU",
                "BUG",
                "CHO",
                "REQ"
              ]
            },
            "required": false,
            "description": "Issue Type"
          },
          {
            "in": "query",
            "name": "ownerID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Owner ID"
          },
          {
            "in": "query",
            "name": "plannedCompletionDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Planned Completion Date"
          },
          {
            "in": "query",
            "name": "plannedDurationMinutes",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Planned Duration Minutes"
          },
          {
            "in": "query",
            "name": "plannedStartDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Planned Start Date"
          },
          {
            "in": "query",
            "name": "previousStatus",
            "schema": {
              "type": "string",
              "enum": [
                "NEW",
                "INP",
                "AWF",
                "ONH",
                "ROP",
                "CND",
                "WTR",
                "RLV",
                "VCP",
                "CLS"
              ]
            },
            "required": false,
            "description": "Previous Status"
          },
          {
            "in": "query",
            "name": "priority",
            "schema": {
              "type": "number",
              "enum": [
                0,
                1,
                2,
                3,
                4
              ]
            },
            "required": false,
            "description": "Priority"
          },
          {
            "in": "query",
            "name": "priorityColor",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "priorityColor"
          },
          {
            "in": "query",
            "name": "projectID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Project ID"
          },
          {
            "in": "query",
            "name": "projectedCompletionDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Projected Completion Date"
          },
          {
            "in": "query",
            "name": "projectedDurationMinutes",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Projected Duration Minutes"
          },
          {
            "in": "query",
            "name": "projectedStartDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Projected Start Date"
          },
          {
            "in": "query",
            "name": "queueTopicID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Queue Topic ID"
          },
          {
            "in": "query",
            "name": "referenceNumber",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Reference Number"
          },
          {
            "in": "query",
            "name": "remainingDurationMinutes",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Remaining Duration Minutes"
          },
          {
            "in": "query",
            "name": "resolveOpTaskID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Resolve Issue ID"
          },
          {
            "in": "query",
            "name": "resolveProjectID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Resolve Project ID"
          },
          {
            "in": "query",
            "name": "resolveTaskID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Resolve Task ID"
          },
          {
            "in": "query",
            "name": "resolvingObjCode",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Resolving Object Type"
          },
          {
            "in": "query",
            "name": "resolvingObjID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Resolving Object ID"
          },
          {
            "in": "query",
            "name": "roleID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Role ID"
          },
          {
            "in": "query",
            "name": "securityRootID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "securityRootID"
          },
          {
            "in": "query",
            "name": "securityRootObjCode",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "securityRootObjCode"
          },
          {
            "in": "query",
            "name": "severity",
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5
              ]
            },
            "required": false,
            "description": "Severity"
          },
          {
            "in": "query",
            "name": "sourceObjCode",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Source Object Type"
          },
          {
            "in": "query",
            "name": "sourceObjID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Source Object ID"
          },
          {
            "in": "query",
            "name": "sourceTaskID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Source Task ID"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/48/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
            },
            "required": false,
            "description": "Status"
          },
          {
            "in": "query",
            "name": "statusUpdate",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Status Update"
          },
          {
            "in": "query",
            "name": "storyBoardOrder",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "storyBoardOrder"
          },
          {
            "in": "query",
            "name": "submittedByID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Submitted By ID"
          },
          {
            "in": "query",
            "name": "teamID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Team ID"
          },
          {
            "in": "query",
            "name": "url",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "URL"
          },
          {
            "in": "query",
            "name": "version",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Version"
          },
          {
            "in": "query",
            "name": "workRequired",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Planned Hours"
          },
          {
            "in": "query",
            "name": "workRequiredExpression",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "workRequiredExpression"
          },
          {
            "in": "query",
            "name": "copySourceID",
            "description": "The ID of the Issue to copy",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Include all necessary fields to create a Issue",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/paths/~1optask/post/parameters/1/content/application~1json/schema",
                    "x-miro": "swagger/v10.0/schemas/resources/OPTASK/write.json"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "ID": {
                        "type": "string"
                      },
                      "actualCompletionDate": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "actualCost": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/estimate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/double.json"
                      },
                      "actualStartDate": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "actualWorkRequired": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/version",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "actualWorkRequiredExpression": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "approvalCompletionDate": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "approvalProcessID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "approvalStartDate": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "assignedToID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "auditTypes": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "ST",
                            "AA",
                            "SC",
                            "NO",
                            "GE",
                            "CM",
                            "ER",
                            "SB"
                          ]
                        }
                      },
                      "autoClosureDate": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "backlogOrder": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/version",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "backlogParent": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "canStart": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/isReady",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/boolean.json"
                      },
                      "categoryID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "color": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "commitDate": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "condition": {
                        "type": "number",
                        "enum": [
                          0,
                          1,
                          2
                        ]
                      },
                      "currentApprovalStepID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "customerID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "description": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "durationMinutes": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/version",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "enteredByID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "entryDate": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "estimate": {
                        "type": "number",
                        "format": "double"
                      },
                      "extRefID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "hasDocuments": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/isReady",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/boolean.json"
                      },
                      "hasMessages": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/isReady",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/boolean.json"
                      },
                      "hasNotes": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/isReady",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/boolean.json"
                      },
                      "hasResolvables": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/isReady",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/boolean.json"
                      },
                      "hasTimedNotifications": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/isReady",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/boolean.json"
                      },
                      "isComplete": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/isReady",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/boolean.json"
                      },
                      "isHelpDesk": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/isReady",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/boolean.json"
                      },
                      "isReady": {
                        "type": "boolean"
                      },
                      "iterationID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "lastConditionNoteID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "lastNoteID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "lastUpdateDate": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "lastUpdatedByID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "name": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "opTaskType": {
                        "type": "string",
                        "enum": [
                          "ISU",
                          "BUG",
                          "CHO",
                          "REQ"
                        ]
                      },
                      "ownerID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "plannedCompletionDate": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "plannedDurationMinutes": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/version",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "plannedStartDate": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "previousStatus": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/status",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
                      },
                      "priority": {
                        "type": "number",
                        "enum": [
                          0,
                          1,
                          2,
                          3,
                          4
                        ]
                      },
                      "priorityColor": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "projectID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "projectedCompletionDate": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "projectedDurationMinutes": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/version",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "projectedStartDate": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/entryDate",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/dateTime.json"
                      },
                      "queueTopicID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "referenceNumber": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/version",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "remainingDurationMinutes": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/version",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "resolveOpTaskID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "resolveProjectID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "resolveTaskID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "resolvingObjCode": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "resolvingObjID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "roleID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "securityRootID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "securityRootObjCode": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "severity": {
                        "type": "number",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ]
                      },
                      "sourceObjCode": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "sourceObjID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "sourceTaskID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "NEW",
                          "INP",
                          "AWF",
                          "ONH",
                          "ROP",
                          "CND",
                          "WTR",
                          "RLV",
                          "VCP",
                          "CLS"
                        ]
                      },
                      "statusUpdate": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "storyBoardOrder": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/version",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "submittedByID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "teamID": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "url": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      },
                      "version": {
                        "type": "number",
                        "format": "int32"
                      },
                      "workRequired": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/version",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/int.json"
                      },
                      "workRequiredExpression": {
                        "$ref": "#/paths/~1optask/post/requestBody/content/application~1json/schema/anyOf/1/properties/ID",
                        "x-miro": "swagger/v10.0//schemas/fieldTypes/string.json"
                      }
                    }
                  }
                ]
              },
              "examples": {
                "addOPTASK": {
                  "value": {}
                },
                "copyOPTASK": {
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/paths/~1optask~1report/get/parameters/1/content/application~1json/schema",
                          "x-miro": "swagger/v10.0/schemas/resources/OPTASK/read.json"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "examples": {
                  "addOPTASK": {
                    "value": {}
                  },
                  "copyOPTASK": {
                    "value": {}
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putOPTASKActionacceptWorkORputOPTASKActionapproveApprovalORputOPTASKActionassignORputOPTASKActionassignMultipleORputOPTASKActioncalculateDataExtensionORputOPTASKActionconvertToProjectORputOPTASKActionconvertToTaskORputOPTASKActionlinkExternalObjectORputOPTASKActionmarkDoneORputOPTASKActionmarkNotDoneORputOPTASKActionmoveORputOPTASKActionmoveToTaskORputOPTASKActionrecallApprovalORputOPTASKActionrejectApprovalORputOPTASKActionreplyToAssignmentORputOPTASKActionunacceptWorkORputOPTASKActionunassignORputOPTASKActionunlinkExternalObject",
        "parameters": [
          {
            "in": "query",
            "name": "ID",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/79/schema",
              "x-miro": "swagger/v10.0/schemas/resourceID.yml"
            },
            "required": false,
            "description": "ID of the object"
          },
          {
            "in": "query",
            "name": "action",
            "description": "The action to perform on the Issue",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "userID",
            "description": "userID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "username",
            "description": "username",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "password",
            "description": "password",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "auditNote",
            "description": "auditNote",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "auditUserIDs",
            "description": "auditUserIDs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/paths/~1optask/put/parameters/1/schema",
                "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
              }
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sendNoteAsEmail",
            "description": "sendNoteAsEmail",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "objID",
            "description": "objID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "objCode",
            "description": "objCode",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "userIDs",
            "description": "userIDs",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "roleIDs",
            "description": "roleIDs",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "teamID",
            "description": "teamID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "project",
            "description": "project",
            "schema": {
              "type": "object",
              "properties": {
                "BCCompletionState": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "SUMMARY",
                      "INFO",
                      "DEL",
                      "RISK",
                      "COST",
                      "ALIGN",
                      "DE"
                    ]
                  }
                },
                "ID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "URL": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "actualBenefit": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "actualCompletionDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "actualCost": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "actualDurationMinutes": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "actualExpenseCost": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "actualLaborCost": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "actualRevenue": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "actualRiskCost": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "actualStartDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "actualValue": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "actualWorkRequired": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "alignment": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "alignmentScoreCardID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "approvalCompletionDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "approvalProcessID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "approvalStartDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "auditTypes": {
                  "$ref": "#/paths/~1optask/post/parameters/12/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
                },
                "autoBaselineRecurOn": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "autoBaselineRecurrenceType": {
                  "type": "string",
                  "enum": [
                    "D",
                    "W",
                    "BW",
                    "SM",
                    "M",
                    "C"
                  ]
                },
                "billedRevenue": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "budget": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "budgetStatus": {
                  "type": "number",
                  "enum": [
                    0,
                    1,
                    2
                  ]
                },
                "budgetedCompletionDate": {
                  "$ref": "#/paths/~1optask/put/parameters/16/schema/properties/slackDate",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/date.json"
                },
                "budgetedCost": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "budgetedHours": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "budgetedLaborCost": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "budgetedStartDate": {
                  "$ref": "#/paths/~1optask/put/parameters/16/schema/properties/slackDate",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/date.json"
                },
                "categoryID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "companyID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "completionType": {
                  "type": "string",
                  "enum": [
                    "MAN",
                    "AUT"
                  ]
                },
                "condition": {
                  "type": "string",
                  "enum": [
                    "ON",
                    "AR",
                    "IT"
                  ]
                },
                "conditionType": {
                  "type": "string",
                  "enum": [
                    "PG",
                    "MN"
                  ]
                },
                "convertedOpTaskEntryDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "convertedOpTaskName": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "convertedOpTaskOriginatorID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "cpi": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "csi": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "currency": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "currentApprovalStepID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "customerID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "deliverableScoreCardID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "deliverableSuccessScore": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "description": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "displayOrder": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "durationMinutes": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "eac": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "eacCalculationMethod": {
                  "type": "string",
                  "enum": [
                    "P",
                    "T"
                  ]
                },
                "enableAutoBaselines": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "enteredByID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "entryDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "estCompletionDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "estStartDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "extRefID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "filterHourTypes": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "financeLastUpdateDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "fixedCost": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "fixedEndDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "fixedRevenue": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "fixedStartDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "groupID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "hasBudgetConflict": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasCalcError": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasDocuments": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasExpenses": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasMessages": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasNotes": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasRateOverride": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasResolvables": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasTimedNotifications": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasTimelineException": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "isOriginalPlannedHoursSet": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "lastCalcDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "lastConditionNoteID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "lastNoteID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "lastUpdateDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "lastUpdatedByID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "levelingMode": {
                  "type": "string",
                  "enum": [
                    "AUT",
                    "MAN"
                  ]
                },
                "milestonePathID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "name": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "nextAutoBaselineDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "numberOpenOpTasks": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "optimizationScore": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "originalWorkRequired": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "ownerID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "ownerPrivileges": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "APT"
                    ]
                  }
                },
                "pendingCalculation": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "pendingUpdateMethods": {
                  "$ref": "#/paths/~1optask/put/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                },
                "percentComplete": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "performanceIndexMethod": {
                  "type": "string",
                  "enum": [
                    "H",
                    "C"
                  ]
                },
                "personal": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "plannedBenefit": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "plannedCompletionDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "plannedCost": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "plannedExpenseCost": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "plannedLaborCost": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "plannedRevenue": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "plannedRiskCost": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "plannedStartDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "plannedValue": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "popAccountID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "portfolioID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "portfolioPriority": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "previousStatus": {
                  "$ref": "#/paths/~1optask/put/parameters/13/schema/properties/status",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.ProjectStatusEnum.json"
                },
                "priority": {
                  "$ref": "#/paths/~1optask/post/parameters/49/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
                },
                "programID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "progressStatus": {
                  "type": "string",
                  "enum": [
                    "LT",
                    "ON",
                    "BH",
                    "RK"
                  ]
                },
                "projectedCompletionDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "projectedStartDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "queueDefID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "referenceNumber": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "rejectionIssueID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "remainingCost": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "remainingRevenue": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "remainingRiskCost": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "resourcePlannerBudgetedLaborCost": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "resourcePoolID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "risk": {
                  "type": "number",
                  "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                },
                "riskPerformanceIndex": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "scheduleID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "scheduleMode": {
                  "type": "string",
                  "enum": [
                    "S",
                    "C"
                  ]
                },
                "selectedOnPortfolioOptimizer": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "spi": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "sponsorID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "CUR",
                    "ONH",
                    "PLN",
                    "CPL",
                    "DED",
                    "REQ",
                    "APR",
                    "REJ",
                    "IDA"
                  ]
                },
                "statusUpdate": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "submittedByID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "summaryCompletionType": {
                  "$ref": "#/paths/~1optask/put/parameters/13/schema/properties/completionType",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.CompletionTypeEnum.json"
                },
                "syncBurndownDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "teamID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "templateID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "timelineExceptionInfo": {
                  "type": "object"
                },
                "totalOpTaskCount": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "totalTaskCount": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "updateType": {
                  "type": "string",
                  "enum": [
                    "AUTO",
                    "EVNT",
                    "ATYO",
                    "MANU"
                  ]
                },
                "version": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "work": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "workRequired": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                }
              }
            },
            "required": false
          },
          {
            "in": "query",
            "name": "exchangeRate",
            "description": "exchangeRate",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "currency": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "customerID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "extRefID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "projectID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "rate": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "securityRootID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "securityRootObjCode": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "templateID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                }
              }
            },
            "required": false
          },
          {
            "in": "query",
            "name": "options",
            "description": "options",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "task",
            "description": "task",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "URL": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "actualCompletionDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "actualCost": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "actualDuration": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "actualDurationMinutes": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "actualExpenseCost": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "actualLaborCost": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "actualRevenue": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "actualStartDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "actualWork": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "actualWorkRequired": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "approvalCompletionDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "approvalEstStartDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "approvalPlannedStartDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "approvalProcessID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "approvalProjectedStartDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "approvalStartDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "assignedToID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "auditNote": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "auditTypes": {
                  "$ref": "#/paths/~1optask/post/parameters/12/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
                },
                "auditUserIDs": {
                  "$ref": "#/paths/~1optask/put/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                },
                "backlogOrder": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "backlogParent": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "billingAmount": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "billingRecordID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "canStart": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "categoryID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "color": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "commitDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "completionPendingDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "condition": {
                  "$ref": "#/paths/~1optask/post/parameters/20/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.ConditionEnum.json"
                },
                "constraintDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "convertedOpTaskEntryDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "convertedOpTaskName": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "convertedOpTaskOriginatorID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "costAmount": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "costType": {
                  "type": "string",
                  "enum": [
                    "NOC",
                    "FHR",
                    "UHR",
                    "RHC"
                  ]
                },
                "cpi": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "csi": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "currentApprovalStepID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "customerID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "daysLate": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "description": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "duration": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "durationExpression": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "durationMinutes": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "durationType": {
                  "type": "string",
                  "enum": [
                    "W",
                    "D",
                    "A",
                    "S"
                  ]
                },
                "durationUnit": {
                  "$ref": "#/paths/~1optask/put/parameters/16/schema/properties/workUnit",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.DurationUnitEnum.json"
                },
                "eac": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "enteredByID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "entryDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "estCompletionDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "estStartDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "estimate": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "extRefID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "groupID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "handoffDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "hasDocuments": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasExpenses": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasMessages": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasNotes": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasResolvables": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hasTimedNotifications": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "hoursPerPoint": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "indent": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "isAgile": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "isCritical": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "isDurationLocked": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "isLevelingExcluded": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "isReady": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "isWorkRequiredLocked": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "iterationID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "kanbanBoardID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "kanbanFlag": {
                  "type": "string",
                  "enum": [
                    "ONTRACK",
                    "ISBLOCKED",
                    "READYTOPULL"
                  ]
                },
                "lastConditionNoteID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "lastNoteID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "lastUpdateDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "lastUpdatedByID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "levelingStartDelay": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "levelingStartDelayExpression": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "levelingStartDelayMinutes": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "milestoneID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "name": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "numberOfChildren": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "numberOpenOpTasks": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "originalDuration": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "originalWorkRequired": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "parentID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "parentLag": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "parentLagType": {
                  "type": "string",
                  "enum": [
                    "d",
                    "c",
                    "p",
                    "w",
                    "k"
                  ]
                },
                "pendingCalculation": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "pendingUpdateMethods": {
                  "$ref": "#/paths/~1optask/put/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                },
                "percentComplete": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "personal": {
                  "$ref": "#/paths/~1optask/put/parameters/7/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                },
                "plannedCompletionDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "plannedCost": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "plannedDuration": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "plannedDurationMinutes": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "plannedExpenseCost": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "plannedLaborCost": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "plannedRevenue": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "plannedStartDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "predecessorExpression": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "previousStatus": {
                  "$ref": "#/paths/~1optask/put/parameters/16/schema/properties/status",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.TaskStatusEnum.json"
                },
                "priority": {
                  "$ref": "#/paths/~1optask/post/parameters/49/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
                },
                "priorityColor": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "progressStatus": {
                  "$ref": "#/paths/~1optask/put/parameters/13/schema/properties/progressStatus",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.ProgressStatusEnum.json"
                },
                "projectID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "projectedCompletionDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "projectedDurationMinutes": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "projectedStartDate": {
                  "$ref": "#/paths/~1optask/post/parameters/3/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                },
                "recurrenceNumber": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "recurrenceRuleID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "referenceNumber": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "rejectionIssueID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "remainingDurationMinutes": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "reservedTimeID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "resourceScope": {
                  "type": "string",
                  "enum": [
                    "NONE",
                    "GLOB"
                  ]
                },
                "revenueType": {
                  "type": "string",
                  "enum": [
                    "NOB",
                    "UHR",
                    "RHR",
                    "FHR",
                    "UHC",
                    "RHC",
                    "UHF",
                    "RHF",
                    "FRV"
                  ]
                },
                "roleID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "securityRootID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "securityRootObjCode": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "slackDate": {
                  "type": "string",
                  "format": "date"
                },
                "spi": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NEW",
                    "INP",
                    "CPL",
                    "CPA",
                    "CPI"
                  ]
                },
                "statusEquatesWith": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "statusUpdate": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "submittedByID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "taskConstraint": {
                  "type": "string",
                  "enum": [
                    "FIXT",
                    "MSO",
                    "MFO",
                    "ASAP",
                    "ALAP",
                    "EAT",
                    "LAT",
                    "SNLT",
                    "SNET",
                    "FNLT",
                    "FNET"
                  ]
                },
                "taskNumber": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "teamID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "templateTaskID": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "trackingMode": {
                  "type": "string",
                  "enum": [
                    "USER",
                    "ONTM",
                    "IGNR",
                    "AUTO",
                    "PRED"
                  ]
                },
                "version": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "wbs": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "work": {
                  "$ref": "#/paths/~1optask/post/parameters/4/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                },
                "workRequired": {
                  "$ref": "#/paths/~1optask/post/parameters/6/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                },
                "workRequiredExpression": {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                },
                "workUnit": {
                  "type": "string",
                  "enum": [
                    "M",
                    "H",
                    "D",
                    "W",
                    "T",
                    "EM",
                    "EH",
                    "ED",
                    "EW"
                  ]
                }
              }
            },
            "required": false
          },
          {
            "in": "query",
            "name": "linkedObjectID",
            "description": "linkedObjectID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "integrationType",
            "description": "integrationType",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "URL",
            "description": "URL",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "params",
            "description": "params",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "status",
            "description": "status",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "assignmentID",
            "description": "assignmentID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "projectID",
            "description": "projectID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "parentID",
            "description": "parentID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "noteText",
            "description": "noteText",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "commitDate",
            "description": "commitDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false
          }
        ],
        "summary": "Issue acceptWork OR Issue approveApproval OR Issue assign OR Issue assignMultiple OR Issue calculateDataExtension OR Issue convertToProject OR Issue convertToTask OR Issue linkExternalObject OR Issue markDone OR Issue markNotDone OR Issue move OR Issue moveToTask OR Issue recallApproval OR Issue rejectApproval OR Issue replyToAssignment OR Issue unacceptWork OR Issue unassign OR Issue unlinkExternalObject",
        "description": "Performs the acceptWork action on the Issue object\nOR\nPerforms the approveApproval action on the Issue object\nOR\nPerforms the assign action on the Issue object\nOR\nPerforms the assignMultiple action on the Issue object\nOR\nPerforms the calculateDataExtension action on the Issue object\nOR\nPerforms the convertToProject action on the Issue object\nOR\nPerforms the convertToTask action on the Issue object\nOR\nPerforms the linkExternalObject action on the Issue object\nOR\nPerforms the markDone action on the Issue object\nOR\nPerforms the markNotDone action on the Issue object\nOR\nPerforms the move action on the Issue object\nOR\nPerforms the moveToTask action on the Issue object\nOR\nPerforms the recallApproval action on the Issue object\nOR\nPerforms the rejectApproval action on the Issue object\nOR\nPerforms the replyToAssignment action on the Issue object\nOR\nPerforms the unacceptWork action on the Issue object\nOR\nPerforms the unassign action on the Issue object\nOR\nPerforms the unlinkExternalObject action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {}
                  },
                  {
                    "type": "object",
                    "properties": {
                      "userID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "username": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "password": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "auditNote": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "auditUserIDs": {
                        "$ref": "#/paths/~1optask/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "sendNoteAsEmail": {
                        "$ref": "#/paths/~1optask/put/parameters/7/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "objCode": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "userIDs": {
                        "$ref": "#/paths/~1optask/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "roleIDs": {
                        "$ref": "#/paths/~1optask/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "teamID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "project": {
                        "$ref": "#/paths/~1optask/put/parameters/13/schema",
                        "x-miro": "swagger/v10.0/schemas/resources/PROJ/write.json"
                      },
                      "exchangeRate": {
                        "$ref": "#/paths/~1optask/put/parameters/14/schema",
                        "x-miro": "swagger/v10.0/schemas/resources/EXRATE/write.json"
                      },
                      "options": {
                        "$ref": "#/paths/~1optask/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "task": {
                        "$ref": "#/paths/~1optask/put/parameters/16/schema",
                        "x-miro": "swagger/v10.0/schemas/resources/TASK/write.json"
                      },
                      "options": {
                        "$ref": "#/paths/~1optask/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "linkedObjectID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "integrationType": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "URL": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "params": {
                        "$ref": "#/paths/~1optask/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "status": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "assignmentID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "projectID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "projectID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "parentID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "noteText": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "commitDate": {
                        "$ref": "#/paths/~1optask/post/parameters/3/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "userID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "linkedObjectID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "integrationType": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  }
                ]
              },
              "examples": {
                "putOPTASKActionacceptWork": {
                  "value": {}
                },
                "putOPTASKActionapproveApproval": {
                  "value": {}
                },
                "putOPTASKActionassign": {
                  "value": {}
                },
                "putOPTASKActionassignMultiple": {
                  "value": {}
                },
                "putOPTASKActioncalculateDataExtension": {
                  "value": {}
                },
                "putOPTASKActionconvertToProject": {
                  "value": {}
                },
                "putOPTASKActionconvertToTask": {
                  "value": {}
                },
                "putOPTASKActionlinkExternalObject": {
                  "value": {}
                },
                "putOPTASKActionmarkDone": {
                  "value": {}
                },
                "putOPTASKActionmarkNotDone": {
                  "value": {}
                },
                "putOPTASKActionmove": {
                  "value": {}
                },
                "putOPTASKActionmoveToTask": {
                  "value": {}
                },
                "putOPTASKActionrecallApproval": {
                  "value": {}
                },
                "putOPTASKActionrejectApproval": {
                  "value": {}
                },
                "putOPTASKActionreplyToAssignment": {
                  "value": {}
                },
                "putOPTASKActionunacceptWork": {
                  "value": {}
                },
                "putOPTASKActionunassign": {
                  "value": {}
                },
                "putOPTASKActionunlinkExternalObject": {
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "class": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "putOPTASKActionacceptWork": {
                    "value": {}
                  },
                  "putOPTASKActionapproveApproval": {
                    "value": {}
                  },
                  "putOPTASKActionassign": {
                    "value": {}
                  },
                  "putOPTASKActionassignMultiple": {
                    "value": {}
                  },
                  "putOPTASKActioncalculateDataExtension": {
                    "value": {}
                  },
                  "putOPTASKActionconvertToProject": {
                    "value": {}
                  },
                  "putOPTASKActionconvertToTask": {
                    "value": {}
                  },
                  "putOPTASKActionlinkExternalObject": {
                    "value": {}
                  },
                  "putOPTASKActionmarkDone": {
                    "value": {}
                  },
                  "putOPTASKActionmarkNotDone": {
                    "value": {}
                  },
                  "putOPTASKActionmove": {
                    "value": {}
                  },
                  "putOPTASKActionmoveToTask": {
                    "value": {}
                  },
                  "putOPTASKActionrecallApproval": {
                    "value": {}
                  },
                  "putOPTASKActionrejectApproval": {
                    "value": {}
                  },
                  "putOPTASKActionreplyToAssignment": {
                    "value": {}
                  },
                  "putOPTASKActionunacceptWork": {
                    "value": {}
                  },
                  "putOPTASKActionunassign": {
                    "value": {}
                  },
                  "putOPTASKActionunlinkExternalObject": {
                    "value": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/optask/count": {
      "get": {
        "operationId": "countOPTASK",
        "summary": "Issue Count",
        "description": "Counts the Issue objects matching the given parameters",
        "tags": [
          "OPTASK",
          "count"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "updates",
            "description": "JSON object whose fields represent the fields of the resource to set",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1optask/post/parameters/1/content/application~1json/schema",
                  "x-miro": "swagger/v10.0/schemas/resources/OPTASK/write.json"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "ID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "ID"
          },
          {
            "in": "query",
            "name": "actualCompletionDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Actual Completion Date"
          },
          {
            "in": "query",
            "name": "actualCost",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "Actual Cost"
          },
          {
            "in": "query",
            "name": "actualStartDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Actual Start Date"
          },
          {
            "in": "query",
            "name": "actualWorkRequired",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Actual Hours"
          },
          {
            "in": "query",
            "name": "approvalCompletionDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Approval Path Completion Date"
          },
          {
            "in": "query",
            "name": "approvalProcessID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Approval Processes ID"
          },
          {
            "in": "query",
            "name": "approvalStartDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Approval Path Start Date"
          },
          {
            "in": "query",
            "name": "assignedToID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Assigned To ID"
          },
          {
            "in": "query",
            "name": "auditTypes",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/12/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
            },
            "required": false,
            "description": "Audit Types"
          },
          {
            "in": "query",
            "name": "autoClosureDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Auto Closure Date"
          },
          {
            "in": "query",
            "name": "categoryID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Category ID"
          },
          {
            "in": "query",
            "name": "color",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Color"
          },
          {
            "in": "query",
            "name": "commitDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Commit Date"
          },
          {
            "in": "query",
            "name": "condition",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/20/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.ConditionEnum.json"
            },
            "required": false,
            "description": "Condition"
          },
          {
            "in": "query",
            "name": "currentApprovalStepID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Current Approval Stage ID"
          },
          {
            "in": "query",
            "name": "customerID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Customer ID"
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Description"
          },
          {
            "in": "query",
            "name": "enteredByID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Entered By ID"
          },
          {
            "in": "query",
            "name": "entryDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Entry Date"
          },
          {
            "in": "query",
            "name": "extRefID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "External Reference ID"
          },
          {
            "in": "query",
            "name": "hasDocuments",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Documents"
          },
          {
            "in": "query",
            "name": "hasMessages",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Messages"
          },
          {
            "in": "query",
            "name": "hasNotes",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Notes"
          },
          {
            "in": "query",
            "name": "hasResolvables",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Resolvables"
          },
          {
            "in": "query",
            "name": "hasTimedNotifications",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Reminder Notifications"
          },
          {
            "in": "query",
            "name": "isComplete",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Is Complete"
          },
          {
            "in": "query",
            "name": "isHelpDesk",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Is Help Desk"
          },
          {
            "in": "query",
            "name": "isReady",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Ready"
          },
          {
            "in": "query",
            "name": "iterationID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Iteration ID"
          },
          {
            "in": "query",
            "name": "lastConditionNoteID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Last Condition Note ID"
          },
          {
            "in": "query",
            "name": "lastNoteID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Last Note ID"
          },
          {
            "in": "query",
            "name": "lastUpdateDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Last Update Date"
          },
          {
            "in": "query",
            "name": "lastUpdatedByID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Last Updated By ID"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Name"
          },
          {
            "in": "query",
            "name": "opTaskType",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/43/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskTypeEnum.json"
            },
            "required": false,
            "description": "Issue Type"
          },
          {
            "in": "query",
            "name": "ownerID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Owner ID"
          },
          {
            "in": "query",
            "name": "plannedCompletionDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Planned Completion Date"
          },
          {
            "in": "query",
            "name": "plannedDurationMinutes",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Planned Duration Minutes"
          },
          {
            "in": "query",
            "name": "plannedStartDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Planned Start Date"
          },
          {
            "in": "query",
            "name": "previousStatus",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/48/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
            },
            "required": false,
            "description": "Previous Status"
          },
          {
            "in": "query",
            "name": "priority",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/49/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
            },
            "required": false,
            "description": "Priority"
          },
          {
            "in": "query",
            "name": "projectID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Project ID"
          },
          {
            "in": "query",
            "name": "projectedDurationMinutes",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Projected Duration Minutes"
          },
          {
            "in": "query",
            "name": "queueTopicID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Queue Topic ID"
          },
          {
            "in": "query",
            "name": "referenceNumber",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Reference Number"
          },
          {
            "in": "query",
            "name": "remainingDurationMinutes",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Remaining Duration Minutes"
          },
          {
            "in": "query",
            "name": "resolveOpTaskID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Resolve Issue ID"
          },
          {
            "in": "query",
            "name": "resolveProjectID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Resolve Project ID"
          },
          {
            "in": "query",
            "name": "resolveTaskID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Resolve Task ID"
          },
          {
            "in": "query",
            "name": "resolvingObjCode",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Resolving Object Type"
          },
          {
            "in": "query",
            "name": "resolvingObjID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Resolving Object ID"
          },
          {
            "in": "query",
            "name": "roleID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Role ID"
          },
          {
            "in": "query",
            "name": "securityRootID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "securityRootID"
          },
          {
            "in": "query",
            "name": "securityRootObjCode",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "securityRootObjCode"
          },
          {
            "in": "query",
            "name": "severity",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/66/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.SeverityEnum.json"
            },
            "required": false,
            "description": "Severity"
          },
          {
            "in": "query",
            "name": "sourceObjCode",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Source Object Type"
          },
          {
            "in": "query",
            "name": "sourceObjID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Source Object ID"
          },
          {
            "in": "query",
            "name": "sourceTaskID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Source Task ID"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/48/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
            },
            "required": false,
            "description": "Status"
          },
          {
            "in": "query",
            "name": "statusUpdate",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Status Update"
          },
          {
            "in": "query",
            "name": "storyBoardOrder",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "storyBoardOrder"
          },
          {
            "in": "query",
            "name": "submittedByID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Submitted By ID"
          },
          {
            "in": "query",
            "name": "teamID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Team ID"
          },
          {
            "in": "query",
            "name": "url",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "URL"
          },
          {
            "in": "query",
            "name": "version",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Version"
          },
          {
            "in": "query",
            "name": "workRequired",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Planned Hours"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "$ref": "#/paths/~1optask/post/parameters/6/schema",
                          "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                        }
                      }
                    }
                  }
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/{ID}": {
      "delete": {
        "operationId": "deleteOPTASKByID",
        "summary": "Issue Delete",
        "description": "Deletes the Issue object having {ID}",
        "tags": [
          "OPTASK",
          "delete"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1optask~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "success": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {
                  "data": {
                    "success": true
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "editOPTASKByIDORputOPTASKActionacceptWorkWithIdORputOPTASKActionapproveApprovalWithIdORputOPTASKActionassignWithIdORputOPTASKActionassignMultipleWithIdORputOPTASKActioncalculateDataExtensionWithIdORputOPTASKActionconvertToProjectWithIdORputOPTASKActionconvertToTaskWithIdORputOPTASKActionlinkExternalObjectWithIdORputOPTASKActionmarkDoneWithIdORputOPTASKActionmarkNotDoneWithIdORputOPTASKActionmoveWithIdORputOPTASKActionmoveToTaskWithIdORputOPTASKActionrecallApprovalWithIdORputOPTASKActionrejectApprovalWithIdORputOPTASKActionreplyToAssignmentWithIdORputOPTASKActionunacceptWorkWithIdORputOPTASKActionunassignWithIdORputOPTASKActionunlinkExternalObjectWithId",
        "summary": "Optask by ID (or issue by ID in the GUI) is commonly used to modify a specific Issue with the unique ID specified by performing the acceptWork action, the approveApproval action, the assign action, the assignMultiple action, the calculateDataExtension action, the convertToProject action, the convertToTask action, the linkExternalObject action, the markDone action, the markNotDone action, the move action, the moveToTask action, the recallApproval action, the rejectApproval action, the replyToAssignment action, the unacceptWork action, the unassign action, or the unlinkExternalObject action on the Issue object",
        "description": "Optask by ID allows you to view or modify an existing issue object by referencing its unique ID.",
        "tags": [
          "OPTASK",
          "edit",
          "action"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/79/schema",
              "x-miro": "swagger/v10.0/schemas/resourceID.yml"
            },
            "required": true,
            "description": "ID of the object"
          },
          {
            "$ref": "#/paths/~1optask/post/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/fields.yml"
          },
          {
            "in": "query",
            "name": "updates",
            "description": "JSON object whose fields represent the fields of the resource to set",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1optask/post/parameters/1/content/application~1json/schema",
                  "x-miro": "swagger/v10.0/schemas/resources/OPTASK/write.json"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "ID",
            "description": "ID refers to a Workfront Object ID. You can use a unique Optask (issue) ID to access a particular issue, or you can locate an issue that is associated with a different object, like a Task, by entering that object's unique ID into an issue query.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "actualCompletionDate",
            "description": "The Actual Completion Date represents the real date and time that the Optask (issue) was marked as completed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "actualCost",
            "description": "Represents the Actual Costs that were accumulated prior to the completion of a duration-measured object, like an Optask (issue) or a Project.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "actualStartDate",
            "description": "Actual Start Date is the actual date that work begins on a Project, Task, or Optask (issue) object. That is, the Actual Start Date of a project, task, or issue is not populated when these items are created. The Actual Start Date is populated when work actually starts on a project, task, or issue.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "actualWorkRequired",
            "description": "Work Required is the duration of Task hours multiplied by the number of resources assigned to that task. Actual work required is a summation of these values at the completion of a project. The formula looks something like:\nActual Work Required = SUM(Duration of the task in hours) x (Percent allocated towards tasks for each resource).",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "actualWorkRequiredExpression",
            "description": "actualWorkRequiredExpression",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "approvalCompletionDate",
            "description": "The date and time that an approval path for a specific Optask (issue) was marked Complete.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "approvalProcessID",
            "description": "The unique ID of an Approval Process that was created in Workfront.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "approvalStartDate",
            "description": "The date and time that an approval path starts.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "assignedToID",
            "description": "Assigned To ID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "auditTypes",
            "description": "Audits are system messages that record actions occurring in a Workfront environment. The following audit types are recorded: \n Scope Change, Attachment Action, General Edit, Status Change, Note, Combined Entry, Error Entry, Status Change, Subscription Change",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/12/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "autoClosureDate",
            "description": "Auto Closure Date",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "backlogOrder",
            "description": "Order",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "backlogParent",
            "description": "Parent",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "canStart",
            "description": "Can Start",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "categoryID",
            "description": "A category is a custom form. You can build reports for this object and you can show it in other object reports, as well. A category ID is a unique ID that is assigned to a category at its creation. Not all objects can have a custom form, or category. The following objects can have a custom form: Project, Task, Issue, Portfolio, Document, Expense, Program, User, Company.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "color",
            "description": "Color",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "commitDate",
            "description": "Commit Date\nOR\ncommitDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "condition",
            "description": "This is a visual representation of the progress of a task, issue or project. For projects, the condition can be manually set or it can be automatically set by Workfront, based on the progress status of the project. The possible values for the project condition are: \n On Target, At Risk, In Trouble",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/20/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.ConditionEnum.json"
            }
          },
          {
            "in": "query",
            "name": "currentApprovalStepID",
            "description": "Current Approval Stage ID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "customerID",
            "description": "This is an internal object.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "description",
            "description": "A string field that is used to describe the object that is being created.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "durationMinutes",
            "description": "Duration in Minutes",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "enteredByID",
            "description": "The ID of the user that originally created the object.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "entryDate",
            "description": "The date a Project/Task/Issue is submitted by a user in Workfront.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "estimate",
            "description": "Estimate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "extRefID",
            "description": "A User editable field that is used to link Workfront with other software products that aren't necessarily a part of the Workfront product family.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "hasDocuments",
            "description": "This is a boolean parameter that will return a true value if an object has Documents and a false if it does not.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "hasMessages",
            "description": "This is a boolean parameter that will return a true value if an object has Messages associated with it and a false if it does not.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "hasNotes",
            "description": "This is a boolean parameter that will return a true value if an object has Notes associated with it and a false if it does not.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "hasResolvables",
            "description": "This is a boolean parameter that will return a true value if an object has Resovables associated with it and a false if it does not.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "hasTimedNotifications",
            "description": "This is a boolean parameter that will return a true value if an object has Timed Notifications associated with it and a false if it does not.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "isComplete",
            "description": "Is Complete",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "isHelpDesk",
            "description": "Is Help Desk",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "isReady",
            "description": "Ready",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "iterationID",
            "description": "Iteration ID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "lastConditionNoteID",
            "description": "The unique Workfront ID assigned to the note object that was most recently entered on a given object, by the owner of the object.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "lastNoteID",
            "description": "The unique Workfront ID assigned to the note object that was most recently entered on a given object by any user.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "lastUpdateDate",
            "description": "The Last Update Date parameter will return the Date that the Last Update was made to an object.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "lastUpdatedByID",
            "description": "Last Updated By ID is a parameter that will return the User ID of the last User that updated the object.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "opTaskType",
            "description": "Issue Type",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/43/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "ownerID",
            "description": "Owner ID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "plannedCompletionDate",
            "description": "Planned Completion Date",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "plannedDurationMinutes",
            "description": "Planned Duration Minutes",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "plannedStartDate",
            "description": "Planned Start Date",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "previousStatus",
            "description": "Previous Status",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/48/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "priority",
            "description": "Priority",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/49/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
            }
          },
          {
            "in": "query",
            "name": "priorityColor",
            "description": "priorityColor",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "projectID",
            "description": "Project ID\nOR\nprojectID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "projectedCompletionDate",
            "description": "Projected Completion Date",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "projectedDurationMinutes",
            "description": "Projected Duration Minutes",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "projectedStartDate",
            "description": "Projected Start Date",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "queueTopicID",
            "description": "Queue Topic ID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "referenceNumber",
            "description": "Reference Number",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "remainingDurationMinutes",
            "description": "Remaining Duration Minutes",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "resolveOpTaskID",
            "description": "Resolve Issue ID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "resolveProjectID",
            "description": "Resolve Project ID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "resolveTaskID",
            "description": "Resolve Task ID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "resolvingObjCode",
            "description": "Resolving Object Type",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "resolvingObjID",
            "description": "Resolving Object ID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "roleID",
            "description": "Role ID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "securityRootID",
            "description": "securityRootID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "securityRootObjCode",
            "description": "securityRootObjCode",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "severity",
            "description": "Severity",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/66/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.SeverityEnum.json"
            }
          },
          {
            "in": "query",
            "name": "sourceObjCode",
            "description": "Source Object Type",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "sourceObjID",
            "description": "Source Object ID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "sourceTaskID",
            "description": "Source Task ID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "Status\nOR\nstatus",
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/paths/~1optask/post/parameters/48/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
                },
                {
                  "$ref": "#/paths/~1optask/put/parameters/1/schema",
                  "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                }
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "statusUpdate",
            "description": "Status Update",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "storyBoardOrder",
            "description": "storyBoardOrder",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "submittedByID",
            "description": "Submitted By ID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "teamID",
            "description": "Team ID\nOR\nteamID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "url",
            "description": "URL",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "version",
            "description": "Version",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "workRequired",
            "description": "Planned Hours",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "workRequiredExpression",
            "description": "workRequiredExpression",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "action",
            "description": "The action to perform on the Issue",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "userID",
            "description": "userID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "username",
            "description": "username",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "password",
            "description": "password",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "auditNote",
            "description": "auditNote",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "auditUserIDs",
            "description": "auditUserIDs",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sendNoteAsEmail",
            "description": "sendNoteAsEmail",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "objID",
            "description": "objID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "objCode",
            "description": "objCode",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "userIDs",
            "description": "userIDs",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "roleIDs",
            "description": "roleIDs",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "project",
            "description": "project",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/13/schema",
              "x-miro": "swagger/v10.0/schemas/resources/PROJ/write.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "exchangeRate",
            "description": "exchangeRate",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/14/schema",
              "x-miro": "swagger/v10.0/schemas/resources/EXRATE/write.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "options",
            "description": "options",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "task",
            "description": "task",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/16/schema",
              "x-miro": "swagger/v10.0/schemas/resources/TASK/write.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "linkedObjectID",
            "description": "linkedObjectID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "integrationType",
            "description": "integrationType",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "URL",
            "description": "URL",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "params",
            "description": "params",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "assignmentID",
            "description": "assignmentID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "parentID",
            "description": "parentID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "noteText",
            "description": "noteText",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          }
        ],
        "requestBody": {
          "description": "",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/paths/~1optask/post/parameters/1/content/application~1json/schema",
                    "x-miro": "swagger/v10.0/schemas/resources/OPTASK/write.json"
                  },
                  {
                    "type": "object",
                    "properties": {}
                  },
                  {
                    "type": "object",
                    "properties": {
                      "userID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "username": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "password": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "auditNote": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "auditUserIDs": {
                        "$ref": "#/paths/~1optask/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "sendNoteAsEmail": {
                        "$ref": "#/paths/~1optask/put/parameters/7/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "objCode": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "userIDs": {
                        "$ref": "#/paths/~1optask/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "roleIDs": {
                        "$ref": "#/paths/~1optask/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "teamID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "project": {
                        "$ref": "#/paths/~1optask/put/parameters/13/schema",
                        "x-miro": "swagger/v10.0/schemas/resources/PROJ/write.json"
                      },
                      "exchangeRate": {
                        "$ref": "#/paths/~1optask/put/parameters/14/schema",
                        "x-miro": "swagger/v10.0/schemas/resources/EXRATE/write.json"
                      },
                      "options": {
                        "$ref": "#/paths/~1optask/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "task": {
                        "$ref": "#/paths/~1optask/put/parameters/16/schema",
                        "x-miro": "swagger/v10.0/schemas/resources/TASK/write.json"
                      },
                      "options": {
                        "$ref": "#/paths/~1optask/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "linkedObjectID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "integrationType": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "URL": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "params": {
                        "$ref": "#/paths/~1optask/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "status": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "assignmentID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "projectID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "projectID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "parentID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "noteText": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "commitDate": {
                        "$ref": "#/paths/~1optask/post/parameters/3/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "userID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "linkedObjectID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "integrationType": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  }
                ]
              },
              "examples": {
                "editOPTASKByID": {
                  "value": {}
                },
                "putOPTASKActionacceptWorkWithId": {
                  "value": {}
                },
                "putOPTASKActionapproveApprovalWithId": {
                  "value": {}
                },
                "putOPTASKActionassignWithId": {
                  "value": {}
                },
                "putOPTASKActionassignMultipleWithId": {
                  "value": {}
                },
                "putOPTASKActioncalculateDataExtensionWithId": {
                  "value": {}
                },
                "putOPTASKActionconvertToProjectWithId": {
                  "value": {}
                },
                "putOPTASKActionconvertToTaskWithId": {
                  "value": {}
                },
                "putOPTASKActionlinkExternalObjectWithId": {
                  "value": {}
                },
                "putOPTASKActionmarkDoneWithId": {
                  "value": {}
                },
                "putOPTASKActionmarkNotDoneWithId": {
                  "value": {}
                },
                "putOPTASKActionmoveWithId": {
                  "value": {}
                },
                "putOPTASKActionmoveToTaskWithId": {
                  "value": {}
                },
                "putOPTASKActionrecallApprovalWithId": {
                  "value": {}
                },
                "putOPTASKActionrejectApprovalWithId": {
                  "value": {}
                },
                "putOPTASKActionreplyToAssignmentWithId": {
                  "value": {}
                },
                "putOPTASKActionunacceptWorkWithId": {
                  "value": {}
                },
                "putOPTASKActionunassignWithId": {
                  "value": {}
                },
                "putOPTASKActionunlinkExternalObjectWithId": {
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/paths/~1optask~1report/get/parameters/1/content/application~1json/schema",
                          "x-miro": "swagger/v10.0/schemas/resources/OPTASK/read.json"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "editOPTASKByID": {
                    "value": {}
                  },
                  "putOPTASKActionacceptWorkWithId": {
                    "value": {}
                  },
                  "putOPTASKActionapproveApprovalWithId": {
                    "value": {}
                  },
                  "putOPTASKActionassignWithId": {
                    "value": {}
                  },
                  "putOPTASKActionassignMultipleWithId": {
                    "value": {}
                  },
                  "putOPTASKActioncalculateDataExtensionWithId": {
                    "value": {}
                  },
                  "putOPTASKActionconvertToProjectWithId": {
                    "value": {}
                  },
                  "putOPTASKActionconvertToTaskWithId": {
                    "value": {}
                  },
                  "putOPTASKActionlinkExternalObjectWithId": {
                    "value": {}
                  },
                  "putOPTASKActionmarkDoneWithId": {
                    "value": {}
                  },
                  "putOPTASKActionmarkNotDoneWithId": {
                    "value": {}
                  },
                  "putOPTASKActionmoveWithId": {
                    "value": {}
                  },
                  "putOPTASKActionmoveToTaskWithId": {
                    "value": {}
                  },
                  "putOPTASKActionrecallApprovalWithId": {
                    "value": {}
                  },
                  "putOPTASKActionrejectApprovalWithId": {
                    "value": {}
                  },
                  "putOPTASKActionreplyToAssignmentWithId": {
                    "value": {}
                  },
                  "putOPTASKActionunacceptWorkWithId": {
                    "value": {}
                  },
                  "putOPTASKActionunassignWithId": {
                    "value": {}
                  },
                  "putOPTASKActionunlinkExternalObjectWithId": {
                    "value": {}
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getOPTASKByID",
        "summary": "Issue Search",
        "description": "Searches through the Issue objects",
        "tags": [
          "OPTASK",
          "search"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1optask~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "$ref": "#/paths/~1optask/post/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/fields.yml"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/paths/~1optask~1report/get/parameters/1/content/application~1json/schema",
                          "x-miro": "swagger/v10.0/schemas/resources/OPTASK/read.json"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/report": {
      "get": {
        "operationId": "getOPTASKReport",
        "summary": "Issue Report",
        "description": "Returns an aggregate of information about Issue objects",
        "tags": [
          "OPTASK",
          "report"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "updates",
            "description": "JSON object whose fields represent the fields of the resource to set",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1optask/post/parameters/1/content/application~1json/schema",
                  "x-miro": "swagger/v10.0/schemas/resources/OPTASK/write.json"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "filters",
            "description": "JSON object whose fields represent the fields of the resource to filter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "accessorIDs": {
                      "$ref": "#/paths/~1optask/put/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                    },
                    "actualCompletionDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "actualCost": {
                      "$ref": "#/paths/~1optask/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "actualStartDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "actualWorkRequired": {
                      "$ref": "#/paths/~1optask/post/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "actualWorkRequiredExpression": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "ageRangeAsString": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "approvalCompletionDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "approvalEstStartDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "approvalPlannedStartDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "approvalPlannedStartDay": {
                      "$ref": "#/paths/~1optask/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "approvalProcessID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "approvalProjectedStartDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "approvalStartDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "approversString": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "assignedToID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "auditTypes": {
                      "$ref": "#/paths/~1optask/post/parameters/12/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
                    },
                    "autoClosureDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "backlogOrder": {
                      "$ref": "#/paths/~1optask/post/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "backlogParent": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "canStart": {
                      "$ref": "#/paths/~1optask/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "categoryID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "color": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "commitDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "commitDateRange": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "condition": {
                      "$ref": "#/paths/~1optask/post/parameters/20/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.ConditionEnum.json"
                    },
                    "currentApprovalStepID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "currentStatusDuration": {
                      "$ref": "#/paths/~1optask/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "customerID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "description": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "dueDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "durationMinutes": {
                      "$ref": "#/paths/~1optask/post/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "enteredByID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "entryDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "estimate": {
                      "$ref": "#/paths/~1optask/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "extRefID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "firstResponse": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "hasDocuments": {
                      "$ref": "#/paths/~1optask/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hasMessages": {
                      "$ref": "#/paths/~1optask/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hasNotes": {
                      "$ref": "#/paths/~1optask/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hasResolvables": {
                      "$ref": "#/paths/~1optask/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "hasTimedNotifications": {
                      "$ref": "#/paths/~1optask/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "howOld": {
                      "$ref": "#/paths/~1optask/post/parameters/4/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
                    },
                    "isComplete": {
                      "$ref": "#/paths/~1optask/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "isHelpDesk": {
                      "$ref": "#/paths/~1optask/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "isReady": {
                      "$ref": "#/paths/~1optask/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "iterationID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "lastConditionNoteID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "lastNoteID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "lastUpdateDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "lastUpdatedByID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "name": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "numberOfChildren": {
                      "$ref": "#/paths/~1optask/post/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "opTaskType": {
                      "$ref": "#/paths/~1optask/post/parameters/43/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskTypeEnum.json"
                    },
                    "opTaskTypeLabel": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "ownerID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "plannedCompletionDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "plannedDateAlignment": {
                      "type": "number",
                      "enum": [
                        0,
                        1,
                        2,
                        3
                      ]
                    },
                    "plannedDurationMinutes": {
                      "$ref": "#/paths/~1optask/post/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "plannedHoursAlignment": {
                      "type": "number",
                      "enum": [
                        0,
                        1,
                        2,
                        3
                      ]
                    },
                    "plannedStartDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "previousStatus": {
                      "$ref": "#/paths/~1optask/post/parameters/48/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
                    },
                    "priority": {
                      "$ref": "#/paths/~1optask/post/parameters/49/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
                    },
                    "priorityColor": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "projectID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "projectedCompletionDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "projectedDurationMinutes": {
                      "$ref": "#/paths/~1optask/post/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "projectedStartDate": {
                      "$ref": "#/paths/~1optask/post/parameters/3/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "queueTopicID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "referenceNumber": {
                      "$ref": "#/paths/~1optask/post/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "referenceObjCode": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "referenceObjID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "rejectionIssueID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "remainingDurationMinutes": {
                      "$ref": "#/paths/~1optask/post/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "resolutionTime": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "resolveOpTaskID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "resolveProjectID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "resolveTaskID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "resolvingObjCode": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "resolvingObjID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "roleID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "securityRootID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "securityRootObjCode": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "severity": {
                      "$ref": "#/paths/~1optask/post/parameters/66/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.SeverityEnum.json"
                    },
                    "showCommitDate": {
                      "$ref": "#/paths/~1optask/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "showCondition": {
                      "$ref": "#/paths/~1optask/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "showStatus": {
                      "$ref": "#/paths/~1optask/put/parameters/7/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "sourceObjCode": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "sourceObjID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "sourceTaskID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "status": {
                      "$ref": "#/paths/~1optask/post/parameters/48/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
                    },
                    "statusUpdate": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "storyBoardOrder": {
                      "$ref": "#/paths/~1optask/post/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "submittedByID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "teamID": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "url": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "version": {
                      "$ref": "#/paths/~1optask/post/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "workRequired": {
                      "$ref": "#/paths/~1optask/post/parameters/6/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "workRequiredExpression": {
                      "$ref": "#/paths/~1optask/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    }
                  }
                }
              }
            }
          },
          {
            "in": "query",
            "name": "ID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for ID"
          },
          {
            "in": "query",
            "name": "actualCompletionDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Actual Completion Date"
          },
          {
            "in": "query",
            "name": "actualCost",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            },
            "required": false,
            "description": "filter results with the given field value for Actual Cost"
          },
          {
            "in": "query",
            "name": "actualStartDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Actual Start Date"
          },
          {
            "in": "query",
            "name": "actualWorkRequired",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Actual Hours"
          },
          {
            "in": "query",
            "name": "approvalCompletionDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Approval Path Completion Date"
          },
          {
            "in": "query",
            "name": "approvalProcessID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Approval Processes ID"
          },
          {
            "in": "query",
            "name": "approvalStartDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Approval Path Start Date"
          },
          {
            "in": "query",
            "name": "assignedToID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Assigned To ID"
          },
          {
            "in": "query",
            "name": "auditTypes",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/12/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Audit Types"
          },
          {
            "in": "query",
            "name": "autoClosureDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Auto Closure Date"
          },
          {
            "in": "query",
            "name": "categoryID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Category ID"
          },
          {
            "in": "query",
            "name": "color",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Color"
          },
          {
            "in": "query",
            "name": "commitDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Commit Date"
          },
          {
            "in": "query",
            "name": "condition",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/20/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.ConditionEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Condition"
          },
          {
            "in": "query",
            "name": "currentApprovalStepID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Current Approval Stage ID"
          },
          {
            "in": "query",
            "name": "customerID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Customer ID"
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Description"
          },
          {
            "in": "query",
            "name": "enteredByID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Entered By ID"
          },
          {
            "in": "query",
            "name": "entryDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Entry Date"
          },
          {
            "in": "query",
            "name": "extRefID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for External Reference ID"
          },
          {
            "in": "query",
            "name": "hasDocuments",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Has Documents"
          },
          {
            "in": "query",
            "name": "hasMessages",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Has Messages"
          },
          {
            "in": "query",
            "name": "hasNotes",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Has Notes"
          },
          {
            "in": "query",
            "name": "hasResolvables",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Has Resolvables"
          },
          {
            "in": "query",
            "name": "hasTimedNotifications",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Has Reminder Notifications"
          },
          {
            "in": "query",
            "name": "isComplete",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Is Complete"
          },
          {
            "in": "query",
            "name": "isHelpDesk",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Is Help Desk"
          },
          {
            "in": "query",
            "name": "isReady",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Ready"
          },
          {
            "in": "query",
            "name": "iterationID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Iteration ID"
          },
          {
            "in": "query",
            "name": "lastConditionNoteID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Last Condition Note ID"
          },
          {
            "in": "query",
            "name": "lastNoteID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Last Note ID"
          },
          {
            "in": "query",
            "name": "lastUpdateDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Last Update Date"
          },
          {
            "in": "query",
            "name": "lastUpdatedByID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Last Updated By ID"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Name"
          },
          {
            "in": "query",
            "name": "opTaskType",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/43/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskTypeEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Issue Type"
          },
          {
            "in": "query",
            "name": "ownerID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Owner ID"
          },
          {
            "in": "query",
            "name": "plannedCompletionDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Planned Completion Date"
          },
          {
            "in": "query",
            "name": "plannedDurationMinutes",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Planned Duration Minutes"
          },
          {
            "in": "query",
            "name": "plannedStartDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Planned Start Date"
          },
          {
            "in": "query",
            "name": "previousStatus",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/48/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Previous Status"
          },
          {
            "in": "query",
            "name": "priority",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/49/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Priority"
          },
          {
            "in": "query",
            "name": "projectID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Project ID"
          },
          {
            "in": "query",
            "name": "projectedDurationMinutes",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Projected Duration Minutes"
          },
          {
            "in": "query",
            "name": "queueTopicID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Queue Topic ID"
          },
          {
            "in": "query",
            "name": "referenceNumber",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Reference Number"
          },
          {
            "in": "query",
            "name": "remainingDurationMinutes",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Remaining Duration Minutes"
          },
          {
            "in": "query",
            "name": "resolveOpTaskID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Resolve Issue ID"
          },
          {
            "in": "query",
            "name": "resolveProjectID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Resolve Project ID"
          },
          {
            "in": "query",
            "name": "resolveTaskID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Resolve Task ID"
          },
          {
            "in": "query",
            "name": "resolvingObjCode",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Resolving Object Type"
          },
          {
            "in": "query",
            "name": "resolvingObjID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Resolving Object ID"
          },
          {
            "in": "query",
            "name": "roleID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Role ID"
          },
          {
            "in": "query",
            "name": "securityRootID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for securityRootID"
          },
          {
            "in": "query",
            "name": "securityRootObjCode",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for securityRootObjCode"
          },
          {
            "in": "query",
            "name": "severity",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/66/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.SeverityEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Severity"
          },
          {
            "in": "query",
            "name": "sourceObjCode",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Source Object Type"
          },
          {
            "in": "query",
            "name": "sourceObjID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Source Object ID"
          },
          {
            "in": "query",
            "name": "sourceTaskID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Source Task ID"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/48/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
            },
            "required": false,
            "description": "filter results with the given field value for Status"
          },
          {
            "in": "query",
            "name": "statusUpdate",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Status Update"
          },
          {
            "in": "query",
            "name": "storyBoardOrder",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for storyBoardOrder"
          },
          {
            "in": "query",
            "name": "submittedByID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Submitted By ID"
          },
          {
            "in": "query",
            "name": "teamID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Team ID"
          },
          {
            "in": "query",
            "name": "url",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for URL"
          },
          {
            "in": "query",
            "name": "version",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Version"
          },
          {
            "in": "query",
            "name": "workRequired",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Planned Hours"
          },
          {
            "in": "query",
            "name": "ID_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by ID 4th"
          },
          {
            "in": "query",
            "name": "actualCompletionDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Actual Completion Date 4th"
          },
          {
            "in": "query",
            "name": "actualStartDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Actual Start Date 4th"
          },
          {
            "in": "query",
            "name": "approvalCompletionDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Path Completion Date 4th"
          },
          {
            "in": "query",
            "name": "approvalStartDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Path Start Date 4th"
          },
          {
            "in": "query",
            "name": "autoClosureDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Auto Closure Date 4th"
          },
          {
            "in": "query",
            "name": "commitDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Commit Date 4th"
          },
          {
            "in": "query",
            "name": "condition_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Condition 4th"
          },
          {
            "in": "query",
            "name": "description_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Description 4th"
          },
          {
            "in": "query",
            "name": "entryDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Entry Date 4th"
          },
          {
            "in": "query",
            "name": "extRefID_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by External Reference ID 4th"
          },
          {
            "in": "query",
            "name": "hasDocuments_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Documents 4th"
          },
          {
            "in": "query",
            "name": "hasMessages_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Messages 4th"
          },
          {
            "in": "query",
            "name": "isReady_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Ready 4th"
          },
          {
            "in": "query",
            "name": "lastUpdateDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Last Update Date 4th"
          },
          {
            "in": "query",
            "name": "name_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Name 4th"
          },
          {
            "in": "query",
            "name": "opTaskType_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Issue Type 4th"
          },
          {
            "in": "query",
            "name": "plannedCompletionDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Planned Completion Date 4th"
          },
          {
            "in": "query",
            "name": "plannedStartDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Planned Start Date 4th"
          },
          {
            "in": "query",
            "name": "priority_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Priority 4th"
          },
          {
            "in": "query",
            "name": "referenceNumber_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Reference Number 4th"
          },
          {
            "in": "query",
            "name": "severity_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Severity 4th"
          },
          {
            "in": "query",
            "name": "status_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Status 4th"
          },
          {
            "in": "query",
            "name": "url_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by URL 4th"
          },
          {
            "in": "query",
            "name": "ID_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by ID 3rd"
          },
          {
            "in": "query",
            "name": "actualCompletionDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Actual Completion Date 3rd"
          },
          {
            "in": "query",
            "name": "actualStartDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Actual Start Date 3rd"
          },
          {
            "in": "query",
            "name": "approvalCompletionDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Path Completion Date 3rd"
          },
          {
            "in": "query",
            "name": "approvalStartDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Path Start Date 3rd"
          },
          {
            "in": "query",
            "name": "autoClosureDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Auto Closure Date 3rd"
          },
          {
            "in": "query",
            "name": "commitDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Commit Date 3rd"
          },
          {
            "in": "query",
            "name": "condition_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Condition 3rd"
          },
          {
            "in": "query",
            "name": "description_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Description 3rd"
          },
          {
            "in": "query",
            "name": "entryDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Entry Date 3rd"
          },
          {
            "in": "query",
            "name": "extRefID_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by External Reference ID 3rd"
          },
          {
            "in": "query",
            "name": "hasDocuments_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Documents 3rd"
          },
          {
            "in": "query",
            "name": "hasMessages_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Messages 3rd"
          },
          {
            "in": "query",
            "name": "isReady_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Ready 3rd"
          },
          {
            "in": "query",
            "name": "lastUpdateDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Last Update Date 3rd"
          },
          {
            "in": "query",
            "name": "name_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Name 3rd"
          },
          {
            "in": "query",
            "name": "opTaskType_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Issue Type 3rd"
          },
          {
            "in": "query",
            "name": "plannedCompletionDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Planned Completion Date 3rd"
          },
          {
            "in": "query",
            "name": "plannedStartDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Planned Start Date 3rd"
          },
          {
            "in": "query",
            "name": "priority_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Priority 3rd"
          },
          {
            "in": "query",
            "name": "referenceNumber_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Reference Number 3rd"
          },
          {
            "in": "query",
            "name": "severity_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Severity 3rd"
          },
          {
            "in": "query",
            "name": "status_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Status 3rd"
          },
          {
            "in": "query",
            "name": "url_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by URL 3rd"
          },
          {
            "in": "query",
            "name": "ID_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by ID 2nd"
          },
          {
            "in": "query",
            "name": "actualCompletionDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Actual Completion Date 2nd"
          },
          {
            "in": "query",
            "name": "actualStartDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Actual Start Date 2nd"
          },
          {
            "in": "query",
            "name": "approvalCompletionDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Path Completion Date 2nd"
          },
          {
            "in": "query",
            "name": "approvalStartDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Path Start Date 2nd"
          },
          {
            "in": "query",
            "name": "autoClosureDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Auto Closure Date 2nd"
          },
          {
            "in": "query",
            "name": "commitDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Commit Date 2nd"
          },
          {
            "in": "query",
            "name": "condition_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Condition 2nd"
          },
          {
            "in": "query",
            "name": "description_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Description 2nd"
          },
          {
            "in": "query",
            "name": "entryDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Entry Date 2nd"
          },
          {
            "in": "query",
            "name": "extRefID_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by External Reference ID 2nd"
          },
          {
            "in": "query",
            "name": "hasDocuments_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Documents 2nd"
          },
          {
            "in": "query",
            "name": "hasMessages_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Messages 2nd"
          },
          {
            "in": "query",
            "name": "isReady_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Ready 2nd"
          },
          {
            "in": "query",
            "name": "lastUpdateDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Last Update Date 2nd"
          },
          {
            "in": "query",
            "name": "name_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Name 2nd"
          },
          {
            "in": "query",
            "name": "opTaskType_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Issue Type 2nd"
          },
          {
            "in": "query",
            "name": "plannedCompletionDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Planned Completion Date 2nd"
          },
          {
            "in": "query",
            "name": "plannedStartDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Planned Start Date 2nd"
          },
          {
            "in": "query",
            "name": "priority_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Priority 2nd"
          },
          {
            "in": "query",
            "name": "referenceNumber_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Reference Number 2nd"
          },
          {
            "in": "query",
            "name": "severity_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Severity 2nd"
          },
          {
            "in": "query",
            "name": "status_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Status 2nd"
          },
          {
            "in": "query",
            "name": "url_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by URL 2nd"
          },
          {
            "in": "query",
            "name": "ID_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by ID 1st"
          },
          {
            "in": "query",
            "name": "actualCompletionDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Actual Completion Date 1st"
          },
          {
            "in": "query",
            "name": "actualStartDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Actual Start Date 1st"
          },
          {
            "in": "query",
            "name": "approvalCompletionDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Path Completion Date 1st"
          },
          {
            "in": "query",
            "name": "approvalStartDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Path Start Date 1st"
          },
          {
            "in": "query",
            "name": "autoClosureDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Auto Closure Date 1st"
          },
          {
            "in": "query",
            "name": "commitDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Commit Date 1st"
          },
          {
            "in": "query",
            "name": "condition_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Condition 1st"
          },
          {
            "in": "query",
            "name": "description_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Description 1st"
          },
          {
            "in": "query",
            "name": "entryDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Entry Date 1st"
          },
          {
            "in": "query",
            "name": "extRefID_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by External Reference ID 1st"
          },
          {
            "in": "query",
            "name": "hasDocuments_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Documents 1st"
          },
          {
            "in": "query",
            "name": "hasMessages_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Messages 1st"
          },
          {
            "in": "query",
            "name": "isReady_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Ready 1st"
          },
          {
            "in": "query",
            "name": "lastUpdateDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Last Update Date 1st"
          },
          {
            "in": "query",
            "name": "name_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Name 1st"
          },
          {
            "in": "query",
            "name": "opTaskType_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Issue Type 1st"
          },
          {
            "in": "query",
            "name": "plannedCompletionDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Planned Completion Date 1st"
          },
          {
            "in": "query",
            "name": "plannedStartDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Planned Start Date 1st"
          },
          {
            "in": "query",
            "name": "priority_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Priority 1st"
          },
          {
            "in": "query",
            "name": "referenceNumber_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Reference Number 1st"
          },
          {
            "in": "query",
            "name": "severity_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Severity 1st"
          },
          {
            "in": "query",
            "name": "status_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Status 1st"
          },
          {
            "in": "query",
            "name": "url_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by URL 1st"
          },
          {
            "in": "query",
            "name": "ID_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by ID 0th"
          },
          {
            "in": "query",
            "name": "actualCompletionDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Actual Completion Date 0th"
          },
          {
            "in": "query",
            "name": "actualStartDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Actual Start Date 0th"
          },
          {
            "in": "query",
            "name": "approvalCompletionDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Path Completion Date 0th"
          },
          {
            "in": "query",
            "name": "approvalStartDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Approval Path Start Date 0th"
          },
          {
            "in": "query",
            "name": "autoClosureDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Auto Closure Date 0th"
          },
          {
            "in": "query",
            "name": "commitDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Commit Date 0th"
          },
          {
            "in": "query",
            "name": "condition_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Condition 0th"
          },
          {
            "in": "query",
            "name": "description_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Description 0th"
          },
          {
            "in": "query",
            "name": "entryDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Entry Date 0th"
          },
          {
            "in": "query",
            "name": "extRefID_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by External Reference ID 0th"
          },
          {
            "in": "query",
            "name": "hasDocuments_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Documents 0th"
          },
          {
            "in": "query",
            "name": "hasMessages_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Messages 0th"
          },
          {
            "in": "query",
            "name": "isReady_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Ready 0th"
          },
          {
            "in": "query",
            "name": "lastUpdateDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Last Update Date 0th"
          },
          {
            "in": "query",
            "name": "name_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Name 0th"
          },
          {
            "in": "query",
            "name": "opTaskType_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Issue Type 0th"
          },
          {
            "in": "query",
            "name": "plannedCompletionDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Planned Completion Date 0th"
          },
          {
            "in": "query",
            "name": "plannedStartDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Planned Start Date 0th"
          },
          {
            "in": "query",
            "name": "priority_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Priority 0th"
          },
          {
            "in": "query",
            "name": "referenceNumber_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Reference Number 0th"
          },
          {
            "in": "query",
            "name": "severity_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Severity 0th"
          },
          {
            "in": "query",
            "name": "status_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Status 0th"
          },
          {
            "in": "query",
            "name": "url_GroupBy",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by URL 0th"
          },
          {
            "in": "query",
            "name": "ID_AggFunc",
            "schema": {
              "type": "string",
              "enum": [
                "avg",
                "count",
                "max",
                "min",
                "sum"
              ]
            },
            "required": false,
            "description": "Aggregate ID using the specified function"
          },
          {
            "in": "query",
            "name": "accessorIDs_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate accessorIDs using the specified function"
          },
          {
            "in": "query",
            "name": "actualCompletionDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Actual Completion Date using the specified function"
          },
          {
            "in": "query",
            "name": "actualCost_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Actual Cost using the specified function"
          },
          {
            "in": "query",
            "name": "actualStartDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Actual Start Date using the specified function"
          },
          {
            "in": "query",
            "name": "actualWorkRequired_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Actual Hours using the specified function"
          },
          {
            "in": "query",
            "name": "actualWorkRequiredExpression_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate actualWorkRequiredExpression using the specified function"
          },
          {
            "in": "query",
            "name": "ageRangeAsString_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate ageRangeAsString using the specified function"
          },
          {
            "in": "query",
            "name": "approvalCompletionDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Approval Path Completion Date using the specified function"
          },
          {
            "in": "query",
            "name": "approvalEstStartDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Approval Estimated Start Date using the specified function"
          },
          {
            "in": "query",
            "name": "approvalPlannedStartDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Approval Planned Start Date using the specified function"
          },
          {
            "in": "query",
            "name": "approvalPlannedStartDay_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate approvalPlannedStartDay using the specified function"
          },
          {
            "in": "query",
            "name": "approvalProcessID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Approval Processes ID using the specified function"
          },
          {
            "in": "query",
            "name": "approvalProjectedStartDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Approval Projected Start Date using the specified function"
          },
          {
            "in": "query",
            "name": "approvalStartDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Approval Path Start Date using the specified function"
          },
          {
            "in": "query",
            "name": "approversString_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate approversString using the specified function"
          },
          {
            "in": "query",
            "name": "assignedToID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Assigned To ID using the specified function"
          },
          {
            "in": "query",
            "name": "auditTypes_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Audit Types using the specified function"
          },
          {
            "in": "query",
            "name": "autoClosureDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Auto Closure Date using the specified function"
          },
          {
            "in": "query",
            "name": "backlogOrder_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Order using the specified function"
          },
          {
            "in": "query",
            "name": "backlogParent_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Parent using the specified function"
          },
          {
            "in": "query",
            "name": "canStart_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Can Start using the specified function"
          },
          {
            "in": "query",
            "name": "categoryID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Category ID using the specified function"
          },
          {
            "in": "query",
            "name": "color_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Color using the specified function"
          },
          {
            "in": "query",
            "name": "commitDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Commit Date using the specified function"
          },
          {
            "in": "query",
            "name": "commitDateRange_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate commitDateRange using the specified function"
          },
          {
            "in": "query",
            "name": "condition_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Condition using the specified function"
          },
          {
            "in": "query",
            "name": "currentApprovalStepID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Current Approval Stage ID using the specified function"
          },
          {
            "in": "query",
            "name": "currentStatusDuration_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate currentStatusDuration using the specified function"
          },
          {
            "in": "query",
            "name": "customerID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Customer ID using the specified function"
          },
          {
            "in": "query",
            "name": "description_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Description using the specified function"
          },
          {
            "in": "query",
            "name": "dueDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Due Date using the specified function"
          },
          {
            "in": "query",
            "name": "durationMinutes_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Duration in Minutes using the specified function"
          },
          {
            "in": "query",
            "name": "enteredByID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Entered By ID using the specified function"
          },
          {
            "in": "query",
            "name": "entryDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Entry Date using the specified function"
          },
          {
            "in": "query",
            "name": "estimate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Estimate using the specified function"
          },
          {
            "in": "query",
            "name": "extRefID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate External Reference ID using the specified function"
          },
          {
            "in": "query",
            "name": "firstResponse_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate First Response using the specified function"
          },
          {
            "in": "query",
            "name": "hasDocuments_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Has Documents using the specified function"
          },
          {
            "in": "query",
            "name": "hasMessages_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Has Messages using the specified function"
          },
          {
            "in": "query",
            "name": "hasNotes_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Has Notes using the specified function"
          },
          {
            "in": "query",
            "name": "hasResolvables_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Has Resolvables using the specified function"
          },
          {
            "in": "query",
            "name": "hasTimedNotifications_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Has Reminder Notifications using the specified function"
          },
          {
            "in": "query",
            "name": "howOld_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Age using the specified function"
          },
          {
            "in": "query",
            "name": "isComplete_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Is Complete using the specified function"
          },
          {
            "in": "query",
            "name": "isHelpDesk_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Is Help Desk using the specified function"
          },
          {
            "in": "query",
            "name": "isReady_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Ready using the specified function"
          },
          {
            "in": "query",
            "name": "iterationID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Iteration ID using the specified function"
          },
          {
            "in": "query",
            "name": "lastConditionNoteID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Last Condition Note ID using the specified function"
          },
          {
            "in": "query",
            "name": "lastNoteID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Last Note ID using the specified function"
          },
          {
            "in": "query",
            "name": "lastUpdateDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Last Update Date using the specified function"
          },
          {
            "in": "query",
            "name": "lastUpdatedByID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Last Updated By ID using the specified function"
          },
          {
            "in": "query",
            "name": "name_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Name using the specified function"
          },
          {
            "in": "query",
            "name": "numberOfChildren_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Number of Children using the specified function"
          },
          {
            "in": "query",
            "name": "opTaskType_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Issue Type using the specified function"
          },
          {
            "in": "query",
            "name": "opTaskTypeLabel_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate opTaskTypeLabel using the specified function"
          },
          {
            "in": "query",
            "name": "ownerID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Owner ID using the specified function"
          },
          {
            "in": "query",
            "name": "plannedCompletionDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Planned Completion Date using the specified function"
          },
          {
            "in": "query",
            "name": "plannedDateAlignment_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Planned Date Alignment using the specified function"
          },
          {
            "in": "query",
            "name": "plannedDurationMinutes_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Planned Duration Minutes using the specified function"
          },
          {
            "in": "query",
            "name": "plannedHoursAlignment_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Planned Hours Alignment using the specified function"
          },
          {
            "in": "query",
            "name": "plannedStartDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Planned Start Date using the specified function"
          },
          {
            "in": "query",
            "name": "previousStatus_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Previous Status using the specified function"
          },
          {
            "in": "query",
            "name": "priority_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Priority using the specified function"
          },
          {
            "in": "query",
            "name": "priorityColor_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate priorityColor using the specified function"
          },
          {
            "in": "query",
            "name": "projectID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Project ID using the specified function"
          },
          {
            "in": "query",
            "name": "projectedCompletionDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Projected Completion Date using the specified function"
          },
          {
            "in": "query",
            "name": "projectedDurationMinutes_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Projected Duration Minutes using the specified function"
          },
          {
            "in": "query",
            "name": "projectedStartDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Projected Start Date using the specified function"
          },
          {
            "in": "query",
            "name": "queueTopicID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Queue Topic ID using the specified function"
          },
          {
            "in": "query",
            "name": "referenceNumber_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Reference Number using the specified function"
          },
          {
            "in": "query",
            "name": "referenceObjCode_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate referenceObjCode using the specified function"
          },
          {
            "in": "query",
            "name": "referenceObjID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate referenceObjID using the specified function"
          },
          {
            "in": "query",
            "name": "rejectionIssueID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Rejection Issue ID using the specified function"
          },
          {
            "in": "query",
            "name": "remainingDurationMinutes_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Remaining Duration Minutes using the specified function"
          },
          {
            "in": "query",
            "name": "resolutionTime_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Resolution time using the specified function"
          },
          {
            "in": "query",
            "name": "resolveOpTaskID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Resolve Issue ID using the specified function"
          },
          {
            "in": "query",
            "name": "resolveProjectID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Resolve Project ID using the specified function"
          },
          {
            "in": "query",
            "name": "resolveTaskID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Resolve Task ID using the specified function"
          },
          {
            "in": "query",
            "name": "resolvingObjCode_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Resolving Object Type using the specified function"
          },
          {
            "in": "query",
            "name": "resolvingObjID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Resolving Object ID using the specified function"
          },
          {
            "in": "query",
            "name": "roleID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Role ID using the specified function"
          },
          {
            "in": "query",
            "name": "securityRootID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate securityRootID using the specified function"
          },
          {
            "in": "query",
            "name": "securityRootObjCode_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate securityRootObjCode using the specified function"
          },
          {
            "in": "query",
            "name": "severity_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Severity using the specified function"
          },
          {
            "in": "query",
            "name": "showCommitDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate showCommitDate using the specified function"
          },
          {
            "in": "query",
            "name": "showCondition_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate showCondition using the specified function"
          },
          {
            "in": "query",
            "name": "showStatus_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate showStatus using the specified function"
          },
          {
            "in": "query",
            "name": "sourceObjCode_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Source Object Type using the specified function"
          },
          {
            "in": "query",
            "name": "sourceObjID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Source Object ID using the specified function"
          },
          {
            "in": "query",
            "name": "sourceTaskID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Source Task ID using the specified function"
          },
          {
            "in": "query",
            "name": "status_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Status using the specified function"
          },
          {
            "in": "query",
            "name": "statusUpdate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Status Update using the specified function"
          },
          {
            "in": "query",
            "name": "storyBoardOrder_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate storyBoardOrder using the specified function"
          },
          {
            "in": "query",
            "name": "submittedByID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Submitted By ID using the specified function"
          },
          {
            "in": "query",
            "name": "teamID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Team ID using the specified function"
          },
          {
            "in": "query",
            "name": "url_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate URL using the specified function"
          },
          {
            "in": "query",
            "name": "version_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Version using the specified function"
          },
          {
            "in": "query",
            "name": "workRequired_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Planned Hours using the specified function"
          },
          {
            "in": "query",
            "name": "workRequiredExpression_AggFunc",
            "schema": {
              "$ref": "#/paths/~1optask~1report/get/parameters/189/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate workRequiredExpression using the specified function"
          },
          {
            "in": "query",
            "name": "$$ROLLUP",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Causes an aggregate total to be returned at each grouping level"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "$$ROLLUP": {
                              "type": "object",
                              "additionalProperties": {}
                            }
                          },
                          "additionalProperties": {}
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/search": {
      "get": {
        "operationId": "getOPTASKSearch",
        "summary": "Issue Search",
        "description": "Searches through the Issue objects",
        "tags": [
          "OPTASK",
          "search"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "filters",
            "description": "JSON object whose fields represent the fields of the resource to filter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1optask~1report/get/parameters/1/content/application~1json/schema",
                  "x-miro": "swagger/v10.0/schemas/resources/OPTASK/read.json"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "OR:4:ID",
            "description": "Filter results by OR group 4 applied to ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualCompletionDate",
            "description": "Filter results by OR group 4 applied to Actual Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualCost",
            "description": "Filter results by OR group 4 applied to Actual Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualStartDate",
            "description": "Filter results by OR group 4 applied to Actual Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualWorkRequired",
            "description": "Filter results by OR group 4 applied to Actual Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:approvalCompletionDate",
            "description": "Filter results by OR group 4 applied to Approval Path Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:approvalProcessID",
            "description": "Filter results by OR group 4 applied to Approval Processes ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:approvalStartDate",
            "description": "Filter results by OR group 4 applied to Approval Path Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:assignedToID",
            "description": "Filter results by OR group 4 applied to Assigned To ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:auditTypes",
            "description": "Filter results by OR group 4 applied to Audit Types. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/12/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:autoClosureDate",
            "description": "Filter results by OR group 4 applied to Auto Closure Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:categoryID",
            "description": "Filter results by OR group 4 applied to Category ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:color",
            "description": "Filter results by OR group 4 applied to Color. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:commitDate",
            "description": "Filter results by OR group 4 applied to Commit Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:condition",
            "description": "Filter results by OR group 4 applied to Condition. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/20/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.ConditionEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:currentApprovalStepID",
            "description": "Filter results by OR group 4 applied to Current Approval Stage ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:customerID",
            "description": "Filter results by OR group 4 applied to Customer ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:description",
            "description": "Filter results by OR group 4 applied to Description. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:enteredByID",
            "description": "Filter results by OR group 4 applied to Entered By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:entryDate",
            "description": "Filter results by OR group 4 applied to Entry Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:extRefID",
            "description": "Filter results by OR group 4 applied to External Reference ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasDocuments",
            "description": "Filter results by OR group 4 applied to Has Documents. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasMessages",
            "description": "Filter results by OR group 4 applied to Has Messages. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasNotes",
            "description": "Filter results by OR group 4 applied to Has Notes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasResolvables",
            "description": "Filter results by OR group 4 applied to Has Resolvables. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasTimedNotifications",
            "description": "Filter results by OR group 4 applied to Has Reminder Notifications. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isComplete",
            "description": "Filter results by OR group 4 applied to Is Complete. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isHelpDesk",
            "description": "Filter results by OR group 4 applied to Is Help Desk. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isReady",
            "description": "Filter results by OR group 4 applied to Ready. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:iterationID",
            "description": "Filter results by OR group 4 applied to Iteration ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastConditionNoteID",
            "description": "Filter results by OR group 4 applied to Last Condition Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastNoteID",
            "description": "Filter results by OR group 4 applied to Last Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastUpdateDate",
            "description": "Filter results by OR group 4 applied to Last Update Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastUpdatedByID",
            "description": "Filter results by OR group 4 applied to Last Updated By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:name",
            "description": "Filter results by OR group 4 applied to Name. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:opTaskType",
            "description": "Filter results by OR group 4 applied to Issue Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/43/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:ownerID",
            "description": "Filter results by OR group 4 applied to Owner ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedCompletionDate",
            "description": "Filter results by OR group 4 applied to Planned Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedDurationMinutes",
            "description": "Filter results by OR group 4 applied to Planned Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedStartDate",
            "description": "Filter results by OR group 4 applied to Planned Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:previousStatus",
            "description": "Filter results by OR group 4 applied to Previous Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/48/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:priority",
            "description": "Filter results by OR group 4 applied to Priority. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/49/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:projectID",
            "description": "Filter results by OR group 4 applied to Project ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:projectedDurationMinutes",
            "description": "Filter results by OR group 4 applied to Projected Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:queueTopicID",
            "description": "Filter results by OR group 4 applied to Queue Topic ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:referenceNumber",
            "description": "Filter results by OR group 4 applied to Reference Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:remainingDurationMinutes",
            "description": "Filter results by OR group 4 applied to Remaining Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:resolveOpTaskID",
            "description": "Filter results by OR group 4 applied to Resolve Issue ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:resolveProjectID",
            "description": "Filter results by OR group 4 applied to Resolve Project ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:resolveTaskID",
            "description": "Filter results by OR group 4 applied to Resolve Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:resolvingObjCode",
            "description": "Filter results by OR group 4 applied to Resolving Object Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:resolvingObjID",
            "description": "Filter results by OR group 4 applied to Resolving Object ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:roleID",
            "description": "Filter results by OR group 4 applied to Role ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:securityRootID",
            "description": "Filter results by OR group 4 applied to securityRootID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:securityRootObjCode",
            "description": "Filter results by OR group 4 applied to securityRootObjCode. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:severity",
            "description": "Filter results by OR group 4 applied to Severity. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/66/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.SeverityEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:sourceObjCode",
            "description": "Filter results by OR group 4 applied to Source Object Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:sourceObjID",
            "description": "Filter results by OR group 4 applied to Source Object ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:sourceTaskID",
            "description": "Filter results by OR group 4 applied to Source Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:status",
            "description": "Filter results by OR group 4 applied to Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/48/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:statusUpdate",
            "description": "Filter results by OR group 4 applied to Status Update. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:storyBoardOrder",
            "description": "Filter results by OR group 4 applied to storyBoardOrder. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:submittedByID",
            "description": "Filter results by OR group 4 applied to Submitted By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:teamID",
            "description": "Filter results by OR group 4 applied to Team ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:url",
            "description": "Filter results by OR group 4 applied to URL. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:version",
            "description": "Filter results by OR group 4 applied to Version. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:workRequired",
            "description": "Filter results by OR group 4 applied to Planned Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:ID_Mod",
            "description": "Filter results by ID using the specified operation. Requires the field `OR:4:ID`.",
            "schema": {
              "type": "string",
              "enum": [
                "eq",
                "ne",
                "in",
                "notin",
                "between",
                "notbetween",
                "lt",
                "lte",
                "gt",
                "gte",
                "contains",
                "notcontains",
                "isnull",
                "notnull",
                "like",
                "isblank",
                "notblank",
                "soundex",
                "cicontains",
                "cinotcontains",
                "cieq",
                "cine"
              ]
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualCompletionDate_Mod",
            "description": "Filter results by Actual Completion Date using the specified operation. Requires the field `OR:4:actualCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualCost_Mod",
            "description": "Filter results by Actual Cost using the specified operation. Requires the field `OR:4:actualCost`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualStartDate_Mod",
            "description": "Filter results by Actual Start Date using the specified operation. Requires the field `OR:4:actualStartDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:actualWorkRequired_Mod",
            "description": "Filter results by Actual Hours using the specified operation. Requires the field `OR:4:actualWorkRequired`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:approvalCompletionDate_Mod",
            "description": "Filter results by Approval Path Completion Date using the specified operation. Requires the field `OR:4:approvalCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:approvalProcessID_Mod",
            "description": "Filter results by Approval Processes ID using the specified operation. Requires the field `OR:4:approvalProcessID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:approvalStartDate_Mod",
            "description": "Filter results by Approval Path Start Date using the specified operation. Requires the field `OR:4:approvalStartDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:assignedToID_Mod",
            "description": "Filter results by Assigned To ID using the specified operation. Requires the field `OR:4:assignedToID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:auditTypes_Mod",
            "description": "Filter results by Audit Types using the specified operation. Requires the field `OR:4:auditTypes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:autoClosureDate_Mod",
            "description": "Filter results by Auto Closure Date using the specified operation. Requires the field `OR:4:autoClosureDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:categoryID_Mod",
            "description": "Filter results by Category ID using the specified operation. Requires the field `OR:4:categoryID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:color_Mod",
            "description": "Filter results by Color using the specified operation. Requires the field `OR:4:color`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:commitDate_Mod",
            "description": "Filter results by Commit Date using the specified operation. Requires the field `OR:4:commitDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:condition_Mod",
            "description": "Filter results by Condition using the specified operation. Requires the field `OR:4:condition`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:currentApprovalStepID_Mod",
            "description": "Filter results by Current Approval Stage ID using the specified operation. Requires the field `OR:4:currentApprovalStepID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:customerID_Mod",
            "description": "Filter results by Customer ID using the specified operation. Requires the field `OR:4:customerID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:description_Mod",
            "description": "Filter results by Description using the specified operation. Requires the field `OR:4:description`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:enteredByID_Mod",
            "description": "Filter results by Entered By ID using the specified operation. Requires the field `OR:4:enteredByID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:entryDate_Mod",
            "description": "Filter results by Entry Date using the specified operation. Requires the field `OR:4:entryDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:extRefID_Mod",
            "description": "Filter results by External Reference ID using the specified operation. Requires the field `OR:4:extRefID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasDocuments_Mod",
            "description": "Filter results by Has Documents using the specified operation. Requires the field `OR:4:hasDocuments`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasMessages_Mod",
            "description": "Filter results by Has Messages using the specified operation. Requires the field `OR:4:hasMessages`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasNotes_Mod",
            "description": "Filter results by Has Notes using the specified operation. Requires the field `OR:4:hasNotes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasResolvables_Mod",
            "description": "Filter results by Has Resolvables using the specified operation. Requires the field `OR:4:hasResolvables`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasTimedNotifications_Mod",
            "description": "Filter results by Has Reminder Notifications using the specified operation. Requires the field `OR:4:hasTimedNotifications`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isComplete_Mod",
            "description": "Filter results by Is Complete using the specified operation. Requires the field `OR:4:isComplete`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isHelpDesk_Mod",
            "description": "Filter results by Is Help Desk using the specified operation. Requires the field `OR:4:isHelpDesk`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isReady_Mod",
            "description": "Filter results by Ready using the specified operation. Requires the field `OR:4:isReady`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:iterationID_Mod",
            "description": "Filter results by Iteration ID using the specified operation. Requires the field `OR:4:iterationID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastConditionNoteID_Mod",
            "description": "Filter results by Last Condition Note ID using the specified operation. Requires the field `OR:4:lastConditionNoteID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastNoteID_Mod",
            "description": "Filter results by Last Note ID using the specified operation. Requires the field `OR:4:lastNoteID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastUpdateDate_Mod",
            "description": "Filter results by Last Update Date using the specified operation. Requires the field `OR:4:lastUpdateDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastUpdatedByID_Mod",
            "description": "Filter results by Last Updated By ID using the specified operation. Requires the field `OR:4:lastUpdatedByID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:name_Mod",
            "description": "Filter results by Name using the specified operation. Requires the field `OR:4:name`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:opTaskType_Mod",
            "description": "Filter results by Issue Type using the specified operation. Requires the field `OR:4:opTaskType`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:ownerID_Mod",
            "description": "Filter results by Owner ID using the specified operation. Requires the field `OR:4:ownerID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedCompletionDate_Mod",
            "description": "Filter results by Planned Completion Date using the specified operation. Requires the field `OR:4:plannedCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedDurationMinutes_Mod",
            "description": "Filter results by Planned Duration Minutes using the specified operation. Requires the field `OR:4:plannedDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:plannedStartDate_Mod",
            "description": "Filter results by Planned Start Date using the specified operation. Requires the field `OR:4:plannedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:previousStatus_Mod",
            "description": "Filter results by Previous Status using the specified operation. Requires the field `OR:4:previousStatus`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:priority_Mod",
            "description": "Filter results by Priority using the specified operation. Requires the field `OR:4:priority`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:projectID_Mod",
            "description": "Filter results by Project ID using the specified operation. Requires the field `OR:4:projectID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:projectedDurationMinutes_Mod",
            "description": "Filter results by Projected Duration Minutes using the specified operation. Requires the field `OR:4:projectedDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:queueTopicID_Mod",
            "description": "Filter results by Queue Topic ID using the specified operation. Requires the field `OR:4:queueTopicID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:referenceNumber_Mod",
            "description": "Filter results by Reference Number using the specified operation. Requires the field `OR:4:referenceNumber`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:remainingDurationMinutes_Mod",
            "description": "Filter results by Remaining Duration Minutes using the specified operation. Requires the field `OR:4:remainingDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:resolveOpTaskID_Mod",
            "description": "Filter results by Resolve Issue ID using the specified operation. Requires the field `OR:4:resolveOpTaskID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:resolveProjectID_Mod",
            "description": "Filter results by Resolve Project ID using the specified operation. Requires the field `OR:4:resolveProjectID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:resolveTaskID_Mod",
            "description": "Filter results by Resolve Task ID using the specified operation. Requires the field `OR:4:resolveTaskID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:resolvingObjCode_Mod",
            "description": "Filter results by Resolving Object Type using the specified operation. Requires the field `OR:4:resolvingObjCode`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:resolvingObjID_Mod",
            "description": "Filter results by Resolving Object ID using the specified operation. Requires the field `OR:4:resolvingObjID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:roleID_Mod",
            "description": "Filter results by Role ID using the specified operation. Requires the field `OR:4:roleID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:securityRootID_Mod",
            "description": "Filter results by securityRootID using the specified operation. Requires the field `OR:4:securityRootID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:securityRootObjCode_Mod",
            "description": "Filter results by securityRootObjCode using the specified operation. Requires the field `OR:4:securityRootObjCode`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:severity_Mod",
            "description": "Filter results by Severity using the specified operation. Requires the field `OR:4:severity`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:sourceObjCode_Mod",
            "description": "Filter results by Source Object Type using the specified operation. Requires the field `OR:4:sourceObjCode`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:sourceObjID_Mod",
            "description": "Filter results by Source Object ID using the specified operation. Requires the field `OR:4:sourceObjID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:sourceTaskID_Mod",
            "description": "Filter results by Source Task ID using the specified operation. Requires the field `OR:4:sourceTaskID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:status_Mod",
            "description": "Filter results by Status using the specified operation. Requires the field `OR:4:status`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:statusUpdate_Mod",
            "description": "Filter results by Status Update using the specified operation. Requires the field `OR:4:statusUpdate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:storyBoardOrder_Mod",
            "description": "Filter results by storyBoardOrder using the specified operation. Requires the field `OR:4:storyBoardOrder`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:submittedByID_Mod",
            "description": "Filter results by Submitted By ID using the specified operation. Requires the field `OR:4:submittedByID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:teamID_Mod",
            "description": "Filter results by Team ID using the specified operation. Requires the field `OR:4:teamID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:url_Mod",
            "description": "Filter results by URL using the specified operation. Requires the field `OR:4:url`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:version_Mod",
            "description": "Filter results by Version using the specified operation. Requires the field `OR:4:version`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:workRequired_Mod",
            "description": "Filter results by Planned Hours using the specified operation. Requires the field `OR:4:workRequired`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:ID",
            "description": "Filter results by OR group 3 applied to ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualCompletionDate",
            "description": "Filter results by OR group 3 applied to Actual Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualCost",
            "description": "Filter results by OR group 3 applied to Actual Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualStartDate",
            "description": "Filter results by OR group 3 applied to Actual Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualWorkRequired",
            "description": "Filter results by OR group 3 applied to Actual Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:approvalCompletionDate",
            "description": "Filter results by OR group 3 applied to Approval Path Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:approvalProcessID",
            "description": "Filter results by OR group 3 applied to Approval Processes ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:approvalStartDate",
            "description": "Filter results by OR group 3 applied to Approval Path Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:assignedToID",
            "description": "Filter results by OR group 3 applied to Assigned To ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:auditTypes",
            "description": "Filter results by OR group 3 applied to Audit Types. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/12/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:autoClosureDate",
            "description": "Filter results by OR group 3 applied to Auto Closure Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:categoryID",
            "description": "Filter results by OR group 3 applied to Category ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:color",
            "description": "Filter results by OR group 3 applied to Color. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:commitDate",
            "description": "Filter results by OR group 3 applied to Commit Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:condition",
            "description": "Filter results by OR group 3 applied to Condition. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/20/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.ConditionEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:currentApprovalStepID",
            "description": "Filter results by OR group 3 applied to Current Approval Stage ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:customerID",
            "description": "Filter results by OR group 3 applied to Customer ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:description",
            "description": "Filter results by OR group 3 applied to Description. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:enteredByID",
            "description": "Filter results by OR group 3 applied to Entered By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:entryDate",
            "description": "Filter results by OR group 3 applied to Entry Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:extRefID",
            "description": "Filter results by OR group 3 applied to External Reference ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasDocuments",
            "description": "Filter results by OR group 3 applied to Has Documents. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasMessages",
            "description": "Filter results by OR group 3 applied to Has Messages. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasNotes",
            "description": "Filter results by OR group 3 applied to Has Notes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasResolvables",
            "description": "Filter results by OR group 3 applied to Has Resolvables. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasTimedNotifications",
            "description": "Filter results by OR group 3 applied to Has Reminder Notifications. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isComplete",
            "description": "Filter results by OR group 3 applied to Is Complete. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isHelpDesk",
            "description": "Filter results by OR group 3 applied to Is Help Desk. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isReady",
            "description": "Filter results by OR group 3 applied to Ready. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:iterationID",
            "description": "Filter results by OR group 3 applied to Iteration ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastConditionNoteID",
            "description": "Filter results by OR group 3 applied to Last Condition Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastNoteID",
            "description": "Filter results by OR group 3 applied to Last Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastUpdateDate",
            "description": "Filter results by OR group 3 applied to Last Update Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastUpdatedByID",
            "description": "Filter results by OR group 3 applied to Last Updated By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:name",
            "description": "Filter results by OR group 3 applied to Name. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:opTaskType",
            "description": "Filter results by OR group 3 applied to Issue Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/43/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:ownerID",
            "description": "Filter results by OR group 3 applied to Owner ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedCompletionDate",
            "description": "Filter results by OR group 3 applied to Planned Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedDurationMinutes",
            "description": "Filter results by OR group 3 applied to Planned Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedStartDate",
            "description": "Filter results by OR group 3 applied to Planned Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:previousStatus",
            "description": "Filter results by OR group 3 applied to Previous Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/48/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:priority",
            "description": "Filter results by OR group 3 applied to Priority. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/49/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:projectID",
            "description": "Filter results by OR group 3 applied to Project ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:projectedDurationMinutes",
            "description": "Filter results by OR group 3 applied to Projected Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:queueTopicID",
            "description": "Filter results by OR group 3 applied to Queue Topic ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:referenceNumber",
            "description": "Filter results by OR group 3 applied to Reference Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:remainingDurationMinutes",
            "description": "Filter results by OR group 3 applied to Remaining Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:resolveOpTaskID",
            "description": "Filter results by OR group 3 applied to Resolve Issue ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:resolveProjectID",
            "description": "Filter results by OR group 3 applied to Resolve Project ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:resolveTaskID",
            "description": "Filter results by OR group 3 applied to Resolve Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:resolvingObjCode",
            "description": "Filter results by OR group 3 applied to Resolving Object Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:resolvingObjID",
            "description": "Filter results by OR group 3 applied to Resolving Object ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:roleID",
            "description": "Filter results by OR group 3 applied to Role ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:securityRootID",
            "description": "Filter results by OR group 3 applied to securityRootID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:securityRootObjCode",
            "description": "Filter results by OR group 3 applied to securityRootObjCode. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:severity",
            "description": "Filter results by OR group 3 applied to Severity. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/66/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.SeverityEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:sourceObjCode",
            "description": "Filter results by OR group 3 applied to Source Object Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:sourceObjID",
            "description": "Filter results by OR group 3 applied to Source Object ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:sourceTaskID",
            "description": "Filter results by OR group 3 applied to Source Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:status",
            "description": "Filter results by OR group 3 applied to Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/48/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:statusUpdate",
            "description": "Filter results by OR group 3 applied to Status Update. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:storyBoardOrder",
            "description": "Filter results by OR group 3 applied to storyBoardOrder. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:submittedByID",
            "description": "Filter results by OR group 3 applied to Submitted By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:teamID",
            "description": "Filter results by OR group 3 applied to Team ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:url",
            "description": "Filter results by OR group 3 applied to URL. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:version",
            "description": "Filter results by OR group 3 applied to Version. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:workRequired",
            "description": "Filter results by OR group 3 applied to Planned Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:ID_Mod",
            "description": "Filter results by ID using the specified operation. Requires the field `OR:3:ID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualCompletionDate_Mod",
            "description": "Filter results by Actual Completion Date using the specified operation. Requires the field `OR:3:actualCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualCost_Mod",
            "description": "Filter results by Actual Cost using the specified operation. Requires the field `OR:3:actualCost`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualStartDate_Mod",
            "description": "Filter results by Actual Start Date using the specified operation. Requires the field `OR:3:actualStartDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:actualWorkRequired_Mod",
            "description": "Filter results by Actual Hours using the specified operation. Requires the field `OR:3:actualWorkRequired`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:approvalCompletionDate_Mod",
            "description": "Filter results by Approval Path Completion Date using the specified operation. Requires the field `OR:3:approvalCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:approvalProcessID_Mod",
            "description": "Filter results by Approval Processes ID using the specified operation. Requires the field `OR:3:approvalProcessID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:approvalStartDate_Mod",
            "description": "Filter results by Approval Path Start Date using the specified operation. Requires the field `OR:3:approvalStartDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:assignedToID_Mod",
            "description": "Filter results by Assigned To ID using the specified operation. Requires the field `OR:3:assignedToID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:auditTypes_Mod",
            "description": "Filter results by Audit Types using the specified operation. Requires the field `OR:3:auditTypes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:autoClosureDate_Mod",
            "description": "Filter results by Auto Closure Date using the specified operation. Requires the field `OR:3:autoClosureDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:categoryID_Mod",
            "description": "Filter results by Category ID using the specified operation. Requires the field `OR:3:categoryID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:color_Mod",
            "description": "Filter results by Color using the specified operation. Requires the field `OR:3:color`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:commitDate_Mod",
            "description": "Filter results by Commit Date using the specified operation. Requires the field `OR:3:commitDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:condition_Mod",
            "description": "Filter results by Condition using the specified operation. Requires the field `OR:3:condition`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:currentApprovalStepID_Mod",
            "description": "Filter results by Current Approval Stage ID using the specified operation. Requires the field `OR:3:currentApprovalStepID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:customerID_Mod",
            "description": "Filter results by Customer ID using the specified operation. Requires the field `OR:3:customerID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:description_Mod",
            "description": "Filter results by Description using the specified operation. Requires the field `OR:3:description`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:enteredByID_Mod",
            "description": "Filter results by Entered By ID using the specified operation. Requires the field `OR:3:enteredByID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:entryDate_Mod",
            "description": "Filter results by Entry Date using the specified operation. Requires the field `OR:3:entryDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:extRefID_Mod",
            "description": "Filter results by External Reference ID using the specified operation. Requires the field `OR:3:extRefID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasDocuments_Mod",
            "description": "Filter results by Has Documents using the specified operation. Requires the field `OR:3:hasDocuments`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasMessages_Mod",
            "description": "Filter results by Has Messages using the specified operation. Requires the field `OR:3:hasMessages`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasNotes_Mod",
            "description": "Filter results by Has Notes using the specified operation. Requires the field `OR:3:hasNotes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasResolvables_Mod",
            "description": "Filter results by Has Resolvables using the specified operation. Requires the field `OR:3:hasResolvables`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasTimedNotifications_Mod",
            "description": "Filter results by Has Reminder Notifications using the specified operation. Requires the field `OR:3:hasTimedNotifications`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isComplete_Mod",
            "description": "Filter results by Is Complete using the specified operation. Requires the field `OR:3:isComplete`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isHelpDesk_Mod",
            "description": "Filter results by Is Help Desk using the specified operation. Requires the field `OR:3:isHelpDesk`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isReady_Mod",
            "description": "Filter results by Ready using the specified operation. Requires the field `OR:3:isReady`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:iterationID_Mod",
            "description": "Filter results by Iteration ID using the specified operation. Requires the field `OR:3:iterationID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastConditionNoteID_Mod",
            "description": "Filter results by Last Condition Note ID using the specified operation. Requires the field `OR:3:lastConditionNoteID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastNoteID_Mod",
            "description": "Filter results by Last Note ID using the specified operation. Requires the field `OR:3:lastNoteID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastUpdateDate_Mod",
            "description": "Filter results by Last Update Date using the specified operation. Requires the field `OR:3:lastUpdateDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastUpdatedByID_Mod",
            "description": "Filter results by Last Updated By ID using the specified operation. Requires the field `OR:3:lastUpdatedByID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:name_Mod",
            "description": "Filter results by Name using the specified operation. Requires the field `OR:3:name`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:opTaskType_Mod",
            "description": "Filter results by Issue Type using the specified operation. Requires the field `OR:3:opTaskType`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:ownerID_Mod",
            "description": "Filter results by Owner ID using the specified operation. Requires the field `OR:3:ownerID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedCompletionDate_Mod",
            "description": "Filter results by Planned Completion Date using the specified operation. Requires the field `OR:3:plannedCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedDurationMinutes_Mod",
            "description": "Filter results by Planned Duration Minutes using the specified operation. Requires the field `OR:3:plannedDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:plannedStartDate_Mod",
            "description": "Filter results by Planned Start Date using the specified operation. Requires the field `OR:3:plannedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:previousStatus_Mod",
            "description": "Filter results by Previous Status using the specified operation. Requires the field `OR:3:previousStatus`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:priority_Mod",
            "description": "Filter results by Priority using the specified operation. Requires the field `OR:3:priority`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:projectID_Mod",
            "description": "Filter results by Project ID using the specified operation. Requires the field `OR:3:projectID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:projectedDurationMinutes_Mod",
            "description": "Filter results by Projected Duration Minutes using the specified operation. Requires the field `OR:3:projectedDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:queueTopicID_Mod",
            "description": "Filter results by Queue Topic ID using the specified operation. Requires the field `OR:3:queueTopicID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:referenceNumber_Mod",
            "description": "Filter results by Reference Number using the specified operation. Requires the field `OR:3:referenceNumber`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:remainingDurationMinutes_Mod",
            "description": "Filter results by Remaining Duration Minutes using the specified operation. Requires the field `OR:3:remainingDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:resolveOpTaskID_Mod",
            "description": "Filter results by Resolve Issue ID using the specified operation. Requires the field `OR:3:resolveOpTaskID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:resolveProjectID_Mod",
            "description": "Filter results by Resolve Project ID using the specified operation. Requires the field `OR:3:resolveProjectID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:resolveTaskID_Mod",
            "description": "Filter results by Resolve Task ID using the specified operation. Requires the field `OR:3:resolveTaskID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:resolvingObjCode_Mod",
            "description": "Filter results by Resolving Object Type using the specified operation. Requires the field `OR:3:resolvingObjCode`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:resolvingObjID_Mod",
            "description": "Filter results by Resolving Object ID using the specified operation. Requires the field `OR:3:resolvingObjID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:roleID_Mod",
            "description": "Filter results by Role ID using the specified operation. Requires the field `OR:3:roleID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:securityRootID_Mod",
            "description": "Filter results by securityRootID using the specified operation. Requires the field `OR:3:securityRootID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:securityRootObjCode_Mod",
            "description": "Filter results by securityRootObjCode using the specified operation. Requires the field `OR:3:securityRootObjCode`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:severity_Mod",
            "description": "Filter results by Severity using the specified operation. Requires the field `OR:3:severity`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:sourceObjCode_Mod",
            "description": "Filter results by Source Object Type using the specified operation. Requires the field `OR:3:sourceObjCode`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:sourceObjID_Mod",
            "description": "Filter results by Source Object ID using the specified operation. Requires the field `OR:3:sourceObjID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:sourceTaskID_Mod",
            "description": "Filter results by Source Task ID using the specified operation. Requires the field `OR:3:sourceTaskID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:status_Mod",
            "description": "Filter results by Status using the specified operation. Requires the field `OR:3:status`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:statusUpdate_Mod",
            "description": "Filter results by Status Update using the specified operation. Requires the field `OR:3:statusUpdate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:storyBoardOrder_Mod",
            "description": "Filter results by storyBoardOrder using the specified operation. Requires the field `OR:3:storyBoardOrder`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:submittedByID_Mod",
            "description": "Filter results by Submitted By ID using the specified operation. Requires the field `OR:3:submittedByID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:teamID_Mod",
            "description": "Filter results by Team ID using the specified operation. Requires the field `OR:3:teamID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:url_Mod",
            "description": "Filter results by URL using the specified operation. Requires the field `OR:3:url`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:version_Mod",
            "description": "Filter results by Version using the specified operation. Requires the field `OR:3:version`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:workRequired_Mod",
            "description": "Filter results by Planned Hours using the specified operation. Requires the field `OR:3:workRequired`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:ID",
            "description": "Filter results by OR group 2 applied to ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualCompletionDate",
            "description": "Filter results by OR group 2 applied to Actual Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualCost",
            "description": "Filter results by OR group 2 applied to Actual Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualStartDate",
            "description": "Filter results by OR group 2 applied to Actual Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualWorkRequired",
            "description": "Filter results by OR group 2 applied to Actual Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:approvalCompletionDate",
            "description": "Filter results by OR group 2 applied to Approval Path Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:approvalProcessID",
            "description": "Filter results by OR group 2 applied to Approval Processes ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:approvalStartDate",
            "description": "Filter results by OR group 2 applied to Approval Path Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:assignedToID",
            "description": "Filter results by OR group 2 applied to Assigned To ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:auditTypes",
            "description": "Filter results by OR group 2 applied to Audit Types. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/12/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:autoClosureDate",
            "description": "Filter results by OR group 2 applied to Auto Closure Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:categoryID",
            "description": "Filter results by OR group 2 applied to Category ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:color",
            "description": "Filter results by OR group 2 applied to Color. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:commitDate",
            "description": "Filter results by OR group 2 applied to Commit Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:condition",
            "description": "Filter results by OR group 2 applied to Condition. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/20/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.ConditionEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:currentApprovalStepID",
            "description": "Filter results by OR group 2 applied to Current Approval Stage ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:customerID",
            "description": "Filter results by OR group 2 applied to Customer ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:description",
            "description": "Filter results by OR group 2 applied to Description. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:enteredByID",
            "description": "Filter results by OR group 2 applied to Entered By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:entryDate",
            "description": "Filter results by OR group 2 applied to Entry Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:extRefID",
            "description": "Filter results by OR group 2 applied to External Reference ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasDocuments",
            "description": "Filter results by OR group 2 applied to Has Documents. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasMessages",
            "description": "Filter results by OR group 2 applied to Has Messages. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasNotes",
            "description": "Filter results by OR group 2 applied to Has Notes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasResolvables",
            "description": "Filter results by OR group 2 applied to Has Resolvables. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasTimedNotifications",
            "description": "Filter results by OR group 2 applied to Has Reminder Notifications. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isComplete",
            "description": "Filter results by OR group 2 applied to Is Complete. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isHelpDesk",
            "description": "Filter results by OR group 2 applied to Is Help Desk. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isReady",
            "description": "Filter results by OR group 2 applied to Ready. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:iterationID",
            "description": "Filter results by OR group 2 applied to Iteration ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastConditionNoteID",
            "description": "Filter results by OR group 2 applied to Last Condition Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastNoteID",
            "description": "Filter results by OR group 2 applied to Last Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastUpdateDate",
            "description": "Filter results by OR group 2 applied to Last Update Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastUpdatedByID",
            "description": "Filter results by OR group 2 applied to Last Updated By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:name",
            "description": "Filter results by OR group 2 applied to Name. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:opTaskType",
            "description": "Filter results by OR group 2 applied to Issue Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/43/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:ownerID",
            "description": "Filter results by OR group 2 applied to Owner ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedCompletionDate",
            "description": "Filter results by OR group 2 applied to Planned Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedDurationMinutes",
            "description": "Filter results by OR group 2 applied to Planned Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedStartDate",
            "description": "Filter results by OR group 2 applied to Planned Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:previousStatus",
            "description": "Filter results by OR group 2 applied to Previous Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/48/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:priority",
            "description": "Filter results by OR group 2 applied to Priority. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/49/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:projectID",
            "description": "Filter results by OR group 2 applied to Project ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:projectedDurationMinutes",
            "description": "Filter results by OR group 2 applied to Projected Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:queueTopicID",
            "description": "Filter results by OR group 2 applied to Queue Topic ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:referenceNumber",
            "description": "Filter results by OR group 2 applied to Reference Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:remainingDurationMinutes",
            "description": "Filter results by OR group 2 applied to Remaining Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:resolveOpTaskID",
            "description": "Filter results by OR group 2 applied to Resolve Issue ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:resolveProjectID",
            "description": "Filter results by OR group 2 applied to Resolve Project ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:resolveTaskID",
            "description": "Filter results by OR group 2 applied to Resolve Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:resolvingObjCode",
            "description": "Filter results by OR group 2 applied to Resolving Object Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:resolvingObjID",
            "description": "Filter results by OR group 2 applied to Resolving Object ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:roleID",
            "description": "Filter results by OR group 2 applied to Role ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:securityRootID",
            "description": "Filter results by OR group 2 applied to securityRootID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:securityRootObjCode",
            "description": "Filter results by OR group 2 applied to securityRootObjCode. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:severity",
            "description": "Filter results by OR group 2 applied to Severity. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/66/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.SeverityEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:sourceObjCode",
            "description": "Filter results by OR group 2 applied to Source Object Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:sourceObjID",
            "description": "Filter results by OR group 2 applied to Source Object ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:sourceTaskID",
            "description": "Filter results by OR group 2 applied to Source Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:status",
            "description": "Filter results by OR group 2 applied to Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/48/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:statusUpdate",
            "description": "Filter results by OR group 2 applied to Status Update. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:storyBoardOrder",
            "description": "Filter results by OR group 2 applied to storyBoardOrder. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:submittedByID",
            "description": "Filter results by OR group 2 applied to Submitted By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:teamID",
            "description": "Filter results by OR group 2 applied to Team ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:url",
            "description": "Filter results by OR group 2 applied to URL. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:version",
            "description": "Filter results by OR group 2 applied to Version. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:workRequired",
            "description": "Filter results by OR group 2 applied to Planned Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:ID_Mod",
            "description": "Filter results by ID using the specified operation. Requires the field `OR:2:ID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualCompletionDate_Mod",
            "description": "Filter results by Actual Completion Date using the specified operation. Requires the field `OR:2:actualCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualCost_Mod",
            "description": "Filter results by Actual Cost using the specified operation. Requires the field `OR:2:actualCost`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualStartDate_Mod",
            "description": "Filter results by Actual Start Date using the specified operation. Requires the field `OR:2:actualStartDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:actualWorkRequired_Mod",
            "description": "Filter results by Actual Hours using the specified operation. Requires the field `OR:2:actualWorkRequired`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:approvalCompletionDate_Mod",
            "description": "Filter results by Approval Path Completion Date using the specified operation. Requires the field `OR:2:approvalCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:approvalProcessID_Mod",
            "description": "Filter results by Approval Processes ID using the specified operation. Requires the field `OR:2:approvalProcessID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:approvalStartDate_Mod",
            "description": "Filter results by Approval Path Start Date using the specified operation. Requires the field `OR:2:approvalStartDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:assignedToID_Mod",
            "description": "Filter results by Assigned To ID using the specified operation. Requires the field `OR:2:assignedToID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:auditTypes_Mod",
            "description": "Filter results by Audit Types using the specified operation. Requires the field `OR:2:auditTypes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:autoClosureDate_Mod",
            "description": "Filter results by Auto Closure Date using the specified operation. Requires the field `OR:2:autoClosureDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:categoryID_Mod",
            "description": "Filter results by Category ID using the specified operation. Requires the field `OR:2:categoryID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:color_Mod",
            "description": "Filter results by Color using the specified operation. Requires the field `OR:2:color`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:commitDate_Mod",
            "description": "Filter results by Commit Date using the specified operation. Requires the field `OR:2:commitDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:condition_Mod",
            "description": "Filter results by Condition using the specified operation. Requires the field `OR:2:condition`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:currentApprovalStepID_Mod",
            "description": "Filter results by Current Approval Stage ID using the specified operation. Requires the field `OR:2:currentApprovalStepID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:customerID_Mod",
            "description": "Filter results by Customer ID using the specified operation. Requires the field `OR:2:customerID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:description_Mod",
            "description": "Filter results by Description using the specified operation. Requires the field `OR:2:description`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:enteredByID_Mod",
            "description": "Filter results by Entered By ID using the specified operation. Requires the field `OR:2:enteredByID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:entryDate_Mod",
            "description": "Filter results by Entry Date using the specified operation. Requires the field `OR:2:entryDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:extRefID_Mod",
            "description": "Filter results by External Reference ID using the specified operation. Requires the field `OR:2:extRefID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasDocuments_Mod",
            "description": "Filter results by Has Documents using the specified operation. Requires the field `OR:2:hasDocuments`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasMessages_Mod",
            "description": "Filter results by Has Messages using the specified operation. Requires the field `OR:2:hasMessages`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasNotes_Mod",
            "description": "Filter results by Has Notes using the specified operation. Requires the field `OR:2:hasNotes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasResolvables_Mod",
            "description": "Filter results by Has Resolvables using the specified operation. Requires the field `OR:2:hasResolvables`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasTimedNotifications_Mod",
            "description": "Filter results by Has Reminder Notifications using the specified operation. Requires the field `OR:2:hasTimedNotifications`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isComplete_Mod",
            "description": "Filter results by Is Complete using the specified operation. Requires the field `OR:2:isComplete`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isHelpDesk_Mod",
            "description": "Filter results by Is Help Desk using the specified operation. Requires the field `OR:2:isHelpDesk`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isReady_Mod",
            "description": "Filter results by Ready using the specified operation. Requires the field `OR:2:isReady`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:iterationID_Mod",
            "description": "Filter results by Iteration ID using the specified operation. Requires the field `OR:2:iterationID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastConditionNoteID_Mod",
            "description": "Filter results by Last Condition Note ID using the specified operation. Requires the field `OR:2:lastConditionNoteID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastNoteID_Mod",
            "description": "Filter results by Last Note ID using the specified operation. Requires the field `OR:2:lastNoteID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastUpdateDate_Mod",
            "description": "Filter results by Last Update Date using the specified operation. Requires the field `OR:2:lastUpdateDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastUpdatedByID_Mod",
            "description": "Filter results by Last Updated By ID using the specified operation. Requires the field `OR:2:lastUpdatedByID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:name_Mod",
            "description": "Filter results by Name using the specified operation. Requires the field `OR:2:name`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:opTaskType_Mod",
            "description": "Filter results by Issue Type using the specified operation. Requires the field `OR:2:opTaskType`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:ownerID_Mod",
            "description": "Filter results by Owner ID using the specified operation. Requires the field `OR:2:ownerID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedCompletionDate_Mod",
            "description": "Filter results by Planned Completion Date using the specified operation. Requires the field `OR:2:plannedCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedDurationMinutes_Mod",
            "description": "Filter results by Planned Duration Minutes using the specified operation. Requires the field `OR:2:plannedDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:plannedStartDate_Mod",
            "description": "Filter results by Planned Start Date using the specified operation. Requires the field `OR:2:plannedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:previousStatus_Mod",
            "description": "Filter results by Previous Status using the specified operation. Requires the field `OR:2:previousStatus`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:priority_Mod",
            "description": "Filter results by Priority using the specified operation. Requires the field `OR:2:priority`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:projectID_Mod",
            "description": "Filter results by Project ID using the specified operation. Requires the field `OR:2:projectID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:projectedDurationMinutes_Mod",
            "description": "Filter results by Projected Duration Minutes using the specified operation. Requires the field `OR:2:projectedDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:queueTopicID_Mod",
            "description": "Filter results by Queue Topic ID using the specified operation. Requires the field `OR:2:queueTopicID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:referenceNumber_Mod",
            "description": "Filter results by Reference Number using the specified operation. Requires the field `OR:2:referenceNumber`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:remainingDurationMinutes_Mod",
            "description": "Filter results by Remaining Duration Minutes using the specified operation. Requires the field `OR:2:remainingDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:resolveOpTaskID_Mod",
            "description": "Filter results by Resolve Issue ID using the specified operation. Requires the field `OR:2:resolveOpTaskID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:resolveProjectID_Mod",
            "description": "Filter results by Resolve Project ID using the specified operation. Requires the field `OR:2:resolveProjectID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:resolveTaskID_Mod",
            "description": "Filter results by Resolve Task ID using the specified operation. Requires the field `OR:2:resolveTaskID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:resolvingObjCode_Mod",
            "description": "Filter results by Resolving Object Type using the specified operation. Requires the field `OR:2:resolvingObjCode`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:resolvingObjID_Mod",
            "description": "Filter results by Resolving Object ID using the specified operation. Requires the field `OR:2:resolvingObjID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:roleID_Mod",
            "description": "Filter results by Role ID using the specified operation. Requires the field `OR:2:roleID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:securityRootID_Mod",
            "description": "Filter results by securityRootID using the specified operation. Requires the field `OR:2:securityRootID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:securityRootObjCode_Mod",
            "description": "Filter results by securityRootObjCode using the specified operation. Requires the field `OR:2:securityRootObjCode`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:severity_Mod",
            "description": "Filter results by Severity using the specified operation. Requires the field `OR:2:severity`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:sourceObjCode_Mod",
            "description": "Filter results by Source Object Type using the specified operation. Requires the field `OR:2:sourceObjCode`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:sourceObjID_Mod",
            "description": "Filter results by Source Object ID using the specified operation. Requires the field `OR:2:sourceObjID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:sourceTaskID_Mod",
            "description": "Filter results by Source Task ID using the specified operation. Requires the field `OR:2:sourceTaskID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:status_Mod",
            "description": "Filter results by Status using the specified operation. Requires the field `OR:2:status`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:statusUpdate_Mod",
            "description": "Filter results by Status Update using the specified operation. Requires the field `OR:2:statusUpdate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:storyBoardOrder_Mod",
            "description": "Filter results by storyBoardOrder using the specified operation. Requires the field `OR:2:storyBoardOrder`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:submittedByID_Mod",
            "description": "Filter results by Submitted By ID using the specified operation. Requires the field `OR:2:submittedByID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:teamID_Mod",
            "description": "Filter results by Team ID using the specified operation. Requires the field `OR:2:teamID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:url_Mod",
            "description": "Filter results by URL using the specified operation. Requires the field `OR:2:url`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:version_Mod",
            "description": "Filter results by Version using the specified operation. Requires the field `OR:2:version`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:workRequired_Mod",
            "description": "Filter results by Planned Hours using the specified operation. Requires the field `OR:2:workRequired`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:ID",
            "description": "Filter results by OR group 1 applied to ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualCompletionDate",
            "description": "Filter results by OR group 1 applied to Actual Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualCost",
            "description": "Filter results by OR group 1 applied to Actual Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualStartDate",
            "description": "Filter results by OR group 1 applied to Actual Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualWorkRequired",
            "description": "Filter results by OR group 1 applied to Actual Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:approvalCompletionDate",
            "description": "Filter results by OR group 1 applied to Approval Path Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:approvalProcessID",
            "description": "Filter results by OR group 1 applied to Approval Processes ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:approvalStartDate",
            "description": "Filter results by OR group 1 applied to Approval Path Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:assignedToID",
            "description": "Filter results by OR group 1 applied to Assigned To ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:auditTypes",
            "description": "Filter results by OR group 1 applied to Audit Types. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/12/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:autoClosureDate",
            "description": "Filter results by OR group 1 applied to Auto Closure Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:categoryID",
            "description": "Filter results by OR group 1 applied to Category ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:color",
            "description": "Filter results by OR group 1 applied to Color. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:commitDate",
            "description": "Filter results by OR group 1 applied to Commit Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:condition",
            "description": "Filter results by OR group 1 applied to Condition. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/20/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.ConditionEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:currentApprovalStepID",
            "description": "Filter results by OR group 1 applied to Current Approval Stage ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:customerID",
            "description": "Filter results by OR group 1 applied to Customer ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:description",
            "description": "Filter results by OR group 1 applied to Description. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:enteredByID",
            "description": "Filter results by OR group 1 applied to Entered By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:entryDate",
            "description": "Filter results by OR group 1 applied to Entry Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:extRefID",
            "description": "Filter results by OR group 1 applied to External Reference ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasDocuments",
            "description": "Filter results by OR group 1 applied to Has Documents. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasMessages",
            "description": "Filter results by OR group 1 applied to Has Messages. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasNotes",
            "description": "Filter results by OR group 1 applied to Has Notes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasResolvables",
            "description": "Filter results by OR group 1 applied to Has Resolvables. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasTimedNotifications",
            "description": "Filter results by OR group 1 applied to Has Reminder Notifications. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isComplete",
            "description": "Filter results by OR group 1 applied to Is Complete. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isHelpDesk",
            "description": "Filter results by OR group 1 applied to Is Help Desk. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isReady",
            "description": "Filter results by OR group 1 applied to Ready. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:iterationID",
            "description": "Filter results by OR group 1 applied to Iteration ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastConditionNoteID",
            "description": "Filter results by OR group 1 applied to Last Condition Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastNoteID",
            "description": "Filter results by OR group 1 applied to Last Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastUpdateDate",
            "description": "Filter results by OR group 1 applied to Last Update Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastUpdatedByID",
            "description": "Filter results by OR group 1 applied to Last Updated By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:name",
            "description": "Filter results by OR group 1 applied to Name. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:opTaskType",
            "description": "Filter results by OR group 1 applied to Issue Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/43/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:ownerID",
            "description": "Filter results by OR group 1 applied to Owner ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedCompletionDate",
            "description": "Filter results by OR group 1 applied to Planned Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedDurationMinutes",
            "description": "Filter results by OR group 1 applied to Planned Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedStartDate",
            "description": "Filter results by OR group 1 applied to Planned Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:previousStatus",
            "description": "Filter results by OR group 1 applied to Previous Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/48/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:priority",
            "description": "Filter results by OR group 1 applied to Priority. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/49/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:projectID",
            "description": "Filter results by OR group 1 applied to Project ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:projectedDurationMinutes",
            "description": "Filter results by OR group 1 applied to Projected Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:queueTopicID",
            "description": "Filter results by OR group 1 applied to Queue Topic ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:referenceNumber",
            "description": "Filter results by OR group 1 applied to Reference Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:remainingDurationMinutes",
            "description": "Filter results by OR group 1 applied to Remaining Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:resolveOpTaskID",
            "description": "Filter results by OR group 1 applied to Resolve Issue ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:resolveProjectID",
            "description": "Filter results by OR group 1 applied to Resolve Project ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:resolveTaskID",
            "description": "Filter results by OR group 1 applied to Resolve Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:resolvingObjCode",
            "description": "Filter results by OR group 1 applied to Resolving Object Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:resolvingObjID",
            "description": "Filter results by OR group 1 applied to Resolving Object ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:roleID",
            "description": "Filter results by OR group 1 applied to Role ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:securityRootID",
            "description": "Filter results by OR group 1 applied to securityRootID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:securityRootObjCode",
            "description": "Filter results by OR group 1 applied to securityRootObjCode. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:severity",
            "description": "Filter results by OR group 1 applied to Severity. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/66/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.SeverityEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:sourceObjCode",
            "description": "Filter results by OR group 1 applied to Source Object Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:sourceObjID",
            "description": "Filter results by OR group 1 applied to Source Object ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:sourceTaskID",
            "description": "Filter results by OR group 1 applied to Source Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:status",
            "description": "Filter results by OR group 1 applied to Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/48/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:statusUpdate",
            "description": "Filter results by OR group 1 applied to Status Update. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:storyBoardOrder",
            "description": "Filter results by OR group 1 applied to storyBoardOrder. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:submittedByID",
            "description": "Filter results by OR group 1 applied to Submitted By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:teamID",
            "description": "Filter results by OR group 1 applied to Team ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:url",
            "description": "Filter results by OR group 1 applied to URL. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:version",
            "description": "Filter results by OR group 1 applied to Version. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:workRequired",
            "description": "Filter results by OR group 1 applied to Planned Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:ID_Mod",
            "description": "Filter results by ID using the specified operation. Requires the field `OR:1:ID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualCompletionDate_Mod",
            "description": "Filter results by Actual Completion Date using the specified operation. Requires the field `OR:1:actualCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualCost_Mod",
            "description": "Filter results by Actual Cost using the specified operation. Requires the field `OR:1:actualCost`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualStartDate_Mod",
            "description": "Filter results by Actual Start Date using the specified operation. Requires the field `OR:1:actualStartDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:actualWorkRequired_Mod",
            "description": "Filter results by Actual Hours using the specified operation. Requires the field `OR:1:actualWorkRequired`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:approvalCompletionDate_Mod",
            "description": "Filter results by Approval Path Completion Date using the specified operation. Requires the field `OR:1:approvalCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:approvalProcessID_Mod",
            "description": "Filter results by Approval Processes ID using the specified operation. Requires the field `OR:1:approvalProcessID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:approvalStartDate_Mod",
            "description": "Filter results by Approval Path Start Date using the specified operation. Requires the field `OR:1:approvalStartDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:assignedToID_Mod",
            "description": "Filter results by Assigned To ID using the specified operation. Requires the field `OR:1:assignedToID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:auditTypes_Mod",
            "description": "Filter results by Audit Types using the specified operation. Requires the field `OR:1:auditTypes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:autoClosureDate_Mod",
            "description": "Filter results by Auto Closure Date using the specified operation. Requires the field `OR:1:autoClosureDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:categoryID_Mod",
            "description": "Filter results by Category ID using the specified operation. Requires the field `OR:1:categoryID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:color_Mod",
            "description": "Filter results by Color using the specified operation. Requires the field `OR:1:color`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:commitDate_Mod",
            "description": "Filter results by Commit Date using the specified operation. Requires the field `OR:1:commitDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:condition_Mod",
            "description": "Filter results by Condition using the specified operation. Requires the field `OR:1:condition`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:currentApprovalStepID_Mod",
            "description": "Filter results by Current Approval Stage ID using the specified operation. Requires the field `OR:1:currentApprovalStepID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:customerID_Mod",
            "description": "Filter results by Customer ID using the specified operation. Requires the field `OR:1:customerID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:description_Mod",
            "description": "Filter results by Description using the specified operation. Requires the field `OR:1:description`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:enteredByID_Mod",
            "description": "Filter results by Entered By ID using the specified operation. Requires the field `OR:1:enteredByID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:entryDate_Mod",
            "description": "Filter results by Entry Date using the specified operation. Requires the field `OR:1:entryDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:extRefID_Mod",
            "description": "Filter results by External Reference ID using the specified operation. Requires the field `OR:1:extRefID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasDocuments_Mod",
            "description": "Filter results by Has Documents using the specified operation. Requires the field `OR:1:hasDocuments`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasMessages_Mod",
            "description": "Filter results by Has Messages using the specified operation. Requires the field `OR:1:hasMessages`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasNotes_Mod",
            "description": "Filter results by Has Notes using the specified operation. Requires the field `OR:1:hasNotes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasResolvables_Mod",
            "description": "Filter results by Has Resolvables using the specified operation. Requires the field `OR:1:hasResolvables`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasTimedNotifications_Mod",
            "description": "Filter results by Has Reminder Notifications using the specified operation. Requires the field `OR:1:hasTimedNotifications`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isComplete_Mod",
            "description": "Filter results by Is Complete using the specified operation. Requires the field `OR:1:isComplete`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isHelpDesk_Mod",
            "description": "Filter results by Is Help Desk using the specified operation. Requires the field `OR:1:isHelpDesk`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isReady_Mod",
            "description": "Filter results by Ready using the specified operation. Requires the field `OR:1:isReady`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:iterationID_Mod",
            "description": "Filter results by Iteration ID using the specified operation. Requires the field `OR:1:iterationID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastConditionNoteID_Mod",
            "description": "Filter results by Last Condition Note ID using the specified operation. Requires the field `OR:1:lastConditionNoteID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastNoteID_Mod",
            "description": "Filter results by Last Note ID using the specified operation. Requires the field `OR:1:lastNoteID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastUpdateDate_Mod",
            "description": "Filter results by Last Update Date using the specified operation. Requires the field `OR:1:lastUpdateDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastUpdatedByID_Mod",
            "description": "Filter results by Last Updated By ID using the specified operation. Requires the field `OR:1:lastUpdatedByID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:name_Mod",
            "description": "Filter results by Name using the specified operation. Requires the field `OR:1:name`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:opTaskType_Mod",
            "description": "Filter results by Issue Type using the specified operation. Requires the field `OR:1:opTaskType`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:ownerID_Mod",
            "description": "Filter results by Owner ID using the specified operation. Requires the field `OR:1:ownerID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedCompletionDate_Mod",
            "description": "Filter results by Planned Completion Date using the specified operation. Requires the field `OR:1:plannedCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedDurationMinutes_Mod",
            "description": "Filter results by Planned Duration Minutes using the specified operation. Requires the field `OR:1:plannedDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:plannedStartDate_Mod",
            "description": "Filter results by Planned Start Date using the specified operation. Requires the field `OR:1:plannedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:previousStatus_Mod",
            "description": "Filter results by Previous Status using the specified operation. Requires the field `OR:1:previousStatus`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:priority_Mod",
            "description": "Filter results by Priority using the specified operation. Requires the field `OR:1:priority`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:projectID_Mod",
            "description": "Filter results by Project ID using the specified operation. Requires the field `OR:1:projectID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:projectedDurationMinutes_Mod",
            "description": "Filter results by Projected Duration Minutes using the specified operation. Requires the field `OR:1:projectedDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:queueTopicID_Mod",
            "description": "Filter results by Queue Topic ID using the specified operation. Requires the field `OR:1:queueTopicID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:referenceNumber_Mod",
            "description": "Filter results by Reference Number using the specified operation. Requires the field `OR:1:referenceNumber`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:remainingDurationMinutes_Mod",
            "description": "Filter results by Remaining Duration Minutes using the specified operation. Requires the field `OR:1:remainingDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:resolveOpTaskID_Mod",
            "description": "Filter results by Resolve Issue ID using the specified operation. Requires the field `OR:1:resolveOpTaskID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:resolveProjectID_Mod",
            "description": "Filter results by Resolve Project ID using the specified operation. Requires the field `OR:1:resolveProjectID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:resolveTaskID_Mod",
            "description": "Filter results by Resolve Task ID using the specified operation. Requires the field `OR:1:resolveTaskID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:resolvingObjCode_Mod",
            "description": "Filter results by Resolving Object Type using the specified operation. Requires the field `OR:1:resolvingObjCode`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:resolvingObjID_Mod",
            "description": "Filter results by Resolving Object ID using the specified operation. Requires the field `OR:1:resolvingObjID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:roleID_Mod",
            "description": "Filter results by Role ID using the specified operation. Requires the field `OR:1:roleID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:securityRootID_Mod",
            "description": "Filter results by securityRootID using the specified operation. Requires the field `OR:1:securityRootID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:securityRootObjCode_Mod",
            "description": "Filter results by securityRootObjCode using the specified operation. Requires the field `OR:1:securityRootObjCode`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:severity_Mod",
            "description": "Filter results by Severity using the specified operation. Requires the field `OR:1:severity`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:sourceObjCode_Mod",
            "description": "Filter results by Source Object Type using the specified operation. Requires the field `OR:1:sourceObjCode`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:sourceObjID_Mod",
            "description": "Filter results by Source Object ID using the specified operation. Requires the field `OR:1:sourceObjID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:sourceTaskID_Mod",
            "description": "Filter results by Source Task ID using the specified operation. Requires the field `OR:1:sourceTaskID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:status_Mod",
            "description": "Filter results by Status using the specified operation. Requires the field `OR:1:status`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:statusUpdate_Mod",
            "description": "Filter results by Status Update using the specified operation. Requires the field `OR:1:statusUpdate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:storyBoardOrder_Mod",
            "description": "Filter results by storyBoardOrder using the specified operation. Requires the field `OR:1:storyBoardOrder`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:submittedByID_Mod",
            "description": "Filter results by Submitted By ID using the specified operation. Requires the field `OR:1:submittedByID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:teamID_Mod",
            "description": "Filter results by Team ID using the specified operation. Requires the field `OR:1:teamID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:url_Mod",
            "description": "Filter results by URL using the specified operation. Requires the field `OR:1:url`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:version_Mod",
            "description": "Filter results by Version using the specified operation. Requires the field `OR:1:version`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:workRequired_Mod",
            "description": "Filter results by Planned Hours using the specified operation. Requires the field `OR:1:workRequired`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "ID",
            "description": "Filter results by OR group 0 applied to ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "actualCompletionDate",
            "description": "Filter results by OR group 0 applied to Actual Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "actualCost",
            "description": "Filter results by OR group 0 applied to Actual Cost. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/4/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/double.json"
            }
          },
          {
            "in": "query",
            "name": "actualStartDate",
            "description": "Filter results by OR group 0 applied to Actual Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "actualWorkRequired",
            "description": "Filter results by OR group 0 applied to Actual Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "approvalCompletionDate",
            "description": "Filter results by OR group 0 applied to Approval Path Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "approvalProcessID",
            "description": "Filter results by OR group 0 applied to Approval Processes ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "approvalStartDate",
            "description": "Filter results by OR group 0 applied to Approval Path Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "assignedToID",
            "description": "Filter results by OR group 0 applied to Assigned To ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "auditTypes",
            "description": "Filter results by OR group 0 applied to Audit Types. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/12/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].com.attask.common.constants.AuditTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "autoClosureDate",
            "description": "Filter results by OR group 0 applied to Auto Closure Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "categoryID",
            "description": "Filter results by OR group 0 applied to Category ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "color",
            "description": "Filter results by OR group 0 applied to Color. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "commitDate",
            "description": "Filter results by OR group 0 applied to Commit Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "condition",
            "description": "Filter results by OR group 0 applied to Condition. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/20/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.ConditionEnum.json"
            }
          },
          {
            "in": "query",
            "name": "currentApprovalStepID",
            "description": "Filter results by OR group 0 applied to Current Approval Stage ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "customerID",
            "description": "Filter results by OR group 0 applied to Customer ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "description",
            "description": "Filter results by OR group 0 applied to Description. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "enteredByID",
            "description": "Filter results by OR group 0 applied to Entered By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "entryDate",
            "description": "Filter results by OR group 0 applied to Entry Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "extRefID",
            "description": "Filter results by OR group 0 applied to External Reference ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "hasDocuments",
            "description": "Filter results by OR group 0 applied to Has Documents. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "hasMessages",
            "description": "Filter results by OR group 0 applied to Has Messages. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "hasNotes",
            "description": "Filter results by OR group 0 applied to Has Notes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "hasResolvables",
            "description": "Filter results by OR group 0 applied to Has Resolvables. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "hasTimedNotifications",
            "description": "Filter results by OR group 0 applied to Has Reminder Notifications. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "isComplete",
            "description": "Filter results by OR group 0 applied to Is Complete. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "isHelpDesk",
            "description": "Filter results by OR group 0 applied to Is Help Desk. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "isReady",
            "description": "Filter results by OR group 0 applied to Ready. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "iterationID",
            "description": "Filter results by OR group 0 applied to Iteration ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "lastConditionNoteID",
            "description": "Filter results by OR group 0 applied to Last Condition Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "lastNoteID",
            "description": "Filter results by OR group 0 applied to Last Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "lastUpdateDate",
            "description": "Filter results by OR group 0 applied to Last Update Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "lastUpdatedByID",
            "description": "Filter results by OR group 0 applied to Last Updated By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "name",
            "description": "Filter results by OR group 0 applied to Name. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "opTaskType",
            "description": "Filter results by OR group 0 applied to Issue Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/43/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskTypeEnum.json"
            }
          },
          {
            "in": "query",
            "name": "ownerID",
            "description": "Filter results by OR group 0 applied to Owner ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "plannedCompletionDate",
            "description": "Filter results by OR group 0 applied to Planned Completion Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "plannedDurationMinutes",
            "description": "Filter results by OR group 0 applied to Planned Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "plannedStartDate",
            "description": "Filter results by OR group 0 applied to Planned Start Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "previousStatus",
            "description": "Filter results by OR group 0 applied to Previous Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/48/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "priority",
            "description": "Filter results by OR group 0 applied to Priority. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/49/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.TimelinePriorityEnum.json"
            }
          },
          {
            "in": "query",
            "name": "projectID",
            "description": "Filter results by OR group 0 applied to Project ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "projectedDurationMinutes",
            "description": "Filter results by OR group 0 applied to Projected Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "queueTopicID",
            "description": "Filter results by OR group 0 applied to Queue Topic ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "referenceNumber",
            "description": "Filter results by OR group 0 applied to Reference Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "remainingDurationMinutes",
            "description": "Filter results by OR group 0 applied to Remaining Duration Minutes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "resolveOpTaskID",
            "description": "Filter results by OR group 0 applied to Resolve Issue ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "resolveProjectID",
            "description": "Filter results by OR group 0 applied to Resolve Project ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "resolveTaskID",
            "description": "Filter results by OR group 0 applied to Resolve Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "resolvingObjCode",
            "description": "Filter results by OR group 0 applied to Resolving Object Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "resolvingObjID",
            "description": "Filter results by OR group 0 applied to Resolving Object ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "roleID",
            "description": "Filter results by OR group 0 applied to Role ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "securityRootID",
            "description": "Filter results by OR group 0 applied to securityRootID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "securityRootObjCode",
            "description": "Filter results by OR group 0 applied to securityRootObjCode. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "severity",
            "description": "Filter results by OR group 0 applied to Severity. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/66/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.com.attask.common.constants.SeverityEnum.json"
            }
          },
          {
            "in": "query",
            "name": "sourceObjCode",
            "description": "Filter results by OR group 0 applied to Source Object Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "sourceObjID",
            "description": "Filter results by OR group 0 applied to Source Object ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "sourceTaskID",
            "description": "Filter results by OR group 0 applied to Source Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "Filter results by OR group 0 applied to Status. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/48/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.com.attask.common.constants.OpTaskStatusEnum.json"
            }
          },
          {
            "in": "query",
            "name": "statusUpdate",
            "description": "Filter results by OR group 0 applied to Status Update. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "storyBoardOrder",
            "description": "Filter results by OR group 0 applied to storyBoardOrder. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "submittedByID",
            "description": "Filter results by OR group 0 applied to Submitted By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "teamID",
            "description": "Filter results by OR group 0 applied to Team ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "url",
            "description": "Filter results by OR group 0 applied to URL. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "version",
            "description": "Filter results by OR group 0 applied to Version. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "workRequired",
            "description": "Filter results by OR group 0 applied to Planned Hours. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "ID_Mod",
            "description": "Filter results by ID using the specified operation. Requires the field `ID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "actualCompletionDate_Mod",
            "description": "Filter results by Actual Completion Date using the specified operation. Requires the field `actualCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "actualCost_Mod",
            "description": "Filter results by Actual Cost using the specified operation. Requires the field `actualCost`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "actualStartDate_Mod",
            "description": "Filter results by Actual Start Date using the specified operation. Requires the field `actualStartDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "actualWorkRequired_Mod",
            "description": "Filter results by Actual Hours using the specified operation. Requires the field `actualWorkRequired`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "approvalCompletionDate_Mod",
            "description": "Filter results by Approval Path Completion Date using the specified operation. Requires the field `approvalCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "approvalProcessID_Mod",
            "description": "Filter results by Approval Processes ID using the specified operation. Requires the field `approvalProcessID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "approvalStartDate_Mod",
            "description": "Filter results by Approval Path Start Date using the specified operation. Requires the field `approvalStartDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "assignedToID_Mod",
            "description": "Filter results by Assigned To ID using the specified operation. Requires the field `assignedToID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "auditTypes_Mod",
            "description": "Filter results by Audit Types using the specified operation. Requires the field `auditTypes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "autoClosureDate_Mod",
            "description": "Filter results by Auto Closure Date using the specified operation. Requires the field `autoClosureDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "categoryID_Mod",
            "description": "Filter results by Category ID using the specified operation. Requires the field `categoryID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "color_Mod",
            "description": "Filter results by Color using the specified operation. Requires the field `color`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "commitDate_Mod",
            "description": "Filter results by Commit Date using the specified operation. Requires the field `commitDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "condition_Mod",
            "description": "Filter results by Condition using the specified operation. Requires the field `condition`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "currentApprovalStepID_Mod",
            "description": "Filter results by Current Approval Stage ID using the specified operation. Requires the field `currentApprovalStepID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "customerID_Mod",
            "description": "Filter results by Customer ID using the specified operation. Requires the field `customerID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "description_Mod",
            "description": "Filter results by Description using the specified operation. Requires the field `description`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "enteredByID_Mod",
            "description": "Filter results by Entered By ID using the specified operation. Requires the field `enteredByID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "entryDate_Mod",
            "description": "Filter results by Entry Date using the specified operation. Requires the field `entryDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "extRefID_Mod",
            "description": "Filter results by External Reference ID using the specified operation. Requires the field `extRefID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "hasDocuments_Mod",
            "description": "Filter results by Has Documents using the specified operation. Requires the field `hasDocuments`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "hasMessages_Mod",
            "description": "Filter results by Has Messages using the specified operation. Requires the field `hasMessages`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "hasNotes_Mod",
            "description": "Filter results by Has Notes using the specified operation. Requires the field `hasNotes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "hasResolvables_Mod",
            "description": "Filter results by Has Resolvables using the specified operation. Requires the field `hasResolvables`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "hasTimedNotifications_Mod",
            "description": "Filter results by Has Reminder Notifications using the specified operation. Requires the field `hasTimedNotifications`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "isComplete_Mod",
            "description": "Filter results by Is Complete using the specified operation. Requires the field `isComplete`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "isHelpDesk_Mod",
            "description": "Filter results by Is Help Desk using the specified operation. Requires the field `isHelpDesk`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "isReady_Mod",
            "description": "Filter results by Ready using the specified operation. Requires the field `isReady`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "iterationID_Mod",
            "description": "Filter results by Iteration ID using the specified operation. Requires the field `iterationID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "lastConditionNoteID_Mod",
            "description": "Filter results by Last Condition Note ID using the specified operation. Requires the field `lastConditionNoteID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "lastNoteID_Mod",
            "description": "Filter results by Last Note ID using the specified operation. Requires the field `lastNoteID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "lastUpdateDate_Mod",
            "description": "Filter results by Last Update Date using the specified operation. Requires the field `lastUpdateDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "lastUpdatedByID_Mod",
            "description": "Filter results by Last Updated By ID using the specified operation. Requires the field `lastUpdatedByID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "name_Mod",
            "description": "Filter results by Name using the specified operation. Requires the field `name`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "opTaskType_Mod",
            "description": "Filter results by Issue Type using the specified operation. Requires the field `opTaskType`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "ownerID_Mod",
            "description": "Filter results by Owner ID using the specified operation. Requires the field `ownerID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "plannedCompletionDate_Mod",
            "description": "Filter results by Planned Completion Date using the specified operation. Requires the field `plannedCompletionDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "plannedDurationMinutes_Mod",
            "description": "Filter results by Planned Duration Minutes using the specified operation. Requires the field `plannedDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "plannedStartDate_Mod",
            "description": "Filter results by Planned Start Date using the specified operation. Requires the field `plannedStartDate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "previousStatus_Mod",
            "description": "Filter results by Previous Status using the specified operation. Requires the field `previousStatus`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "priority_Mod",
            "description": "Filter results by Priority using the specified operation. Requires the field `priority`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "projectID_Mod",
            "description": "Filter results by Project ID using the specified operation. Requires the field `projectID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "projectedDurationMinutes_Mod",
            "description": "Filter results by Projected Duration Minutes using the specified operation. Requires the field `projectedDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "queueTopicID_Mod",
            "description": "Filter results by Queue Topic ID using the specified operation. Requires the field `queueTopicID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "referenceNumber_Mod",
            "description": "Filter results by Reference Number using the specified operation. Requires the field `referenceNumber`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "remainingDurationMinutes_Mod",
            "description": "Filter results by Remaining Duration Minutes using the specified operation. Requires the field `remainingDurationMinutes`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "resolveOpTaskID_Mod",
            "description": "Filter results by Resolve Issue ID using the specified operation. Requires the field `resolveOpTaskID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "resolveProjectID_Mod",
            "description": "Filter results by Resolve Project ID using the specified operation. Requires the field `resolveProjectID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "resolveTaskID_Mod",
            "description": "Filter results by Resolve Task ID using the specified operation. Requires the field `resolveTaskID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "resolvingObjCode_Mod",
            "description": "Filter results by Resolving Object Type using the specified operation. Requires the field `resolvingObjCode`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "resolvingObjID_Mod",
            "description": "Filter results by Resolving Object ID using the specified operation. Requires the field `resolvingObjID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "roleID_Mod",
            "description": "Filter results by Role ID using the specified operation. Requires the field `roleID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "securityRootID_Mod",
            "description": "Filter results by securityRootID using the specified operation. Requires the field `securityRootID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "securityRootObjCode_Mod",
            "description": "Filter results by securityRootObjCode using the specified operation. Requires the field `securityRootObjCode`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "severity_Mod",
            "description": "Filter results by Severity using the specified operation. Requires the field `severity`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "sourceObjCode_Mod",
            "description": "Filter results by Source Object Type using the specified operation. Requires the field `sourceObjCode`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "sourceObjID_Mod",
            "description": "Filter results by Source Object ID using the specified operation. Requires the field `sourceObjID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "sourceTaskID_Mod",
            "description": "Filter results by Source Task ID using the specified operation. Requires the field `sourceTaskID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "status_Mod",
            "description": "Filter results by Status using the specified operation. Requires the field `status`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "statusUpdate_Mod",
            "description": "Filter results by Status Update using the specified operation. Requires the field `statusUpdate`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "storyBoardOrder_Mod",
            "description": "Filter results by storyBoardOrder using the specified operation. Requires the field `storyBoardOrder`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "submittedByID_Mod",
            "description": "Filter results by Submitted By ID using the specified operation. Requires the field `submittedByID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "teamID_Mod",
            "description": "Filter results by Team ID using the specified operation. Requires the field `teamID`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "url_Mod",
            "description": "Filter results by URL using the specified operation. Requires the field `url`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "version_Mod",
            "description": "Filter results by Version using the specified operation. Requires the field `version`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "workRequired_Mod",
            "description": "Filter results by Planned Hours using the specified operation. Requires the field `workRequired`.",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/68/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "ID_Sort",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false,
            "description": "ID"
          },
          {
            "in": "query",
            "name": "accessorIDs_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "accessorIDs"
          },
          {
            "in": "query",
            "name": "actualCompletionDate_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Actual Completion Date"
          },
          {
            "in": "query",
            "name": "actualCost_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Actual Cost"
          },
          {
            "in": "query",
            "name": "actualStartDate_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Actual Start Date"
          },
          {
            "in": "query",
            "name": "actualWorkRequired_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Actual Hours"
          },
          {
            "in": "query",
            "name": "actualWorkRequiredExpression_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "actualWorkRequiredExpression"
          },
          {
            "in": "query",
            "name": "ageRangeAsString_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "ageRangeAsString"
          },
          {
            "in": "query",
            "name": "approvalCompletionDate_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Approval Path Completion Date"
          },
          {
            "in": "query",
            "name": "approvalEstStartDate_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Approval Estimated Start Date"
          },
          {
            "in": "query",
            "name": "approvalPlannedStartDate_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Approval Planned Start Date"
          },
          {
            "in": "query",
            "name": "approvalPlannedStartDay_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "approvalPlannedStartDay"
          },
          {
            "in": "query",
            "name": "approvalProcessID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Approval Processes ID"
          },
          {
            "in": "query",
            "name": "approvalProjectedStartDate_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Approval Projected Start Date"
          },
          {
            "in": "query",
            "name": "approvalStartDate_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Approval Path Start Date"
          },
          {
            "in": "query",
            "name": "approversString_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "approversString"
          },
          {
            "in": "query",
            "name": "assignedToID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Assigned To ID"
          },
          {
            "in": "query",
            "name": "auditTypes_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Audit Types"
          },
          {
            "in": "query",
            "name": "autoClosureDate_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Auto Closure Date"
          },
          {
            "in": "query",
            "name": "backlogOrder_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Order"
          },
          {
            "in": "query",
            "name": "backlogParent_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Parent"
          },
          {
            "in": "query",
            "name": "canStart_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Can Start"
          },
          {
            "in": "query",
            "name": "categoryID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Category ID"
          },
          {
            "in": "query",
            "name": "color_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Color"
          },
          {
            "in": "query",
            "name": "commitDate_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Commit Date"
          },
          {
            "in": "query",
            "name": "commitDateRange_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "commitDateRange"
          },
          {
            "in": "query",
            "name": "condition_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Condition"
          },
          {
            "in": "query",
            "name": "currentApprovalStepID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Current Approval Stage ID"
          },
          {
            "in": "query",
            "name": "currentStatusDuration_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "currentStatusDuration"
          },
          {
            "in": "query",
            "name": "customerID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Customer ID"
          },
          {
            "in": "query",
            "name": "description_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Description"
          },
          {
            "in": "query",
            "name": "dueDate_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Due Date"
          },
          {
            "in": "query",
            "name": "durationMinutes_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Duration in Minutes"
          },
          {
            "in": "query",
            "name": "enteredByID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Entered By ID"
          },
          {
            "in": "query",
            "name": "entryDate_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Entry Date"
          },
          {
            "in": "query",
            "name": "estimate_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Estimate"
          },
          {
            "in": "query",
            "name": "extRefID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "External Reference ID"
          },
          {
            "in": "query",
            "name": "firstResponse_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "First Response"
          },
          {
            "in": "query",
            "name": "hasDocuments_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Has Documents"
          },
          {
            "in": "query",
            "name": "hasMessages_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Has Messages"
          },
          {
            "in": "query",
            "name": "hasNotes_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Has Notes"
          },
          {
            "in": "query",
            "name": "hasResolvables_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Has Resolvables"
          },
          {
            "in": "query",
            "name": "hasTimedNotifications_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Has Reminder Notifications"
          },
          {
            "in": "query",
            "name": "howOld_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Age"
          },
          {
            "in": "query",
            "name": "isComplete_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Is Complete"
          },
          {
            "in": "query",
            "name": "isHelpDesk_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Is Help Desk"
          },
          {
            "in": "query",
            "name": "isReady_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Ready"
          },
          {
            "in": "query",
            "name": "iterationID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Iteration ID"
          },
          {
            "in": "query",
            "name": "lastConditionNoteID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Last Condition Note ID"
          },
          {
            "in": "query",
            "name": "lastNoteID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Last Note ID"
          },
          {
            "in": "query",
            "name": "lastUpdateDate_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Last Update Date"
          },
          {
            "in": "query",
            "name": "lastUpdatedByID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Last Updated By ID"
          },
          {
            "in": "query",
            "name": "name_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Name"
          },
          {
            "in": "query",
            "name": "numberOfChildren_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Number of Children"
          },
          {
            "in": "query",
            "name": "opTaskType_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Issue Type"
          },
          {
            "in": "query",
            "name": "opTaskTypeLabel_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "opTaskTypeLabel"
          },
          {
            "in": "query",
            "name": "ownerID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Owner ID"
          },
          {
            "in": "query",
            "name": "plannedCompletionDate_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Planned Completion Date"
          },
          {
            "in": "query",
            "name": "plannedDateAlignment_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Planned Date Alignment"
          },
          {
            "in": "query",
            "name": "plannedDurationMinutes_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Planned Duration Minutes"
          },
          {
            "in": "query",
            "name": "plannedHoursAlignment_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Planned Hours Alignment"
          },
          {
            "in": "query",
            "name": "plannedStartDate_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Planned Start Date"
          },
          {
            "in": "query",
            "name": "previousStatus_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Previous Status"
          },
          {
            "in": "query",
            "name": "priority_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Priority"
          },
          {
            "in": "query",
            "name": "priorityColor_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "priorityColor"
          },
          {
            "in": "query",
            "name": "projectID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Project ID"
          },
          {
            "in": "query",
            "name": "projectedCompletionDate_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Projected Completion Date"
          },
          {
            "in": "query",
            "name": "projectedDurationMinutes_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Projected Duration Minutes"
          },
          {
            "in": "query",
            "name": "projectedStartDate_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Projected Start Date"
          },
          {
            "in": "query",
            "name": "queueTopicID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Queue Topic ID"
          },
          {
            "in": "query",
            "name": "referenceNumber_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Reference Number"
          },
          {
            "in": "query",
            "name": "referenceObjCode_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "referenceObjCode"
          },
          {
            "in": "query",
            "name": "referenceObjID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "referenceObjID"
          },
          {
            "in": "query",
            "name": "rejectionIssueID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Rejection Issue ID"
          },
          {
            "in": "query",
            "name": "remainingDurationMinutes_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Remaining Duration Minutes"
          },
          {
            "in": "query",
            "name": "resolutionTime_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Resolution time"
          },
          {
            "in": "query",
            "name": "resolveOpTaskID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Resolve Issue ID"
          },
          {
            "in": "query",
            "name": "resolveProjectID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Resolve Project ID"
          },
          {
            "in": "query",
            "name": "resolveTaskID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Resolve Task ID"
          },
          {
            "in": "query",
            "name": "resolvingObjCode_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Resolving Object Type"
          },
          {
            "in": "query",
            "name": "resolvingObjID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Resolving Object ID"
          },
          {
            "in": "query",
            "name": "roleID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Role ID"
          },
          {
            "in": "query",
            "name": "securityRootID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "securityRootID"
          },
          {
            "in": "query",
            "name": "securityRootObjCode_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "securityRootObjCode"
          },
          {
            "in": "query",
            "name": "severity_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Severity"
          },
          {
            "in": "query",
            "name": "showCommitDate_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "showCommitDate"
          },
          {
            "in": "query",
            "name": "showCondition_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "showCondition"
          },
          {
            "in": "query",
            "name": "showStatus_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "showStatus"
          },
          {
            "in": "query",
            "name": "sourceObjCode_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Source Object Type"
          },
          {
            "in": "query",
            "name": "sourceObjID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Source Object ID"
          },
          {
            "in": "query",
            "name": "sourceTaskID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Source Task ID"
          },
          {
            "in": "query",
            "name": "status_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Status"
          },
          {
            "in": "query",
            "name": "statusUpdate_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Status Update"
          },
          {
            "in": "query",
            "name": "storyBoardOrder_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "storyBoardOrder"
          },
          {
            "in": "query",
            "name": "submittedByID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Submitted By ID"
          },
          {
            "in": "query",
            "name": "teamID_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Team ID"
          },
          {
            "in": "query",
            "name": "url_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "URL"
          },
          {
            "in": "query",
            "name": "version_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Version"
          },
          {
            "in": "query",
            "name": "workRequired_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Planned Hours"
          },
          {
            "in": "query",
            "name": "workRequiredExpression_Sort",
            "schema": {
              "$ref": "#/paths/~1optask~1search/get/parameters/671/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "workRequiredExpression"
          },
          {
            "$ref": "#/paths/~1optask/post/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/fields.yml"
          },
          {
            "in": "query",
            "name": "$$LIMIT",
            "schema": {
              "type": "integer",
              "maximum": 2000,
              "minimum": 1,
              "default": 100
            },
            "description": "Max number of results to include in the response."
          },
          {
            "in": "query",
            "name": "$$FIRST",
            "schema": {
              "type": "integer"
            },
            "description": "The first result to include in the response. Used with $$LIMIT and _Sort for pagination."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/paths/~1optask~1report/get/parameters/1/content/application~1json/schema",
                            "x-miro": "swagger/v10.0/schemas/resources/OPTASK/read.json"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/acceptWork": {
      "put": {
        "operationId": "putOPTASKActionacceptWorkWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          }
        ],
        "summary": "Optask (Issue) acceptWork is used to accept work that has been assigned to an Issue object.",
        "description": "Performs the acceptWork action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {}
                  },
                  {
                    "type": "object",
                    "properties": {
                      "userID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "username": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "password": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "auditNote": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "auditUserIDs": {
                        "$ref": "#/paths/~1optask/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "sendNoteAsEmail": {
                        "$ref": "#/paths/~1optask/put/parameters/7/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "objCode": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "userIDs": {
                        "$ref": "#/paths/~1optask/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "roleIDs": {
                        "$ref": "#/paths/~1optask/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "teamID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "project": {
                        "$ref": "#/paths/~1optask/put/parameters/13/schema",
                        "x-miro": "swagger/v10.0/schemas/resources/PROJ/write.json"
                      },
                      "exchangeRate": {
                        "$ref": "#/paths/~1optask/put/parameters/14/schema",
                        "x-miro": "swagger/v10.0/schemas/resources/EXRATE/write.json"
                      },
                      "options": {
                        "$ref": "#/paths/~1optask/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "task": {
                        "$ref": "#/paths/~1optask/put/parameters/16/schema",
                        "x-miro": "swagger/v10.0/schemas/resources/TASK/write.json"
                      },
                      "options": {
                        "$ref": "#/paths/~1optask/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "linkedObjectID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "integrationType": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "URL": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "params": {
                        "$ref": "#/paths/~1optask/put/parameters/6/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "status": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "assignmentID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "projectID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "projectID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "parentID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "noteText": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "commitDate": {
                        "$ref": "#/paths/~1optask/post/parameters/3/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "userID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "linkedObjectID": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "integrationType": {
                        "$ref": "#/paths/~1optask/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  }
                ]
              },
              "examples": {
                "putOPTASKActionacceptWorkWithId": {
                  "value": {}
                },
                "putOPTASKActionapproveApprovalWithId": {
                  "value": {}
                },
                "putOPTASKActionassignWithId": {
                  "value": {}
                },
                "putOPTASKActionassignMultipleWithId": {
                  "value": {}
                },
                "putOPTASKActioncalculateDataExtensionWithId": {
                  "value": {}
                },
                "putOPTASKActionconvertToProjectWithId": {
                  "value": {}
                },
                "putOPTASKActionconvertToTaskWithId": {
                  "value": {}
                },
                "putOPTASKActionlinkExternalObjectWithId": {
                  "value": {}
                },
                "putOPTASKActionmarkDoneWithId": {
                  "value": {}
                },
                "putOPTASKActionmarkNotDoneWithId": {
                  "value": {}
                },
                "putOPTASKActionmoveWithId": {
                  "value": {}
                },
                "putOPTASKActionmoveToTaskWithId": {
                  "value": {}
                },
                "putOPTASKActionrecallApprovalWithId": {
                  "value": {}
                },
                "putOPTASKActionrejectApprovalWithId": {
                  "value": {}
                },
                "putOPTASKActionreplyToAssignmentWithId": {
                  "value": {}
                },
                "putOPTASKActionunacceptWorkWithId": {
                  "value": {}
                },
                "putOPTASKActionunassignWithId": {
                  "value": {}
                },
                "putOPTASKActionunlinkExternalObjectWithId": {
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "examples": {
                  "putOPTASKActionacceptWorkWithId": {
                    "value": {}
                  },
                  "putOPTASKActionapproveApprovalWithId": {
                    "value": {}
                  },
                  "putOPTASKActionassignWithId": {
                    "value": {}
                  },
                  "putOPTASKActionassignMultipleWithId": {
                    "value": {}
                  },
                  "putOPTASKActioncalculateDataExtensionWithId": {
                    "value": {}
                  },
                  "putOPTASKActionconvertToProjectWithId": {
                    "value": {}
                  },
                  "putOPTASKActionconvertToTaskWithId": {
                    "value": {}
                  },
                  "putOPTASKActionlinkExternalObjectWithId": {
                    "value": {}
                  },
                  "putOPTASKActionmarkDoneWithId": {
                    "value": {}
                  },
                  "putOPTASKActionmarkNotDoneWithId": {
                    "value": {}
                  },
                  "putOPTASKActionmoveWithId": {
                    "value": {}
                  },
                  "putOPTASKActionmoveToTaskWithId": {
                    "value": {}
                  },
                  "putOPTASKActionrecallApprovalWithId": {
                    "value": {}
                  },
                  "putOPTASKActionrejectApprovalWithId": {
                    "value": {}
                  },
                  "putOPTASKActionreplyToAssignmentWithId": {
                    "value": {}
                  },
                  "putOPTASKActionunacceptWorkWithId": {
                    "value": {}
                  },
                  "putOPTASKActionunassignWithId": {
                    "value": {}
                  },
                  "putOPTASKActionunlinkExternalObjectWithId": {
                    "value": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/optask/{ID}/acceptWork": {
      "put": {
        "operationId": "putOPTASKActionacceptWorkWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          }
        ],
        "summary": "Issue acceptWork",
        "description": "Performs the acceptWork action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/approveApproval": {
      "put": {
        "operationId": "putOPTASKActionapproveApprovalWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "userID",
            "description": "userID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "username",
            "description": "username",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "password",
            "description": "password",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "auditNote",
            "description": "auditNote",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "auditUserIDs",
            "description": "auditUserIDs",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "sendNoteAsEmail",
            "description": "sendNoteAsEmail",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          }
        ],
        "summary": "Optask (Issue) approveApproval by Issue is commonly used to approve an approval that is associated with an Issue by using the userID parameter, the approvalUsername parameter, the approvalPassword parameter, the auditNote parameter, the AuditUserIDs parameter, or the sendNoteAsEmail parameter.",
        "description": "Performs the approveApproval action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "username": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "password": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "auditNote": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "auditUserIDs": {
                    "$ref": "#/paths/~1optask/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "sendNoteAsEmail": {
                    "$ref": "#/paths/~1optask/put/parameters/7/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/{ID}/approveApproval": {
      "put": {
        "operationId": "putOPTASKActionapproveApprovalWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "userID",
            "description": "userID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "username",
            "description": "username",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "password",
            "description": "password",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "auditNote",
            "description": "auditNote",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "auditUserIDs",
            "description": "auditUserIDs",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "sendNoteAsEmail",
            "description": "sendNoteAsEmail",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          }
        ],
        "summary": "Issue approveApproval",
        "description": "Performs the approveApproval action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "username": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "password": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "auditNote": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "auditUserIDs": {
                    "$ref": "#/paths/~1optask/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "sendNoteAsEmail": {
                    "$ref": "#/paths/~1optask/put/parameters/7/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/assign": {
      "put": {
        "operationId": "putOPTASKActionassignWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "objID",
            "description": "objID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "objCode",
            "description": "objCode",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Optask (Issue) assign allows you to assign an Issue object to a particular user.",
        "description": "Performs the assign action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "objID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "objCode": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/{ID}/assign": {
      "put": {
        "operationId": "putOPTASKActionassignWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "objID",
            "description": "objID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "objCode",
            "description": "objCode",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Issue assign",
        "description": "Performs the assign action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "objID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "objCode": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/assignMultiple": {
      "put": {
        "operationId": "putOPTASKActionassignMultipleWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "userIDs",
            "description": "userIDs",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "roleIDs",
            "description": "roleIDs",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "teamID",
            "description": "teamID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Issue assignMultiple allows you to assign an Issue object to groups of users, like teams.",
        "description": "Performs the assignMultiple action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userIDs": {
                    "$ref": "#/paths/~1optask/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "roleIDs": {
                    "$ref": "#/paths/~1optask/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "teamID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/{ID}/assignMultiple": {
      "put": {
        "operationId": "putOPTASKActionassignMultipleWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "userIDs",
            "description": "userIDs",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "roleIDs",
            "description": "roleIDs",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "teamID",
            "description": "teamID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Issue assignMultiple",
        "description": "Performs the assignMultiple action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userIDs": {
                    "$ref": "#/paths/~1optask/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "roleIDs": {
                    "$ref": "#/paths/~1optask/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "teamID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/calculateDataExtension": {
      "put": {
        "operationId": "putOPTASKActioncalculateDataExtensionWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          }
        ],
        "summary": "Issue calculateDataExtension",
        "description": "Performs the calculateDataExtension action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/{ID}/calculateDataExtension": {
      "put": {
        "operationId": "putOPTASKActioncalculateDataExtensionWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          }
        ],
        "summary": "Issue calculateDataExtension",
        "description": "Performs the calculateDataExtension action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/convertToProject": {
      "put": {
        "operationId": "putOPTASKActionconvertToProjectWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "project",
            "description": "project",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/13/schema",
              "x-miro": "swagger/v10.0/schemas/resources/PROJ/write.json"
            }
          },
          {
            "in": "query",
            "name": "exchangeRate",
            "description": "exchangeRate",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/14/schema",
              "x-miro": "swagger/v10.0/schemas/resources/EXRATE/write.json"
            }
          },
          {
            "in": "query",
            "name": "options",
            "description": "options",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Issue convertToProject",
        "description": "Performs the convertToProject action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": {
                    "$ref": "#/paths/~1optask/put/parameters/13/schema",
                    "x-miro": "swagger/v10.0/schemas/resources/PROJ/write.json"
                  },
                  "exchangeRate": {
                    "$ref": "#/paths/~1optask/put/parameters/14/schema",
                    "x-miro": "swagger/v10.0/schemas/resources/EXRATE/write.json"
                  },
                  "options": {
                    "$ref": "#/paths/~1optask/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/{ID}/convertToProject": {
      "put": {
        "operationId": "putOPTASKActionconvertToProjectWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "project",
            "description": "project",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/13/schema",
              "x-miro": "swagger/v10.0/schemas/resources/PROJ/write.json"
            }
          },
          {
            "in": "query",
            "name": "exchangeRate",
            "description": "exchangeRate",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/14/schema",
              "x-miro": "swagger/v10.0/schemas/resources/EXRATE/write.json"
            }
          },
          {
            "in": "query",
            "name": "options",
            "description": "options",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Issue convertToProject",
        "description": "Performs the convertToProject action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": {
                    "$ref": "#/paths/~1optask/put/parameters/13/schema",
                    "x-miro": "swagger/v10.0/schemas/resources/PROJ/write.json"
                  },
                  "exchangeRate": {
                    "$ref": "#/paths/~1optask/put/parameters/14/schema",
                    "x-miro": "swagger/v10.0/schemas/resources/EXRATE/write.json"
                  },
                  "options": {
                    "$ref": "#/paths/~1optask/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/convertToTask": {
      "put": {
        "operationId": "putOPTASKActionconvertToTaskWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "task",
            "description": "task",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/16/schema",
              "x-miro": "swagger/v10.0/schemas/resources/TASK/write.json"
            }
          },
          {
            "in": "query",
            "name": "options",
            "description": "options",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Issue convertToTask",
        "description": "Performs the convertToTask action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "task": {
                    "$ref": "#/paths/~1optask/put/parameters/16/schema",
                    "x-miro": "swagger/v10.0/schemas/resources/TASK/write.json"
                  },
                  "options": {
                    "$ref": "#/paths/~1optask/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/{ID}/convertToTask": {
      "put": {
        "operationId": "putOPTASKActionconvertToTaskWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "task",
            "description": "task",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/16/schema",
              "x-miro": "swagger/v10.0/schemas/resources/TASK/write.json"
            }
          },
          {
            "in": "query",
            "name": "options",
            "description": "options",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Issue convertToTask",
        "description": "Performs the convertToTask action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "task": {
                    "$ref": "#/paths/~1optask/put/parameters/16/schema",
                    "x-miro": "swagger/v10.0/schemas/resources/TASK/write.json"
                  },
                  "options": {
                    "$ref": "#/paths/~1optask/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/linkExternalObject": {
      "put": {
        "operationId": "putOPTASKActionlinkExternalObjectWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "objID",
            "description": "objID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "linkedObjectID",
            "description": "linkedObjectID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "integrationType",
            "description": "integrationType",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "URL",
            "description": "URL",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "params",
            "description": "params",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Optask (Issue) LinkExternalObject is commonly used to link an external object to a specific issue with the unique ID specified by using the objID parameter, the linkedObjectID parameter, the integrationType parameter, the URL parameter, or the params parameter.",
        "description": "Performs the linkExternalObject action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "objID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "linkedObjectID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "integrationType": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "URL": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "params": {
                    "$ref": "#/paths/~1optask/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/{ID}/linkExternalObject": {
      "put": {
        "operationId": "putOPTASKActionlinkExternalObjectWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "objID",
            "description": "objID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "linkedObjectID",
            "description": "linkedObjectID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "integrationType",
            "description": "integrationType",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "URL",
            "description": "URL",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "params",
            "description": "params",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Issue linkExternalObject",
        "description": "Performs the linkExternalObject action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "objID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "linkedObjectID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "integrationType": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "URL": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "params": {
                    "$ref": "#/paths/~1optask/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/markDone": {
      "put": {
        "operationId": "putOPTASKActionmarkDoneWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "status",
            "description": "status",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Issue markDone",
        "description": "Performs the markDone action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/{ID}/markDone": {
      "put": {
        "operationId": "putOPTASKActionmarkDoneWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "status",
            "description": "status",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Issue markDone",
        "description": "Performs the markDone action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/markNotDone": {
      "put": {
        "operationId": "putOPTASKActionmarkNotDoneWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "assignmentID",
            "description": "assignmentID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Issue markNotDone",
        "description": "Performs the markNotDone action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "assignmentID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/{ID}/markNotDone": {
      "put": {
        "operationId": "putOPTASKActionmarkNotDoneWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "assignmentID",
            "description": "assignmentID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Issue markNotDone",
        "description": "Performs the markNotDone action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "assignmentID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/move": {
      "put": {
        "operationId": "putOPTASKActionmoveWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "projectID",
            "description": "projectID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Issue move",
        "description": "Performs the move action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/{ID}/move": {
      "put": {
        "operationId": "putOPTASKActionmoveWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "projectID",
            "description": "projectID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Issue move",
        "description": "Performs the move action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/moveToTask": {
      "put": {
        "operationId": "putOPTASKActionmoveToTaskWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "projectID",
            "description": "projectID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "parentID",
            "description": "parentID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Issue moveToTask",
        "description": "Performs the moveToTask action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "parentID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/{ID}/moveToTask": {
      "put": {
        "operationId": "putOPTASKActionmoveToTaskWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "projectID",
            "description": "projectID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "parentID",
            "description": "parentID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Issue moveToTask",
        "description": "Performs the moveToTask action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "parentID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/recallApproval": {
      "put": {
        "operationId": "putOPTASKActionrecallApprovalWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          }
        ],
        "summary": "Optask (Issue) RecallApproval is commonly used to recall an Issue from the approval process.",
        "description": "When objects in Workfront are submitted for approval, it is sometimes necessary to recall them from the approval process. When a user recalls an Issue approval, the Issue returns to the status it was in prior to the initiation of the approval process. RecallApproval by Issue removes an Issue from the approval process and returns it to its prior status.",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/{ID}/recallApproval": {
      "put": {
        "operationId": "putOPTASKActionrecallApprovalWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          }
        ],
        "summary": "Issue recallApproval",
        "description": "Performs the recallApproval action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/rejectApproval": {
      "put": {
        "operationId": "putOPTASKActionrejectApprovalWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "userID",
            "description": "userID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "username",
            "description": "username",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "password",
            "description": "password",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "auditNote",
            "description": "auditNote",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "auditUserIDs",
            "description": "auditUserIDs",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "sendNoteAsEmail",
            "description": "sendNoteAsEmail",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          }
        ],
        "summary": "Optask (Issue) rejectApproval by Issue is commonly used to reject an approval process that is associated with an issue by using the userID parameter, the approvalUsername parameter, the approvalPassword parameter, the auditNote parameter, the AuditUserIDs parameter, or the sendNoteAsEmail parameter.",
        "description": "Performs the rejectApproval action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "username": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "password": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "auditNote": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "auditUserIDs": {
                    "$ref": "#/paths/~1optask/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "sendNoteAsEmail": {
                    "$ref": "#/paths/~1optask/put/parameters/7/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/{ID}/rejectApproval": {
      "put": {
        "operationId": "putOPTASKActionrejectApprovalWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "userID",
            "description": "userID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "username",
            "description": "username",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "password",
            "description": "password",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "auditNote",
            "description": "auditNote",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "auditUserIDs",
            "description": "auditUserIDs",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/6/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "sendNoteAsEmail",
            "description": "sendNoteAsEmail",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/7/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          }
        ],
        "summary": "Issue rejectApproval",
        "description": "Performs the rejectApproval action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "username": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "password": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "auditNote": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "auditUserIDs": {
                    "$ref": "#/paths/~1optask/put/parameters/6/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "sendNoteAsEmail": {
                    "$ref": "#/paths/~1optask/put/parameters/7/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/replyToAssignment": {
      "put": {
        "operationId": "putOPTASKActionreplyToAssignmentWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "noteText",
            "description": "noteText",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "commitDate",
            "description": "commitDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          }
        ],
        "summary": "Issue replyToAssignment",
        "description": "Performs the replyToAssignment action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteText": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "commitDate": {
                    "$ref": "#/paths/~1optask/post/parameters/3/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/{ID}/replyToAssignment": {
      "put": {
        "operationId": "putOPTASKActionreplyToAssignmentWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "noteText",
            "description": "noteText",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "commitDate",
            "description": "commitDate",
            "schema": {
              "$ref": "#/paths/~1optask/post/parameters/3/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          }
        ],
        "summary": "Issue replyToAssignment",
        "description": "Performs the replyToAssignment action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteText": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "commitDate": {
                    "$ref": "#/paths/~1optask/post/parameters/3/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/unacceptWork": {
      "put": {
        "operationId": "putOPTASKActionunacceptWorkWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          }
        ],
        "summary": "Issue unacceptWork",
        "description": "Performs the unacceptWork action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/{ID}/unacceptWork": {
      "put": {
        "operationId": "putOPTASKActionunacceptWorkWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          }
        ],
        "summary": "Issue unacceptWork",
        "description": "Performs the unacceptWork action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/unassign": {
      "put": {
        "operationId": "putOPTASKActionunassignWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "userID",
            "description": "userID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Issue unassign",
        "description": "Performs the unassign action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/{ID}/unassign": {
      "put": {
        "operationId": "putOPTASKActionunassignWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "userID",
            "description": "userID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Issue unassign",
        "description": "Performs the unassign action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/unlinkExternalObject": {
      "put": {
        "operationId": "putOPTASKActionunlinkExternalObjectWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "objID",
            "description": "objID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "linkedObjectID",
            "description": "linkedObjectID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "integrationType",
            "description": "integrationType",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Issue unlinkExternalObject",
        "description": "Performs the unlinkExternalObject action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "objID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "linkedObjectID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "integrationType": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/optask/{ID}/unlinkExternalObject": {
      "put": {
        "operationId": "putOPTASKActionunlinkExternalObjectWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1optask~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "objID",
            "description": "objID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "linkedObjectID",
            "description": "linkedObjectID",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "integrationType",
            "description": "integrationType",
            "schema": {
              "$ref": "#/paths/~1optask/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Issue unlinkExternalObject",
        "description": "Performs the unlinkExternalObject action on the Issue object",
        "tags": [
          "OPTASK",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "objID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "linkedObjectID": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "integrationType": {
                    "$ref": "#/paths/~1optask/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1optask/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    }
  }
}
