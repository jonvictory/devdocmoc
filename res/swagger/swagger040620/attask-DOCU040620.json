{
  "openapi": "3.0.0",
  "info": {
    "title": "Attask DOCU API v10.0",
    "version": "v10.0",
    "contact": {
      "email": "support@workfront.com"
    }
  },
  
  "components": {
    "securitySchemes": {
      "apiKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "apiKey"
      },
      "apiKeyQuery": {
        "type": "apiKey",
        "in": "query",
        "name": "apiKey"
      },
      "sessionCookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "sessionID"
      },
      "sessionHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "sessionID"
      },
      "sessionQuery": {
        "type": "apiKey",
        "in": "query",
        "name": "sessionID"
      },
      "usernameBody": {
        "type": "http",
        "scheme": "custom",
        "x-custom-schema": {
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": true
                }
              }
            }
          }
        }
      },
      "usernameHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "username"
      },
      "usernameQuery": {
        "type": "apiKey",
        "in": "query",
        "name": "username"
      },
      "passwordBody": {
        "type": "http",
        "scheme": "custom",
        "x-custom-schema": {
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "password": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": true
                }
              }
            }
          }
        }
      },
      "passwordHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "password"
      },
      "passwordQuery": {
        "type": "apiKey",
        "in": "query",
        "name": "password"
      }
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    },
    {
      "apiKeyQuery": []
    },
    {
      "sessionCookie": []
    },
    {
      "sessionHeader": []
    },
    {
      "sessionQuery": []
    },
    {
      "usernameHeader": [],
      "passwordHeader": []
    },
    {
      "usernameQuery": [],
      "passwordQuery": []
    }
  ],
  "tags": [
    {
      "name": "authentication",
      "description": "Requests related to ensuring follow-up requests have the proper access."
    },
    {
      "name": "general",
      "description": "General purpose requests"
    }
  ],
  "paths": {
    "/docu/metadata": {
      "get": {
        "operationId": "getDOCUMetadata",
        "summary": "Document Metadata",
        "description": "Gets the Resource Metadata information for Document",
        "tags": [
          "DOCU",
          "general"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "objects": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "label": {
                                "type": "string"
                              },
                              "objCode": {
                                "type": "string"
                              },
                              "url": {
                                "type": "string"
                              },
                              "flags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "fields": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "flags": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "label": {
                                      "type": "string"
                                    },
                                    "typeObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "targetTypeObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "fieldType": {
                                      "type": "string"
                                    },
                                    "enumTargetObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "enumType": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "url": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "possibleValues": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "references": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "typeObjCode": {
                                      "type": "string"
                                    },
                                    "targetTypeObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "fieldType": {
                                      "type": "string"
                                    },
                                    "enumTargetObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "enumType": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "url": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                }
                              },
                              "collections": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "typeObjCode": {
                                      "type": "string"
                                    },
                                    "targetTypeObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "fieldType": {
                                      "type": "string"
                                    },
                                    "enumTargetObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "enumType": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "url": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                }
                              },
                              "search": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "typeObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "targetTypeObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "fieldType": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "enumTargetObjCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "enumType": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "url": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                }
                              },
                              "custom": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "categories": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "ID": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "objCode": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "actions": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "arguments": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "label": {
                                      "type": "string"
                                    },
                                    "resultType": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "queries": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "arguments": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "label": {
                                      "type": "string"
                                    },
                                    "resultType": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "operations": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "name": "Document",
                    "label": "Document",
                    "objCode": "DOCU",
                    "flags": [
                      "DATA_EXTENDIBLE",
                      "PUBLIC_SHARABLE",
                      "REPORTABLE",
                      "RESTORABLE",
                      "SHARABLE"
                    ],
                    "url": "https://hub.workfront.com/attask/api/v10.0/docu/metadata",
                    "fields": {
                      "ID": {
                        "label": "ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "accessorIDs": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "DYNAMIC",
                          "LAZY_READ"
                        ],
                        "label": "accessorIDs",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string[]",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "advancedProofingOptions": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "DYNAMIC",
                          "LAZY_READ"
                        ],
                        "label": "advancedProofingOptions",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "categoryID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Category ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "checkOutTimestamp": {
                        "label": "checkOutTimestamp",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "checkedOutByID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "checkedOutByID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "createProof": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "DYNAMIC",
                          "LAZY_READ"
                        ],
                        "label": "createProof",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "currentVersionID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Current Version ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "customerID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Customer ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "description": {
                        "label": "Description",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "docObjCode": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Document Type",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "documentProviderID": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "WRITE_ONLY",
                          "DYNAMIC",
                          "LAZY_READ"
                        ],
                        "label": "documentProviderID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "documentRequestID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "documentRequestID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "downloadURL": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "DYNAMIC",
                          "LAZY_READ"
                        ],
                        "label": "downloadURL",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "extRefID": {
                        "label": "External Reference ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "externalIntegrationType": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "WRITE_ONLY",
                          "DYNAMIC",
                          "LAZY_READ"
                        ],
                        "label": "External Integration Type",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "fileType": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "WRITE_ONLY",
                          "DYNAMIC",
                          "LAZY_READ"
                        ],
                        "label": "File Type",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "folderIDs": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "WRITE_ONLY",
                          "DYNAMIC",
                          "LAZY_READ"
                        ],
                        "label": "folderIDs",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string[]",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "handle": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "WRITE_ONLY",
                          "DYNAMIC",
                          "LAZY_READ"
                        ],
                        "label": "handle",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "hasNotes": {
                        "label": "Has Notes",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "isPrivate": {
                        "label": "Is Private",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "isPublic": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Is Public",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "boolean",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "iterationID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Iteration ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "lastModDate": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Last Modified",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "lastNoteID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Last Note ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "lastSyncDate": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "lastSyncDate",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "lastUpdateDate": {
                        "label": "Last Update Date",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "dateTime",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "lastUpdatedByID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Last Updated By ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "lastVersionNum": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "lastVersionNum",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "name": {
                        "label": "Name",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "objID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "ObjID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "opTaskID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Issue ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "ownerID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Owner ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "portfolioID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Portfolio ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "previewURL": {
                        "flags": [
                          "NOT_GROUPABLE",
                          "DYNAMIC",
                          "LAZY_READ"
                        ],
                        "label": "previewURL",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "programID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Program ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "projectID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Project ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "publicToken": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE"
                        ],
                        "label": "publicToken",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "referenceNumber": {
                        "label": "Reference Number",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "int",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "referenceObjCode": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "DYNAMIC",
                          "LAZY_READ"
                        ],
                        "label": "referenceObjCode",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "referenceObjID": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "DYNAMIC",
                          "LAZY_READ"
                        ],
                        "label": "referenceObjID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "referenceObjectClosed": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "DYNAMIC",
                          "LAZY_READ"
                        ],
                        "label": "referenceObjectClosed",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "referenceObjectName": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE",
                          "DYNAMIC",
                          "LAZY_READ"
                        ],
                        "label": "referenceObjectName",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "releaseVersionID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Release Version ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "securityRootID": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE"
                        ],
                        "label": "securityRootID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "securityRootObjCode": {
                        "flags": [
                          "READ_ONLY",
                          "NOT_GROUPABLE"
                        ],
                        "label": "securityRootObjCode",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "taskID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Task ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "templateID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Template ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "templateTaskID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Template Task ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "topDocObjCode": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Top Document Type",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "topObjID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "Top ObjID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "userID": {
                        "flags": [
                          "NOT_GROUPABLE"
                        ],
                        "label": "User ID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": "string",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      }
                    },
                    "references": {
                      "category": {
                        "label": "Category",
                        "typeObjCode": "CTGY",
                        "targetTypeObjCode": null,
                        "fieldType": "Category",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/ctgy/metadata"
                      },
                      "checkedOutBy": {
                        "label": "checkedOutBy",
                        "typeObjCode": "USER",
                        "targetTypeObjCode": null,
                        "fieldType": "User",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/user/metadata"
                      },
                      "currentVersion": {
                        "label": "Current Version",
                        "typeObjCode": "DOCV",
                        "targetTypeObjCode": null,
                        "fieldType": "DocumentVersion",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/docv/metadata"
                      },
                      "customer": {
                        "label": "Customer",
                        "typeObjCode": "CUST",
                        "targetTypeObjCode": null,
                        "fieldType": "Customer",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/cust/metadata"
                      },
                      "documentRequest": {
                        "label": "Document Request",
                        "typeObjCode": "DOCREQ",
                        "targetTypeObjCode": null,
                        "fieldType": "DocumentRequest",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/docreq/metadata"
                      },
                      "iteration": {
                        "label": "Iteration",
                        "typeObjCode": "ITRN",
                        "targetTypeObjCode": null,
                        "fieldType": "Iteration",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/itrn/metadata"
                      },
                      "lastNote": {
                        "label": "Last Note",
                        "typeObjCode": "NOTE",
                        "targetTypeObjCode": null,
                        "fieldType": "Note",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/note/metadata"
                      },
                      "lastUpdatedBy": {
                        "label": "Last Updated By",
                        "typeObjCode": "USER",
                        "targetTypeObjCode": null,
                        "fieldType": "User",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/user/metadata"
                      },
                      "opTask": {
                        "label": "Issue",
                        "typeObjCode": "OPTASK",
                        "targetTypeObjCode": null,
                        "fieldType": "OpTask",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/optask/metadata"
                      },
                      "owner": {
                        "label": "Owner",
                        "typeObjCode": "USER",
                        "targetTypeObjCode": null,
                        "fieldType": "User",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/user/metadata"
                      },
                      "portfolio": {
                        "label": "Portfolio",
                        "typeObjCode": "PORT",
                        "targetTypeObjCode": null,
                        "fieldType": "Portfolio",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/port/metadata"
                      },
                      "program": {
                        "label": "Program",
                        "typeObjCode": "PRGM",
                        "targetTypeObjCode": null,
                        "fieldType": "Program",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/prgm/metadata"
                      },
                      "project": {
                        "label": "Project",
                        "typeObjCode": "PROJ",
                        "targetTypeObjCode": null,
                        "fieldType": "Project",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/proj/metadata"
                      },
                      "releaseVersion": {
                        "label": "Release Version",
                        "typeObjCode": "DOCV",
                        "targetTypeObjCode": null,
                        "fieldType": "DocumentVersion",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/docv/metadata"
                      },
                      "task": {
                        "label": "Task",
                        "typeObjCode": "TASK",
                        "targetTypeObjCode": null,
                        "fieldType": "Task",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/task/metadata"
                      },
                      "template": {
                        "label": "Template",
                        "typeObjCode": "TMPL",
                        "targetTypeObjCode": null,
                        "fieldType": "Template",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/tmpl/metadata"
                      },
                      "templateTask": {
                        "label": "Template Task",
                        "typeObjCode": "TTSK",
                        "targetTypeObjCode": null,
                        "fieldType": "TemplateTask",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/ttsk/metadata"
                      },
                      "user": {
                        "label": "User",
                        "typeObjCode": "USER",
                        "targetTypeObjCode": null,
                        "fieldType": "User",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/user/metadata"
                      }
                    },
                    "collections": {
                      "accessRules": {
                        "label": "accessRules",
                        "typeObjCode": "ACSRUL",
                        "targetTypeObjCode": null,
                        "fieldType": "AccessRule",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/acsrul/metadata"
                      },
                      "approvals": {
                        "label": "Approvals",
                        "typeObjCode": "DOCAPL",
                        "targetTypeObjCode": null,
                        "fieldType": "DocumentApproval",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/docapl/metadata"
                      },
                      "awaitingApprovals": {
                        "label": "awaitingApprovals",
                        "typeObjCode": "AWAPVL",
                        "targetTypeObjCode": null,
                        "fieldType": "AwaitingApproval",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/awapvl/metadata"
                      },
                      "folders": {
                        "label": "Folders",
                        "typeObjCode": "DOCFDR",
                        "targetTypeObjCode": null,
                        "fieldType": "DocumentFolder",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/docfdr/metadata"
                      },
                      "groups": {
                        "label": "Groups",
                        "typeObjCode": "GROUP",
                        "targetTypeObjCode": null,
                        "fieldType": "Group",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/group/metadata"
                      },
                      "objectCategories": {
                        "label": "objectCategories",
                        "typeObjCode": "OBJCAT",
                        "targetTypeObjCode": null,
                        "fieldType": "ObjectCategory",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/objcat/metadata"
                      },
                      "subscribers": {
                        "label": "Subscribers",
                        "typeObjCode": "USER",
                        "targetTypeObjCode": null,
                        "fieldType": "User",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/user/metadata"
                      },
                      "versions": {
                        "label": "versions",
                        "typeObjCode": "DOCV",
                        "targetTypeObjCode": null,
                        "fieldType": "DocumentVersion",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/docv/metadata"
                      }
                    },
                    "search": {
                      "allApprovalsOM": {
                        "label": "All Approvals",
                        "typeObjCode": "DOCAPL",
                        "targetTypeObjCode": null,
                        "fieldType": "DocumentApproval",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/docapl/metadata"
                      },
                      "documentShareUsersMM": {
                        "label": "Shared Users",
                        "typeObjCode": "USER",
                        "targetTypeObjCode": null,
                        "fieldType": "User",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/user/metadata"
                      },
                      "groupIDs": {
                        "label": "Group IDs",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "isDir": {
                        "label": "Is Directory",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "issueID": {
                        "label": "issueID",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      },
                      "notes": {
                        "label": "Notes",
                        "typeObjCode": "NOTE",
                        "targetTypeObjCode": null,
                        "fieldType": "Note",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/note/metadata"
                      },
                      "objectCategoriesMM": {
                        "label": "Categories",
                        "typeObjCode": "CTGY",
                        "targetTypeObjCode": null,
                        "fieldType": "Category",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/ctgy/metadata"
                      },
                      "projectUsersOM": {
                        "label": "Project Users",
                        "typeObjCode": "PRTU",
                        "targetTypeObjCode": null,
                        "fieldType": "ProjectUser",
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": "https://hub.workfront.com/attask/api/v10.0/prtu/metadata"
                      },
                      "subscriberIDs": {
                        "label": "Subscriber IDs",
                        "typeObjCode": null,
                        "targetTypeObjCode": null,
                        "fieldType": null,
                        "enumTargetObjCode": null,
                        "enumType": null,
                        "url": null
                      }
                    },
                    "actions": {
                      "calculateDataExtension": {
                        "flags": [],
                        "label": "calculateDataExtension"
                      },
                      "checkIn": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "documentIDs",
                            "type": "string[]"
                          }
                        ],
                        "label": "checkIn"
                      },
                      "checkOut": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "documentIDs",
                            "type": "string[]"
                          }
                        ],
                        "label": "checkOut"
                      },
                      "createProof": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "documentVersionID",
                            "type": "string"
                          },
                          {
                            "name": "advancedProofingOptions",
                            "type": "string"
                          }
                        ],
                        "label": "createProof"
                      },
                      "getTotalSizeForDocuments": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "documentIDs",
                            "type": "string[]"
                          },
                          {
                            "name": "includeLinked",
                            "type": "boolean"
                          }
                        ],
                        "label": "getTotalSizeForDocuments",
                        "resultType": "java.lang.Long"
                      },
                      "isLinkedDocument": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "documentID",
                            "type": "string"
                          }
                        ],
                        "label": "isLinkedDocument",
                        "resultType": "java.lang.Boolean"
                      },
                      "isProofAutoGenrationEnabled": {
                        "flags": [],
                        "label": "isProofAutoGenrationEnabled",
                        "resultType": "java.lang.Boolean"
                      },
                      "move": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "objID",
                            "type": "string"
                          },
                          {
                            "name": "docObjCode",
                            "type": "string"
                          }
                        ],
                        "label": "Move"
                      },
                      "unlinkDocuments": {
                        "flags": [],
                        "arguments": [
                          {
                            "name": "ids",
                            "type": "string[]"
                          }
                        ],
                        "label": "unlinkDocuments",
                        "resultType": "java.lang.Boolean"
                      }
                    },
                    "queries": {},
                    "operations": [
                      "add",
                      "count",
                      "delete",
                      "edit",
                      "get",
                      "report",
                      "search"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/docu": {
      "post": {
        "operationId": "addDOCU",
        "summary": "Document Add",
        "description": "Adds a Document object",
        "tags": [
          "DOCU",
          "add"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            },
            "description": "Comma separated list of fields, references, and collections supported by this resource, or * for all. The list of fields to be included in the response."
          },
          {
            "in": "query",
            "name": "updates",
            "description": "JSON object whose fields represent the fields of the resource to set",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1docu/post/requestBody/content/application~1json/schema",
                  "x-miro": "swagger/v10.0/schemas/resources/DOCU/write.json"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "ID"
          },
          {
            "in": "query",
            "name": "advancedProofingOptions",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "advancedProofingOptions"
          },
          {
            "in": "query",
            "name": "categoryID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Category ID"
          },
          {
            "in": "query",
            "name": "checkOutTimestamp",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "checkOutTimestamp"
          },
          {
            "in": "query",
            "name": "checkedOutByID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "checkedOutByID"
          },
          {
            "in": "query",
            "name": "createProof",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "createProof"
          },
          {
            "in": "query",
            "name": "currentVersionID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Current Version ID"
          },
          {
            "in": "query",
            "name": "customerID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Customer ID"
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Description"
          },
          {
            "in": "query",
            "name": "docObjCode",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Document Type"
          },
          {
            "in": "query",
            "name": "documentProviderID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "documentProviderID"
          },
          {
            "in": "query",
            "name": "documentRequestID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "documentRequestID"
          },
          {
            "in": "query",
            "name": "downloadURL",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "downloadURL"
          },
          {
            "in": "query",
            "name": "extRefID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "External Reference ID"
          },
          {
            "in": "query",
            "name": "externalIntegrationType",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "External Integration Type"
          },
          {
            "in": "query",
            "name": "fileType",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "File Type"
          },
          {
            "in": "query",
            "name": "folderIDs",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/2/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false,
            "description": "folderIDs"
          },
          {
            "in": "query",
            "name": "handle",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "handle"
          },
          {
            "in": "query",
            "name": "hasNotes",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Notes"
          },
          {
            "in": "query",
            "name": "isPrivate",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Is Private"
          },
          {
            "in": "query",
            "name": "isPublic",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Is Public"
          },
          {
            "in": "query",
            "name": "iterationID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Iteration ID"
          },
          {
            "in": "query",
            "name": "lastModDate",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Last Modified"
          },
          {
            "in": "query",
            "name": "lastNoteID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Last Note ID"
          },
          {
            "in": "query",
            "name": "lastSyncDate",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "lastSyncDate"
          },
          {
            "in": "query",
            "name": "lastUpdateDate",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Last Update Date"
          },
          {
            "in": "query",
            "name": "lastUpdatedByID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Last Updated By ID"
          },
          {
            "in": "query",
            "name": "lastVersionNum",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "lastVersionNum"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Name"
          },
          {
            "in": "query",
            "name": "objID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "ObjID"
          },
          {
            "in": "query",
            "name": "opTaskID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Issue ID"
          },
          {
            "in": "query",
            "name": "ownerID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Owner ID"
          },
          {
            "in": "query",
            "name": "portfolioID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Portfolio ID"
          },
          {
            "in": "query",
            "name": "previewURL",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "previewURL"
          },
          {
            "in": "query",
            "name": "programID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Program ID"
          },
          {
            "in": "query",
            "name": "projectID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Project ID"
          },
          {
            "in": "query",
            "name": "publicToken",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "publicToken"
          },
          {
            "in": "query",
            "name": "referenceNumber",
            "schema": {
              "type": "number",
              "format": "int32"
            },
            "required": false,
            "description": "Reference Number"
          },
          {
            "in": "query",
            "name": "releaseVersionID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Release Version ID"
          },
          {
            "in": "query",
            "name": "securityRootID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "securityRootID"
          },
          {
            "in": "query",
            "name": "securityRootObjCode",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "securityRootObjCode"
          },
          {
            "in": "query",
            "name": "taskID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Task ID"
          },
          {
            "in": "query",
            "name": "templateID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Template ID"
          },
          {
            "in": "query",
            "name": "templateTaskID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Template Task ID"
          },
          {
            "in": "query",
            "name": "topDocObjCode",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Top Document Type"
          },
          {
            "in": "query",
            "name": "topObjID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Top ObjID"
          },
          {
            "in": "query",
            "name": "userID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "User ID"
          }
        ],
        "requestBody": {
          "description": "Include all necessary fields to create a Document",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "advancedProofingOptions": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "categoryID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "checkOutTimestamp": {
                    "$ref": "#/paths/~1docu/post/parameters/5/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                  },
                  "checkedOutByID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "createProof": {
                    "$ref": "#/paths/~1docu/put/parameters/5/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                  },
                  "currentVersionID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "customerID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "description": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "docObjCode": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "documentProviderID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "documentRequestID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "downloadURL": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "extRefID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "externalIntegrationType": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "fileType": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "folderIDs": {
                    "$ref": "#/paths/~1docu/put/parameters/2/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "handle": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "hasNotes": {
                    "$ref": "#/paths/~1docu/put/parameters/5/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                  },
                  "isPrivate": {
                    "$ref": "#/paths/~1docu/put/parameters/5/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                  },
                  "isPublic": {
                    "$ref": "#/paths/~1docu/put/parameters/5/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                  },
                  "iterationID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "lastModDate": {
                    "$ref": "#/paths/~1docu/post/parameters/5/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                  },
                  "lastNoteID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "lastSyncDate": {
                    "$ref": "#/paths/~1docu/post/parameters/5/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                  },
                  "lastUpdateDate": {
                    "$ref": "#/paths/~1docu/post/parameters/5/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                  },
                  "lastUpdatedByID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "lastVersionNum": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "name": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "objID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "opTaskID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "ownerID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "portfolioID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "previewURL": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "programID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "projectID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "publicToken": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "referenceNumber": {
                    "$ref": "#/paths/~1docu/post/parameters/39/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                  },
                  "releaseVersionID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "securityRootID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "securityRootObjCode": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "taskID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "templateID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "templateTaskID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "topDocObjCode": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "topObjID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "userID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/paths/~1docu~1report/get/parameters/1/content/application~1json/schema",
                          "x-miro": "swagger/v10.0/schemas/resources/DOCU/read.json"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putDOCUActioncalculateDataExtensionORputDOCUActioncheckInORputDOCUActioncheckOutORputDOCUActioncreateProofORputDOCUActiongetTotalSizeForDocumentsORputDOCUActionisLinkedDocumentORputDOCUActionisProofAutoGenrationEnabledORputDOCUActionmoveORputDOCUActionunlinkDocuments",
        "parameters": [
          {
            "in": "query",
            "name": "ID",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "ID of the object"
          },
          {
            "in": "query",
            "name": "action",
            "description": "The action to perform on the Document",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "documentIDs",
            "description": "documentIDs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/paths/~1docu/put/parameters/1/schema",
                "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
              }
            },
            "required": false
          },
          {
            "in": "query",
            "name": "documentVersionID",
            "description": "documentVersionID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "advancedProofingOptions",
            "description": "advancedProofingOptions",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "includeLinked",
            "description": "includeLinked",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "documentID",
            "description": "documentID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "objID",
            "description": "objID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "docObjCode",
            "description": "docObjCode",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ids",
            "description": "ids",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/2/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          }
        ],
        "summary": "Document calculateDataExtension OR Document checkIn OR Document checkOut OR Document createProof OR Document getTotalSizeForDocuments OR Document isLinkedDocument OR Document isProofAutoGenrationEnabled OR Document move OR Document unlinkDocuments",
        "description": "Performs the calculateDataExtension action on the Document object\nOR\nPerforms the checkIn action on the Document object\nOR\nPerforms the checkOut action on the Document object\nOR\nPerforms the createProof action on the Document object\nOR\nPerforms the getTotalSizeForDocuments action on the Document object\nOR\nPerforms the isLinkedDocument action on the Document object\nOR\nPerforms the isProofAutoGenrationEnabled action on the Document object\nOR\nPerforms the move action on the Document object\nOR\nPerforms the unlinkDocuments action on the Document object",
        "tags": [
          "DOCU",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {}
                  },
                  {
                    "type": "object",
                    "properties": {
                      "documentIDs": {
                        "$ref": "#/paths/~1docu/put/parameters/2/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "documentVersionID": {
                        "$ref": "#/paths/~1docu/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "advancedProofingOptions": {
                        "$ref": "#/paths/~1docu/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "documentIDs": {
                        "$ref": "#/paths/~1docu/put/parameters/2/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "includeLinked": {
                        "$ref": "#/paths/~1docu/put/parameters/5/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "documentID": {
                        "$ref": "#/paths/~1docu/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objID": {
                        "$ref": "#/paths/~1docu/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "docObjCode": {
                        "$ref": "#/paths/~1docu/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "ids": {
                        "$ref": "#/paths/~1docu/put/parameters/2/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  }
                ]
              },
              "examples": {
                "putDOCUActioncalculateDataExtension": {
                  "value": {}
                },
                "putDOCUActioncheckIn": {
                  "value": {}
                },
                "putDOCUActioncheckOut": {
                  "value": {}
                },
                "putDOCUActioncreateProof": {
                  "value": {}
                },
                "putDOCUActiongetTotalSizeForDocuments": {
                  "value": {}
                },
                "putDOCUActionisLinkedDocument": {
                  "value": {}
                },
                "putDOCUActionisProofAutoGenrationEnabled": {
                  "value": {}
                },
                "putDOCUActionmove": {
                  "value": {}
                },
                "putDOCUActionunlinkDocuments": {
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "class": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "putDOCUActioncalculateDataExtension": {
                    "value": {}
                  },
                  "putDOCUActioncheckIn": {
                    "value": {}
                  },
                  "putDOCUActioncheckOut": {
                    "value": {}
                  },
                  "putDOCUActioncreateProof": {
                    "value": {}
                  },
                  "putDOCUActiongetTotalSizeForDocuments": {
                    "value": {}
                  },
                  "putDOCUActionisLinkedDocument": {
                    "value": {}
                  },
                  "putDOCUActionisProofAutoGenrationEnabled": {
                    "value": {}
                  },
                  "putDOCUActionmove": {
                    "value": {}
                  },
                  "putDOCUActionunlinkDocuments": {
                    "value": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/docu/count": {
      "get": {
        "operationId": "countDOCU",
        "summary": "Document Count",
        "description": "Counts the Document objects matching the given parameters",
        "tags": [
          "DOCU",
          "count"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "updates",
            "description": "JSON object whose fields represent the fields of the resource to set",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1docu/post/requestBody/content/application~1json/schema",
                  "x-miro": "swagger/v10.0/schemas/resources/DOCU/write.json"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "ID"
          },
          {
            "in": "query",
            "name": "categoryID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Category ID"
          },
          {
            "in": "query",
            "name": "checkOutTimestamp",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "checkOutTimestamp"
          },
          {
            "in": "query",
            "name": "checkedOutByID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "checkedOutByID"
          },
          {
            "in": "query",
            "name": "currentVersionID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Current Version ID"
          },
          {
            "in": "query",
            "name": "customerID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Customer ID"
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Description"
          },
          {
            "in": "query",
            "name": "docObjCode",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Document Type"
          },
          {
            "in": "query",
            "name": "documentRequestID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "documentRequestID"
          },
          {
            "in": "query",
            "name": "extRefID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "External Reference ID"
          },
          {
            "in": "query",
            "name": "hasNotes",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Has Notes"
          },
          {
            "in": "query",
            "name": "isPrivate",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Is Private"
          },
          {
            "in": "query",
            "name": "isPublic",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Is Public"
          },
          {
            "in": "query",
            "name": "iterationID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Iteration ID"
          },
          {
            "in": "query",
            "name": "lastModDate",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Last Modified"
          },
          {
            "in": "query",
            "name": "lastNoteID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Last Note ID"
          },
          {
            "in": "query",
            "name": "lastSyncDate",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "lastSyncDate"
          },
          {
            "in": "query",
            "name": "lastUpdateDate",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "Last Update Date"
          },
          {
            "in": "query",
            "name": "lastUpdatedByID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Last Updated By ID"
          },
          {
            "in": "query",
            "name": "lastVersionNum",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "lastVersionNum"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Name"
          },
          {
            "in": "query",
            "name": "objID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "ObjID"
          },
          {
            "in": "query",
            "name": "opTaskID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Issue ID"
          },
          {
            "in": "query",
            "name": "ownerID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Owner ID"
          },
          {
            "in": "query",
            "name": "portfolioID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Portfolio ID"
          },
          {
            "in": "query",
            "name": "programID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Program ID"
          },
          {
            "in": "query",
            "name": "projectID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Project ID"
          },
          {
            "in": "query",
            "name": "publicToken",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "publicToken"
          },
          {
            "in": "query",
            "name": "referenceNumber",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "Reference Number"
          },
          {
            "in": "query",
            "name": "releaseVersionID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Release Version ID"
          },
          {
            "in": "query",
            "name": "securityRootID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "securityRootID"
          },
          {
            "in": "query",
            "name": "securityRootObjCode",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "securityRootObjCode"
          },
          {
            "in": "query",
            "name": "taskID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Task ID"
          },
          {
            "in": "query",
            "name": "templateID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Template ID"
          },
          {
            "in": "query",
            "name": "templateTaskID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Template Task ID"
          },
          {
            "in": "query",
            "name": "topDocObjCode",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Top Document Type"
          },
          {
            "in": "query",
            "name": "topObjID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "Top ObjID"
          },
          {
            "in": "query",
            "name": "userID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "$ref": "#/paths/~1docu/post/parameters/39/schema",
                          "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                        }
                      }
                    }
                  }
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/docu/{ID}": {
      "delete": {
        "operationId": "deleteDOCUByID",
        "summary": "Document Delete",
        "description": "Deletes the Document object having {ID}",
        "tags": [
          "DOCU",
          "delete"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1docu~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "success": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {
                  "data": {
                    "success": true
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "editDOCUByIDORputDOCUActioncalculateDataExtensionWithIdORputDOCUActioncheckInWithIdORputDOCUActioncheckOutWithIdORputDOCUActioncreateProofWithIdORputDOCUActiongetTotalSizeForDocumentsWithIdORputDOCUActionisLinkedDocumentWithIdORputDOCUActionisProofAutoGenrationEnabledWithIdORputDOCUActionmoveWithIdORputDOCUActionunlinkDocumentsWithId",
        "summary": "Document Edit OR Document calculateDataExtension OR Document checkIn OR Document checkOut OR Document createProof OR Document getTotalSizeForDocuments OR Document isLinkedDocument OR Document isProofAutoGenrationEnabled OR Document move OR Document unlinkDocuments",
        "description": "Modifies the Document having {ID}\nOR\nPerforms the calculateDataExtension action on the Document object\nOR\nPerforms the checkIn action on the Document object\nOR\nPerforms the checkOut action on the Document object\nOR\nPerforms the createProof action on the Document object\nOR\nPerforms the getTotalSizeForDocuments action on the Document object\nOR\nPerforms the isLinkedDocument action on the Document object\nOR\nPerforms the isProofAutoGenrationEnabled action on the Document object\nOR\nPerforms the move action on the Document object\nOR\nPerforms the unlinkDocuments action on the Document object",
        "tags": [
          "DOCU",
          "edit",
          "action"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/0/schema",
              "x-miro": "swagger/v10.0/schemas/resourceID.yml"
            },
            "required": true,
            "description": "ID of the object"
          },
          {
            "$ref": "#/paths/~1docu/post/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/fields.yml"
          },
          {
            "in": "query",
            "name": "updates",
            "description": "JSON object whose fields represent the fields of the resource to set",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1docu/post/requestBody/content/application~1json/schema",
                  "x-miro": "swagger/v10.0/schemas/resources/DOCU/write.json"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "ID",
            "description": "ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "advancedProofingOptions",
            "description": "advancedProofingOptions",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "categoryID",
            "description": "Category ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "checkOutTimestamp",
            "description": "checkOutTimestamp",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "checkedOutByID",
            "description": "checkedOutByID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "createProof",
            "description": "createProof",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "currentVersionID",
            "description": "Current Version ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "customerID",
            "description": "Customer ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "docObjCode",
            "description": "Document Type\nOR\ndocObjCode",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "documentProviderID",
            "description": "documentProviderID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "documentRequestID",
            "description": "documentRequestID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "downloadURL",
            "description": "downloadURL",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "extRefID",
            "description": "External Reference ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "externalIntegrationType",
            "description": "External Integration Type",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "fileType",
            "description": "File Type",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "folderIDs",
            "description": "folderIDs",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/2/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "handle",
            "description": "handle",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "hasNotes",
            "description": "Has Notes",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "isPrivate",
            "description": "Is Private",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "isPublic",
            "description": "Is Public",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "iterationID",
            "description": "Iteration ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "lastModDate",
            "description": "Last Modified",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "lastNoteID",
            "description": "Last Note ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "lastSyncDate",
            "description": "lastSyncDate",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "lastUpdateDate",
            "description": "Last Update Date",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "lastUpdatedByID",
            "description": "Last Updated By ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "lastVersionNum",
            "description": "lastVersionNum",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "objID",
            "description": "ObjID\nOR\nobjID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "opTaskID",
            "description": "Issue ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "ownerID",
            "description": "Owner ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "portfolioID",
            "description": "Portfolio ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "previewURL",
            "description": "previewURL",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "programID",
            "description": "Program ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "projectID",
            "description": "Project ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "publicToken",
            "description": "publicToken",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "referenceNumber",
            "description": "Reference Number",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "releaseVersionID",
            "description": "Release Version ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "securityRootID",
            "description": "securityRootID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "securityRootObjCode",
            "description": "securityRootObjCode",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "taskID",
            "description": "Task ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "templateID",
            "description": "Template ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "templateTaskID",
            "description": "Template Task ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "topDocObjCode",
            "description": "Top Document Type",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "topObjID",
            "description": "Top ObjID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "userID",
            "description": "User ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "action",
            "description": "The action to perform on the Document",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "documentIDs",
            "description": "documentIDs",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/2/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "documentVersionID",
            "description": "documentVersionID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "includeLinked",
            "description": "includeLinked",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "documentID",
            "description": "documentID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ids",
            "description": "ids",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/2/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            },
            "required": false
          }
        ],
        "requestBody": {
          "description": "",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/paths/~1docu/post/requestBody/content/application~1json/schema",
                    "x-miro": "swagger/v10.0/schemas/resources/DOCU/write.json"
                  },
                  {
                    "type": "object",
                    "properties": {}
                  },
                  {
                    "type": "object",
                    "properties": {
                      "documentIDs": {
                        "$ref": "#/paths/~1docu/put/parameters/2/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "documentVersionID": {
                        "$ref": "#/paths/~1docu/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "advancedProofingOptions": {
                        "$ref": "#/paths/~1docu/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "documentIDs": {
                        "$ref": "#/paths/~1docu/put/parameters/2/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "includeLinked": {
                        "$ref": "#/paths/~1docu/put/parameters/5/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "documentID": {
                        "$ref": "#/paths/~1docu/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objID": {
                        "$ref": "#/paths/~1docu/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "docObjCode": {
                        "$ref": "#/paths/~1docu/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "ids": {
                        "$ref": "#/paths/~1docu/put/parameters/2/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  }
                ]
              },
              "examples": {
                "editDOCUByID": {
                  "value": {}
                },
                "putDOCUActioncalculateDataExtensionWithId": {
                  "value": {}
                },
                "putDOCUActioncheckInWithId": {
                  "value": {}
                },
                "putDOCUActioncheckOutWithId": {
                  "value": {}
                },
                "putDOCUActioncreateProofWithId": {
                  "value": {}
                },
                "putDOCUActiongetTotalSizeForDocumentsWithId": {
                  "value": {}
                },
                "putDOCUActionisLinkedDocumentWithId": {
                  "value": {}
                },
                "putDOCUActionisProofAutoGenrationEnabledWithId": {
                  "value": {}
                },
                "putDOCUActionmoveWithId": {
                  "value": {}
                },
                "putDOCUActionunlinkDocumentsWithId": {
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/paths/~1docu~1report/get/parameters/1/content/application~1json/schema",
                          "x-miro": "swagger/v10.0/schemas/resources/DOCU/read.json"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "editDOCUByID": {
                    "value": {}
                  },
                  "putDOCUActioncalculateDataExtensionWithId": {
                    "value": {}
                  },
                  "putDOCUActioncheckInWithId": {
                    "value": {}
                  },
                  "putDOCUActioncheckOutWithId": {
                    "value": {}
                  },
                  "putDOCUActioncreateProofWithId": {
                    "value": {}
                  },
                  "putDOCUActiongetTotalSizeForDocumentsWithId": {
                    "value": {}
                  },
                  "putDOCUActionisLinkedDocumentWithId": {
                    "value": {}
                  },
                  "putDOCUActionisProofAutoGenrationEnabledWithId": {
                    "value": {}
                  },
                  "putDOCUActionmoveWithId": {
                    "value": {}
                  },
                  "putDOCUActionunlinkDocumentsWithId": {
                    "value": {}
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getDOCUByID",
        "summary": "Document Search",
        "description": "Searches through the Document objects",
        "tags": [
          "DOCU",
          "search"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1docu~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "$ref": "#/paths/~1docu/post/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/fields.yml"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/paths/~1docu~1report/get/parameters/1/content/application~1json/schema",
                          "x-miro": "swagger/v10.0/schemas/resources/DOCU/read.json"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/docu/report": {
      "get": {
        "operationId": "getDOCUReport",
        "summary": "Document Report",
        "description": "Returns an aggregate of information about Document objects",
        "tags": [
          "DOCU",
          "report"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "updates",
            "description": "JSON object whose fields represent the fields of the resource to set",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1docu/post/requestBody/content/application~1json/schema",
                  "x-miro": "swagger/v10.0/schemas/resources/DOCU/write.json"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "filters",
            "description": "JSON object whose fields represent the fields of the resource to filter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "accessorIDs": {
                      "$ref": "#/paths/~1docu/put/parameters/2/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                    },
                    "advancedProofingOptions": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "categoryID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "checkOutTimestamp": {
                      "$ref": "#/paths/~1docu/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "checkedOutByID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "createProof": {
                      "$ref": "#/paths/~1docu/put/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "currentVersionID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "customerID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "description": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "docObjCode": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "documentRequestID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "downloadURL": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "extRefID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "hasNotes": {
                      "$ref": "#/paths/~1docu/put/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "isPrivate": {
                      "$ref": "#/paths/~1docu/put/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "isPublic": {
                      "$ref": "#/paths/~1docu/put/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                    },
                    "iterationID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "lastModDate": {
                      "$ref": "#/paths/~1docu/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "lastNoteID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "lastSyncDate": {
                      "$ref": "#/paths/~1docu/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "lastUpdateDate": {
                      "$ref": "#/paths/~1docu/post/parameters/5/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
                    },
                    "lastUpdatedByID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "lastVersionNum": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "name": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "objID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "opTaskID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "ownerID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "portfolioID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "previewURL": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "programID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "projectID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "publicToken": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "referenceNumber": {
                      "$ref": "#/paths/~1docu/post/parameters/39/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
                    },
                    "referenceObjCode": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "referenceObjID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "referenceObjectClosed": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "referenceObjectName": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "releaseVersionID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "securityRootID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "securityRootObjCode": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "taskID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "templateID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "templateTaskID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "topDocObjCode": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "topObjID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    },
                    "userID": {
                      "$ref": "#/paths/~1docu/put/parameters/1/schema",
                      "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                    }
                  }
                }
              }
            }
          },
          {
            "in": "query",
            "name": "ID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for ID"
          },
          {
            "in": "query",
            "name": "categoryID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Category ID"
          },
          {
            "in": "query",
            "name": "checkOutTimestamp",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for checkOutTimestamp"
          },
          {
            "in": "query",
            "name": "checkedOutByID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for checkedOutByID"
          },
          {
            "in": "query",
            "name": "currentVersionID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Current Version ID"
          },
          {
            "in": "query",
            "name": "customerID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Customer ID"
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Description"
          },
          {
            "in": "query",
            "name": "docObjCode",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Document Type"
          },
          {
            "in": "query",
            "name": "documentRequestID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for documentRequestID"
          },
          {
            "in": "query",
            "name": "extRefID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for External Reference ID"
          },
          {
            "in": "query",
            "name": "hasNotes",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Has Notes"
          },
          {
            "in": "query",
            "name": "isPrivate",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Is Private"
          },
          {
            "in": "query",
            "name": "isPublic",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "filter results with the given field value for Is Public"
          },
          {
            "in": "query",
            "name": "iterationID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Iteration ID"
          },
          {
            "in": "query",
            "name": "lastModDate",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Last Modified"
          },
          {
            "in": "query",
            "name": "lastNoteID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Last Note ID"
          },
          {
            "in": "query",
            "name": "lastSyncDate",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for lastSyncDate"
          },
          {
            "in": "query",
            "name": "lastUpdateDate",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            },
            "required": false,
            "description": "filter results with the given field value for Last Update Date"
          },
          {
            "in": "query",
            "name": "lastUpdatedByID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Last Updated By ID"
          },
          {
            "in": "query",
            "name": "lastVersionNum",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for lastVersionNum"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Name"
          },
          {
            "in": "query",
            "name": "objID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for ObjID"
          },
          {
            "in": "query",
            "name": "opTaskID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Issue ID"
          },
          {
            "in": "query",
            "name": "ownerID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Owner ID"
          },
          {
            "in": "query",
            "name": "portfolioID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Portfolio ID"
          },
          {
            "in": "query",
            "name": "programID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Program ID"
          },
          {
            "in": "query",
            "name": "projectID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Project ID"
          },
          {
            "in": "query",
            "name": "publicToken",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for publicToken"
          },
          {
            "in": "query",
            "name": "referenceNumber",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            },
            "required": false,
            "description": "filter results with the given field value for Reference Number"
          },
          {
            "in": "query",
            "name": "releaseVersionID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Release Version ID"
          },
          {
            "in": "query",
            "name": "securityRootID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for securityRootID"
          },
          {
            "in": "query",
            "name": "securityRootObjCode",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for securityRootObjCode"
          },
          {
            "in": "query",
            "name": "taskID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Task ID"
          },
          {
            "in": "query",
            "name": "templateID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Template ID"
          },
          {
            "in": "query",
            "name": "templateTaskID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Template Task ID"
          },
          {
            "in": "query",
            "name": "topDocObjCode",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Top Document Type"
          },
          {
            "in": "query",
            "name": "topObjID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for Top ObjID"
          },
          {
            "in": "query",
            "name": "userID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            },
            "required": false,
            "description": "filter results with the given field value for User ID"
          },
          {
            "in": "query",
            "name": "ID_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by ID 4th"
          },
          {
            "in": "query",
            "name": "checkOutTimestamp_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by checkOutTimestamp 4th"
          },
          {
            "in": "query",
            "name": "description_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Description 4th"
          },
          {
            "in": "query",
            "name": "extRefID_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by External Reference ID 4th"
          },
          {
            "in": "query",
            "name": "hasNotes_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Notes 4th"
          },
          {
            "in": "query",
            "name": "isPrivate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Is Private 4th"
          },
          {
            "in": "query",
            "name": "lastUpdateDate_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Last Update Date 4th"
          },
          {
            "in": "query",
            "name": "name_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Name 4th"
          },
          {
            "in": "query",
            "name": "referenceNumber_4_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Reference Number 4th"
          },
          {
            "in": "query",
            "name": "ID_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by ID 3rd"
          },
          {
            "in": "query",
            "name": "checkOutTimestamp_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by checkOutTimestamp 3rd"
          },
          {
            "in": "query",
            "name": "description_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Description 3rd"
          },
          {
            "in": "query",
            "name": "extRefID_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by External Reference ID 3rd"
          },
          {
            "in": "query",
            "name": "hasNotes_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Notes 3rd"
          },
          {
            "in": "query",
            "name": "isPrivate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Is Private 3rd"
          },
          {
            "in": "query",
            "name": "lastUpdateDate_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Last Update Date 3rd"
          },
          {
            "in": "query",
            "name": "name_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Name 3rd"
          },
          {
            "in": "query",
            "name": "referenceNumber_3_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Reference Number 3rd"
          },
          {
            "in": "query",
            "name": "ID_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by ID 2nd"
          },
          {
            "in": "query",
            "name": "checkOutTimestamp_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by checkOutTimestamp 2nd"
          },
          {
            "in": "query",
            "name": "description_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Description 2nd"
          },
          {
            "in": "query",
            "name": "extRefID_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by External Reference ID 2nd"
          },
          {
            "in": "query",
            "name": "hasNotes_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Notes 2nd"
          },
          {
            "in": "query",
            "name": "isPrivate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Is Private 2nd"
          },
          {
            "in": "query",
            "name": "lastUpdateDate_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Last Update Date 2nd"
          },
          {
            "in": "query",
            "name": "name_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Name 2nd"
          },
          {
            "in": "query",
            "name": "referenceNumber_2_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Reference Number 2nd"
          },
          {
            "in": "query",
            "name": "ID_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by ID 1st"
          },
          {
            "in": "query",
            "name": "checkOutTimestamp_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by checkOutTimestamp 1st"
          },
          {
            "in": "query",
            "name": "description_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Description 1st"
          },
          {
            "in": "query",
            "name": "extRefID_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by External Reference ID 1st"
          },
          {
            "in": "query",
            "name": "hasNotes_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Notes 1st"
          },
          {
            "in": "query",
            "name": "isPrivate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Is Private 1st"
          },
          {
            "in": "query",
            "name": "lastUpdateDate_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Last Update Date 1st"
          },
          {
            "in": "query",
            "name": "name_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Name 1st"
          },
          {
            "in": "query",
            "name": "referenceNumber_1_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Reference Number 1st"
          },
          {
            "in": "query",
            "name": "ID_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by ID 0th"
          },
          {
            "in": "query",
            "name": "checkOutTimestamp_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by checkOutTimestamp 0th"
          },
          {
            "in": "query",
            "name": "description_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Description 0th"
          },
          {
            "in": "query",
            "name": "extRefID_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by External Reference ID 0th"
          },
          {
            "in": "query",
            "name": "hasNotes_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Has Notes 0th"
          },
          {
            "in": "query",
            "name": "isPrivate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Is Private 0th"
          },
          {
            "in": "query",
            "name": "lastUpdateDate_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Last Update Date 0th"
          },
          {
            "in": "query",
            "name": "name_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Name 0th"
          },
          {
            "in": "query",
            "name": "referenceNumber_GroupBy",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Group by Reference Number 0th"
          },
          {
            "in": "query",
            "name": "ID_AggFunc",
            "schema": {
              "type": "string",
              "enum": [
                "avg",
                "count",
                "max",
                "min",
                "sum"
              ]
            },
            "required": false,
            "description": "Aggregate ID using the specified function"
          },
          {
            "in": "query",
            "name": "accessorIDs_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate accessorIDs using the specified function"
          },
          {
            "in": "query",
            "name": "advancedProofingOptions_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate advancedProofingOptions using the specified function"
          },
          {
            "in": "query",
            "name": "categoryID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Category ID using the specified function"
          },
          {
            "in": "query",
            "name": "checkOutTimestamp_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate checkOutTimestamp using the specified function"
          },
          {
            "in": "query",
            "name": "checkedOutByID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate checkedOutByID using the specified function"
          },
          {
            "in": "query",
            "name": "createProof_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate createProof using the specified function"
          },
          {
            "in": "query",
            "name": "currentVersionID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Current Version ID using the specified function"
          },
          {
            "in": "query",
            "name": "customerID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Customer ID using the specified function"
          },
          {
            "in": "query",
            "name": "description_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Description using the specified function"
          },
          {
            "in": "query",
            "name": "docObjCode_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Document Type using the specified function"
          },
          {
            "in": "query",
            "name": "documentRequestID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate documentRequestID using the specified function"
          },
          {
            "in": "query",
            "name": "downloadURL_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate downloadURL using the specified function"
          },
          {
            "in": "query",
            "name": "extRefID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate External Reference ID using the specified function"
          },
          {
            "in": "query",
            "name": "hasNotes_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Has Notes using the specified function"
          },
          {
            "in": "query",
            "name": "isPrivate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Is Private using the specified function"
          },
          {
            "in": "query",
            "name": "isPublic_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Is Public using the specified function"
          },
          {
            "in": "query",
            "name": "iterationID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Iteration ID using the specified function"
          },
          {
            "in": "query",
            "name": "lastModDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Last Modified using the specified function"
          },
          {
            "in": "query",
            "name": "lastNoteID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Last Note ID using the specified function"
          },
          {
            "in": "query",
            "name": "lastSyncDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate lastSyncDate using the specified function"
          },
          {
            "in": "query",
            "name": "lastUpdateDate_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Last Update Date using the specified function"
          },
          {
            "in": "query",
            "name": "lastUpdatedByID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Last Updated By ID using the specified function"
          },
          {
            "in": "query",
            "name": "lastVersionNum_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate lastVersionNum using the specified function"
          },
          {
            "in": "query",
            "name": "name_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Name using the specified function"
          },
          {
            "in": "query",
            "name": "objID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate ObjID using the specified function"
          },
          {
            "in": "query",
            "name": "opTaskID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Issue ID using the specified function"
          },
          {
            "in": "query",
            "name": "ownerID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Owner ID using the specified function"
          },
          {
            "in": "query",
            "name": "portfolioID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Portfolio ID using the specified function"
          },
          {
            "in": "query",
            "name": "previewURL_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate previewURL using the specified function"
          },
          {
            "in": "query",
            "name": "programID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Program ID using the specified function"
          },
          {
            "in": "query",
            "name": "projectID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Project ID using the specified function"
          },
          {
            "in": "query",
            "name": "publicToken_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate publicToken using the specified function"
          },
          {
            "in": "query",
            "name": "referenceNumber_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Reference Number using the specified function"
          },
          {
            "in": "query",
            "name": "referenceObjCode_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate referenceObjCode using the specified function"
          },
          {
            "in": "query",
            "name": "referenceObjID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate referenceObjID using the specified function"
          },
          {
            "in": "query",
            "name": "referenceObjectClosed_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate referenceObjectClosed using the specified function"
          },
          {
            "in": "query",
            "name": "referenceObjectName_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate referenceObjectName using the specified function"
          },
          {
            "in": "query",
            "name": "releaseVersionID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Release Version ID using the specified function"
          },
          {
            "in": "query",
            "name": "securityRootID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate securityRootID using the specified function"
          },
          {
            "in": "query",
            "name": "securityRootObjCode_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate securityRootObjCode using the specified function"
          },
          {
            "in": "query",
            "name": "taskID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Task ID using the specified function"
          },
          {
            "in": "query",
            "name": "templateID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Template ID using the specified function"
          },
          {
            "in": "query",
            "name": "templateTaskID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Template Task ID using the specified function"
          },
          {
            "in": "query",
            "name": "topDocObjCode_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Top Document Type using the specified function"
          },
          {
            "in": "query",
            "name": "topObjID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate Top ObjID using the specified function"
          },
          {
            "in": "query",
            "name": "userID_AggFunc",
            "schema": {
              "$ref": "#/paths/~1docu~1report/get/parameters/85/schema",
              "x-miro": "swagger/v10.0/schemas/field_AggFunc.yml"
            },
            "required": false,
            "description": "Aggregate User ID using the specified function"
          },
          {
            "in": "query",
            "name": "$$ROLLUP",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            },
            "required": false,
            "description": "Causes an aggregate total to be returned at each grouping level"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "$$ROLLUP": {
                              "type": "object",
                              "additionalProperties": {}
                            }
                          },
                          "additionalProperties": {}
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/docu/search": {
      "get": {
        "operationId": "getDOCUSearch",
        "summary": "Document Search",
        "description": "Searches through the Document objects",
        "tags": [
          "DOCU",
          "search"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "filters",
            "description": "JSON object whose fields represent the fields of the resource to filter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1docu~1report/get/parameters/1/content/application~1json/schema",
                  "x-miro": "swagger/v10.0/schemas/resources/DOCU/read.json"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "OR:4:ID",
            "description": "Filter results by OR group 4 applied to ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:categoryID",
            "description": "Filter results by OR group 4 applied to Category ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:checkOutTimestamp",
            "description": "Filter results by OR group 4 applied to checkOutTimestamp. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:checkedOutByID",
            "description": "Filter results by OR group 4 applied to checkedOutByID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:currentVersionID",
            "description": "Filter results by OR group 4 applied to Current Version ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:customerID",
            "description": "Filter results by OR group 4 applied to Customer ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:description",
            "description": "Filter results by OR group 4 applied to Description. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:docObjCode",
            "description": "Filter results by OR group 4 applied to Document Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:documentRequestID",
            "description": "Filter results by OR group 4 applied to documentRequestID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:extRefID",
            "description": "Filter results by OR group 4 applied to External Reference ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasNotes",
            "description": "Filter results by OR group 4 applied to Has Notes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isPrivate",
            "description": "Filter results by OR group 4 applied to Is Private. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isPublic",
            "description": "Filter results by OR group 4 applied to Is Public. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:iterationID",
            "description": "Filter results by OR group 4 applied to Iteration ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastModDate",
            "description": "Filter results by OR group 4 applied to Last Modified. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastNoteID",
            "description": "Filter results by OR group 4 applied to Last Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastSyncDate",
            "description": "Filter results by OR group 4 applied to lastSyncDate. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastUpdateDate",
            "description": "Filter results by OR group 4 applied to Last Update Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastUpdatedByID",
            "description": "Filter results by OR group 4 applied to Last Updated By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastVersionNum",
            "description": "Filter results by OR group 4 applied to lastVersionNum. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:name",
            "description": "Filter results by OR group 4 applied to Name. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:objID",
            "description": "Filter results by OR group 4 applied to ObjID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:opTaskID",
            "description": "Filter results by OR group 4 applied to Issue ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:ownerID",
            "description": "Filter results by OR group 4 applied to Owner ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:portfolioID",
            "description": "Filter results by OR group 4 applied to Portfolio ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:programID",
            "description": "Filter results by OR group 4 applied to Program ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:projectID",
            "description": "Filter results by OR group 4 applied to Project ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:publicToken",
            "description": "Filter results by OR group 4 applied to publicToken. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:referenceNumber",
            "description": "Filter results by OR group 4 applied to Reference Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:releaseVersionID",
            "description": "Filter results by OR group 4 applied to Release Version ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:securityRootID",
            "description": "Filter results by OR group 4 applied to securityRootID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:securityRootObjCode",
            "description": "Filter results by OR group 4 applied to securityRootObjCode. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:taskID",
            "description": "Filter results by OR group 4 applied to Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:templateID",
            "description": "Filter results by OR group 4 applied to Template ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:templateTaskID",
            "description": "Filter results by OR group 4 applied to Template Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:topDocObjCode",
            "description": "Filter results by OR group 4 applied to Top Document Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:topObjID",
            "description": "Filter results by OR group 4 applied to Top ObjID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:userID",
            "description": "Filter results by OR group 4 applied to User ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:4:ID_Mod",
            "description": "Filter results by ID using the specified operation. Requires the field `OR:4:ID`.",
            "schema": {
              "type": "string",
              "enum": [
                "eq",
                "ne",
                "in",
                "notin",
                "between",
                "notbetween",
                "lt",
                "lte",
                "gt",
                "gte",
                "contains",
                "notcontains",
                "isnull",
                "notnull",
                "like",
                "isblank",
                "notblank",
                "soundex",
                "cicontains",
                "cinotcontains",
                "cieq",
                "cine"
              ]
            }
          },
          {
            "in": "query",
            "name": "OR:4:categoryID_Mod",
            "description": "Filter results by Category ID using the specified operation. Requires the field `OR:4:categoryID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:checkOutTimestamp_Mod",
            "description": "Filter results by checkOutTimestamp using the specified operation. Requires the field `OR:4:checkOutTimestamp`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:checkedOutByID_Mod",
            "description": "Filter results by checkedOutByID using the specified operation. Requires the field `OR:4:checkedOutByID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:currentVersionID_Mod",
            "description": "Filter results by Current Version ID using the specified operation. Requires the field `OR:4:currentVersionID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:customerID_Mod",
            "description": "Filter results by Customer ID using the specified operation. Requires the field `OR:4:customerID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:description_Mod",
            "description": "Filter results by Description using the specified operation. Requires the field `OR:4:description`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:docObjCode_Mod",
            "description": "Filter results by Document Type using the specified operation. Requires the field `OR:4:docObjCode`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:documentRequestID_Mod",
            "description": "Filter results by documentRequestID using the specified operation. Requires the field `OR:4:documentRequestID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:extRefID_Mod",
            "description": "Filter results by External Reference ID using the specified operation. Requires the field `OR:4:extRefID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:hasNotes_Mod",
            "description": "Filter results by Has Notes using the specified operation. Requires the field `OR:4:hasNotes`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isPrivate_Mod",
            "description": "Filter results by Is Private using the specified operation. Requires the field `OR:4:isPrivate`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:isPublic_Mod",
            "description": "Filter results by Is Public using the specified operation. Requires the field `OR:4:isPublic`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:iterationID_Mod",
            "description": "Filter results by Iteration ID using the specified operation. Requires the field `OR:4:iterationID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastModDate_Mod",
            "description": "Filter results by Last Modified using the specified operation. Requires the field `OR:4:lastModDate`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastNoteID_Mod",
            "description": "Filter results by Last Note ID using the specified operation. Requires the field `OR:4:lastNoteID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastSyncDate_Mod",
            "description": "Filter results by lastSyncDate using the specified operation. Requires the field `OR:4:lastSyncDate`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastUpdateDate_Mod",
            "description": "Filter results by Last Update Date using the specified operation. Requires the field `OR:4:lastUpdateDate`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastUpdatedByID_Mod",
            "description": "Filter results by Last Updated By ID using the specified operation. Requires the field `OR:4:lastUpdatedByID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:lastVersionNum_Mod",
            "description": "Filter results by lastVersionNum using the specified operation. Requires the field `OR:4:lastVersionNum`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:name_Mod",
            "description": "Filter results by Name using the specified operation. Requires the field `OR:4:name`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:objID_Mod",
            "description": "Filter results by ObjID using the specified operation. Requires the field `OR:4:objID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:opTaskID_Mod",
            "description": "Filter results by Issue ID using the specified operation. Requires the field `OR:4:opTaskID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:ownerID_Mod",
            "description": "Filter results by Owner ID using the specified operation. Requires the field `OR:4:ownerID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:portfolioID_Mod",
            "description": "Filter results by Portfolio ID using the specified operation. Requires the field `OR:4:portfolioID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:programID_Mod",
            "description": "Filter results by Program ID using the specified operation. Requires the field `OR:4:programID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:projectID_Mod",
            "description": "Filter results by Project ID using the specified operation. Requires the field `OR:4:projectID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:publicToken_Mod",
            "description": "Filter results by publicToken using the specified operation. Requires the field `OR:4:publicToken`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:referenceNumber_Mod",
            "description": "Filter results by Reference Number using the specified operation. Requires the field `OR:4:referenceNumber`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:releaseVersionID_Mod",
            "description": "Filter results by Release Version ID using the specified operation. Requires the field `OR:4:releaseVersionID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:securityRootID_Mod",
            "description": "Filter results by securityRootID using the specified operation. Requires the field `OR:4:securityRootID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:securityRootObjCode_Mod",
            "description": "Filter results by securityRootObjCode using the specified operation. Requires the field `OR:4:securityRootObjCode`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:taskID_Mod",
            "description": "Filter results by Task ID using the specified operation. Requires the field `OR:4:taskID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:templateID_Mod",
            "description": "Filter results by Template ID using the specified operation. Requires the field `OR:4:templateID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:templateTaskID_Mod",
            "description": "Filter results by Template Task ID using the specified operation. Requires the field `OR:4:templateTaskID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:topDocObjCode_Mod",
            "description": "Filter results by Top Document Type using the specified operation. Requires the field `OR:4:topDocObjCode`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:topObjID_Mod",
            "description": "Filter results by Top ObjID using the specified operation. Requires the field `OR:4:topObjID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:4:userID_Mod",
            "description": "Filter results by User ID using the specified operation. Requires the field `OR:4:userID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:ID",
            "description": "Filter results by OR group 3 applied to ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:categoryID",
            "description": "Filter results by OR group 3 applied to Category ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:checkOutTimestamp",
            "description": "Filter results by OR group 3 applied to checkOutTimestamp. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:checkedOutByID",
            "description": "Filter results by OR group 3 applied to checkedOutByID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:currentVersionID",
            "description": "Filter results by OR group 3 applied to Current Version ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:customerID",
            "description": "Filter results by OR group 3 applied to Customer ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:description",
            "description": "Filter results by OR group 3 applied to Description. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:docObjCode",
            "description": "Filter results by OR group 3 applied to Document Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:documentRequestID",
            "description": "Filter results by OR group 3 applied to documentRequestID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:extRefID",
            "description": "Filter results by OR group 3 applied to External Reference ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasNotes",
            "description": "Filter results by OR group 3 applied to Has Notes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isPrivate",
            "description": "Filter results by OR group 3 applied to Is Private. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isPublic",
            "description": "Filter results by OR group 3 applied to Is Public. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:iterationID",
            "description": "Filter results by OR group 3 applied to Iteration ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastModDate",
            "description": "Filter results by OR group 3 applied to Last Modified. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastNoteID",
            "description": "Filter results by OR group 3 applied to Last Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastSyncDate",
            "description": "Filter results by OR group 3 applied to lastSyncDate. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastUpdateDate",
            "description": "Filter results by OR group 3 applied to Last Update Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastUpdatedByID",
            "description": "Filter results by OR group 3 applied to Last Updated By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastVersionNum",
            "description": "Filter results by OR group 3 applied to lastVersionNum. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:name",
            "description": "Filter results by OR group 3 applied to Name. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:objID",
            "description": "Filter results by OR group 3 applied to ObjID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:opTaskID",
            "description": "Filter results by OR group 3 applied to Issue ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:ownerID",
            "description": "Filter results by OR group 3 applied to Owner ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:portfolioID",
            "description": "Filter results by OR group 3 applied to Portfolio ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:programID",
            "description": "Filter results by OR group 3 applied to Program ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:projectID",
            "description": "Filter results by OR group 3 applied to Project ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:publicToken",
            "description": "Filter results by OR group 3 applied to publicToken. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:referenceNumber",
            "description": "Filter results by OR group 3 applied to Reference Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:releaseVersionID",
            "description": "Filter results by OR group 3 applied to Release Version ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:securityRootID",
            "description": "Filter results by OR group 3 applied to securityRootID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:securityRootObjCode",
            "description": "Filter results by OR group 3 applied to securityRootObjCode. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:taskID",
            "description": "Filter results by OR group 3 applied to Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:templateID",
            "description": "Filter results by OR group 3 applied to Template ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:templateTaskID",
            "description": "Filter results by OR group 3 applied to Template Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:topDocObjCode",
            "description": "Filter results by OR group 3 applied to Top Document Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:topObjID",
            "description": "Filter results by OR group 3 applied to Top ObjID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:userID",
            "description": "Filter results by OR group 3 applied to User ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:3:ID_Mod",
            "description": "Filter results by ID using the specified operation. Requires the field `OR:3:ID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:categoryID_Mod",
            "description": "Filter results by Category ID using the specified operation. Requires the field `OR:3:categoryID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:checkOutTimestamp_Mod",
            "description": "Filter results by checkOutTimestamp using the specified operation. Requires the field `OR:3:checkOutTimestamp`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:checkedOutByID_Mod",
            "description": "Filter results by checkedOutByID using the specified operation. Requires the field `OR:3:checkedOutByID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:currentVersionID_Mod",
            "description": "Filter results by Current Version ID using the specified operation. Requires the field `OR:3:currentVersionID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:customerID_Mod",
            "description": "Filter results by Customer ID using the specified operation. Requires the field `OR:3:customerID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:description_Mod",
            "description": "Filter results by Description using the specified operation. Requires the field `OR:3:description`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:docObjCode_Mod",
            "description": "Filter results by Document Type using the specified operation. Requires the field `OR:3:docObjCode`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:documentRequestID_Mod",
            "description": "Filter results by documentRequestID using the specified operation. Requires the field `OR:3:documentRequestID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:extRefID_Mod",
            "description": "Filter results by External Reference ID using the specified operation. Requires the field `OR:3:extRefID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:hasNotes_Mod",
            "description": "Filter results by Has Notes using the specified operation. Requires the field `OR:3:hasNotes`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isPrivate_Mod",
            "description": "Filter results by Is Private using the specified operation. Requires the field `OR:3:isPrivate`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:isPublic_Mod",
            "description": "Filter results by Is Public using the specified operation. Requires the field `OR:3:isPublic`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:iterationID_Mod",
            "description": "Filter results by Iteration ID using the specified operation. Requires the field `OR:3:iterationID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastModDate_Mod",
            "description": "Filter results by Last Modified using the specified operation. Requires the field `OR:3:lastModDate`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastNoteID_Mod",
            "description": "Filter results by Last Note ID using the specified operation. Requires the field `OR:3:lastNoteID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastSyncDate_Mod",
            "description": "Filter results by lastSyncDate using the specified operation. Requires the field `OR:3:lastSyncDate`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastUpdateDate_Mod",
            "description": "Filter results by Last Update Date using the specified operation. Requires the field `OR:3:lastUpdateDate`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastUpdatedByID_Mod",
            "description": "Filter results by Last Updated By ID using the specified operation. Requires the field `OR:3:lastUpdatedByID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:lastVersionNum_Mod",
            "description": "Filter results by lastVersionNum using the specified operation. Requires the field `OR:3:lastVersionNum`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:name_Mod",
            "description": "Filter results by Name using the specified operation. Requires the field `OR:3:name`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:objID_Mod",
            "description": "Filter results by ObjID using the specified operation. Requires the field `OR:3:objID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:opTaskID_Mod",
            "description": "Filter results by Issue ID using the specified operation. Requires the field `OR:3:opTaskID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:ownerID_Mod",
            "description": "Filter results by Owner ID using the specified operation. Requires the field `OR:3:ownerID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:portfolioID_Mod",
            "description": "Filter results by Portfolio ID using the specified operation. Requires the field `OR:3:portfolioID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:programID_Mod",
            "description": "Filter results by Program ID using the specified operation. Requires the field `OR:3:programID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:projectID_Mod",
            "description": "Filter results by Project ID using the specified operation. Requires the field `OR:3:projectID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:publicToken_Mod",
            "description": "Filter results by publicToken using the specified operation. Requires the field `OR:3:publicToken`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:referenceNumber_Mod",
            "description": "Filter results by Reference Number using the specified operation. Requires the field `OR:3:referenceNumber`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:releaseVersionID_Mod",
            "description": "Filter results by Release Version ID using the specified operation. Requires the field `OR:3:releaseVersionID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:securityRootID_Mod",
            "description": "Filter results by securityRootID using the specified operation. Requires the field `OR:3:securityRootID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:securityRootObjCode_Mod",
            "description": "Filter results by securityRootObjCode using the specified operation. Requires the field `OR:3:securityRootObjCode`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:taskID_Mod",
            "description": "Filter results by Task ID using the specified operation. Requires the field `OR:3:taskID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:templateID_Mod",
            "description": "Filter results by Template ID using the specified operation. Requires the field `OR:3:templateID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:templateTaskID_Mod",
            "description": "Filter results by Template Task ID using the specified operation. Requires the field `OR:3:templateTaskID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:topDocObjCode_Mod",
            "description": "Filter results by Top Document Type using the specified operation. Requires the field `OR:3:topDocObjCode`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:topObjID_Mod",
            "description": "Filter results by Top ObjID using the specified operation. Requires the field `OR:3:topObjID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:3:userID_Mod",
            "description": "Filter results by User ID using the specified operation. Requires the field `OR:3:userID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:ID",
            "description": "Filter results by OR group 2 applied to ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:categoryID",
            "description": "Filter results by OR group 2 applied to Category ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:checkOutTimestamp",
            "description": "Filter results by OR group 2 applied to checkOutTimestamp. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:checkedOutByID",
            "description": "Filter results by OR group 2 applied to checkedOutByID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:currentVersionID",
            "description": "Filter results by OR group 2 applied to Current Version ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:customerID",
            "description": "Filter results by OR group 2 applied to Customer ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:description",
            "description": "Filter results by OR group 2 applied to Description. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:docObjCode",
            "description": "Filter results by OR group 2 applied to Document Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:documentRequestID",
            "description": "Filter results by OR group 2 applied to documentRequestID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:extRefID",
            "description": "Filter results by OR group 2 applied to External Reference ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasNotes",
            "description": "Filter results by OR group 2 applied to Has Notes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isPrivate",
            "description": "Filter results by OR group 2 applied to Is Private. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isPublic",
            "description": "Filter results by OR group 2 applied to Is Public. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:iterationID",
            "description": "Filter results by OR group 2 applied to Iteration ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastModDate",
            "description": "Filter results by OR group 2 applied to Last Modified. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastNoteID",
            "description": "Filter results by OR group 2 applied to Last Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastSyncDate",
            "description": "Filter results by OR group 2 applied to lastSyncDate. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastUpdateDate",
            "description": "Filter results by OR group 2 applied to Last Update Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastUpdatedByID",
            "description": "Filter results by OR group 2 applied to Last Updated By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastVersionNum",
            "description": "Filter results by OR group 2 applied to lastVersionNum. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:name",
            "description": "Filter results by OR group 2 applied to Name. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:objID",
            "description": "Filter results by OR group 2 applied to ObjID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:opTaskID",
            "description": "Filter results by OR group 2 applied to Issue ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:ownerID",
            "description": "Filter results by OR group 2 applied to Owner ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:portfolioID",
            "description": "Filter results by OR group 2 applied to Portfolio ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:programID",
            "description": "Filter results by OR group 2 applied to Program ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:projectID",
            "description": "Filter results by OR group 2 applied to Project ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:publicToken",
            "description": "Filter results by OR group 2 applied to publicToken. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:referenceNumber",
            "description": "Filter results by OR group 2 applied to Reference Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:releaseVersionID",
            "description": "Filter results by OR group 2 applied to Release Version ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:securityRootID",
            "description": "Filter results by OR group 2 applied to securityRootID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:securityRootObjCode",
            "description": "Filter results by OR group 2 applied to securityRootObjCode. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:taskID",
            "description": "Filter results by OR group 2 applied to Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:templateID",
            "description": "Filter results by OR group 2 applied to Template ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:templateTaskID",
            "description": "Filter results by OR group 2 applied to Template Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:topDocObjCode",
            "description": "Filter results by OR group 2 applied to Top Document Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:topObjID",
            "description": "Filter results by OR group 2 applied to Top ObjID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:userID",
            "description": "Filter results by OR group 2 applied to User ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:2:ID_Mod",
            "description": "Filter results by ID using the specified operation. Requires the field `OR:2:ID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:categoryID_Mod",
            "description": "Filter results by Category ID using the specified operation. Requires the field `OR:2:categoryID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:checkOutTimestamp_Mod",
            "description": "Filter results by checkOutTimestamp using the specified operation. Requires the field `OR:2:checkOutTimestamp`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:checkedOutByID_Mod",
            "description": "Filter results by checkedOutByID using the specified operation. Requires the field `OR:2:checkedOutByID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:currentVersionID_Mod",
            "description": "Filter results by Current Version ID using the specified operation. Requires the field `OR:2:currentVersionID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:customerID_Mod",
            "description": "Filter results by Customer ID using the specified operation. Requires the field `OR:2:customerID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:description_Mod",
            "description": "Filter results by Description using the specified operation. Requires the field `OR:2:description`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:docObjCode_Mod",
            "description": "Filter results by Document Type using the specified operation. Requires the field `OR:2:docObjCode`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:documentRequestID_Mod",
            "description": "Filter results by documentRequestID using the specified operation. Requires the field `OR:2:documentRequestID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:extRefID_Mod",
            "description": "Filter results by External Reference ID using the specified operation. Requires the field `OR:2:extRefID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:hasNotes_Mod",
            "description": "Filter results by Has Notes using the specified operation. Requires the field `OR:2:hasNotes`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isPrivate_Mod",
            "description": "Filter results by Is Private using the specified operation. Requires the field `OR:2:isPrivate`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:isPublic_Mod",
            "description": "Filter results by Is Public using the specified operation. Requires the field `OR:2:isPublic`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:iterationID_Mod",
            "description": "Filter results by Iteration ID using the specified operation. Requires the field `OR:2:iterationID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastModDate_Mod",
            "description": "Filter results by Last Modified using the specified operation. Requires the field `OR:2:lastModDate`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastNoteID_Mod",
            "description": "Filter results by Last Note ID using the specified operation. Requires the field `OR:2:lastNoteID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastSyncDate_Mod",
            "description": "Filter results by lastSyncDate using the specified operation. Requires the field `OR:2:lastSyncDate`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastUpdateDate_Mod",
            "description": "Filter results by Last Update Date using the specified operation. Requires the field `OR:2:lastUpdateDate`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastUpdatedByID_Mod",
            "description": "Filter results by Last Updated By ID using the specified operation. Requires the field `OR:2:lastUpdatedByID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:lastVersionNum_Mod",
            "description": "Filter results by lastVersionNum using the specified operation. Requires the field `OR:2:lastVersionNum`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:name_Mod",
            "description": "Filter results by Name using the specified operation. Requires the field `OR:2:name`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:objID_Mod",
            "description": "Filter results by ObjID using the specified operation. Requires the field `OR:2:objID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:opTaskID_Mod",
            "description": "Filter results by Issue ID using the specified operation. Requires the field `OR:2:opTaskID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:ownerID_Mod",
            "description": "Filter results by Owner ID using the specified operation. Requires the field `OR:2:ownerID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:portfolioID_Mod",
            "description": "Filter results by Portfolio ID using the specified operation. Requires the field `OR:2:portfolioID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:programID_Mod",
            "description": "Filter results by Program ID using the specified operation. Requires the field `OR:2:programID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:projectID_Mod",
            "description": "Filter results by Project ID using the specified operation. Requires the field `OR:2:projectID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:publicToken_Mod",
            "description": "Filter results by publicToken using the specified operation. Requires the field `OR:2:publicToken`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:referenceNumber_Mod",
            "description": "Filter results by Reference Number using the specified operation. Requires the field `OR:2:referenceNumber`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:releaseVersionID_Mod",
            "description": "Filter results by Release Version ID using the specified operation. Requires the field `OR:2:releaseVersionID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:securityRootID_Mod",
            "description": "Filter results by securityRootID using the specified operation. Requires the field `OR:2:securityRootID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:securityRootObjCode_Mod",
            "description": "Filter results by securityRootObjCode using the specified operation. Requires the field `OR:2:securityRootObjCode`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:taskID_Mod",
            "description": "Filter results by Task ID using the specified operation. Requires the field `OR:2:taskID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:templateID_Mod",
            "description": "Filter results by Template ID using the specified operation. Requires the field `OR:2:templateID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:templateTaskID_Mod",
            "description": "Filter results by Template Task ID using the specified operation. Requires the field `OR:2:templateTaskID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:topDocObjCode_Mod",
            "description": "Filter results by Top Document Type using the specified operation. Requires the field `OR:2:topDocObjCode`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:topObjID_Mod",
            "description": "Filter results by Top ObjID using the specified operation. Requires the field `OR:2:topObjID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:2:userID_Mod",
            "description": "Filter results by User ID using the specified operation. Requires the field `OR:2:userID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:ID",
            "description": "Filter results by OR group 1 applied to ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:categoryID",
            "description": "Filter results by OR group 1 applied to Category ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:checkOutTimestamp",
            "description": "Filter results by OR group 1 applied to checkOutTimestamp. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:checkedOutByID",
            "description": "Filter results by OR group 1 applied to checkedOutByID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:currentVersionID",
            "description": "Filter results by OR group 1 applied to Current Version ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:customerID",
            "description": "Filter results by OR group 1 applied to Customer ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:description",
            "description": "Filter results by OR group 1 applied to Description. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:docObjCode",
            "description": "Filter results by OR group 1 applied to Document Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:documentRequestID",
            "description": "Filter results by OR group 1 applied to documentRequestID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:extRefID",
            "description": "Filter results by OR group 1 applied to External Reference ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasNotes",
            "description": "Filter results by OR group 1 applied to Has Notes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isPrivate",
            "description": "Filter results by OR group 1 applied to Is Private. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isPublic",
            "description": "Filter results by OR group 1 applied to Is Public. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:iterationID",
            "description": "Filter results by OR group 1 applied to Iteration ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastModDate",
            "description": "Filter results by OR group 1 applied to Last Modified. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastNoteID",
            "description": "Filter results by OR group 1 applied to Last Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastSyncDate",
            "description": "Filter results by OR group 1 applied to lastSyncDate. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastUpdateDate",
            "description": "Filter results by OR group 1 applied to Last Update Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastUpdatedByID",
            "description": "Filter results by OR group 1 applied to Last Updated By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastVersionNum",
            "description": "Filter results by OR group 1 applied to lastVersionNum. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:name",
            "description": "Filter results by OR group 1 applied to Name. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:objID",
            "description": "Filter results by OR group 1 applied to ObjID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:opTaskID",
            "description": "Filter results by OR group 1 applied to Issue ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:ownerID",
            "description": "Filter results by OR group 1 applied to Owner ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:portfolioID",
            "description": "Filter results by OR group 1 applied to Portfolio ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:programID",
            "description": "Filter results by OR group 1 applied to Program ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:projectID",
            "description": "Filter results by OR group 1 applied to Project ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:publicToken",
            "description": "Filter results by OR group 1 applied to publicToken. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:referenceNumber",
            "description": "Filter results by OR group 1 applied to Reference Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:releaseVersionID",
            "description": "Filter results by OR group 1 applied to Release Version ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:securityRootID",
            "description": "Filter results by OR group 1 applied to securityRootID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:securityRootObjCode",
            "description": "Filter results by OR group 1 applied to securityRootObjCode. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:taskID",
            "description": "Filter results by OR group 1 applied to Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:templateID",
            "description": "Filter results by OR group 1 applied to Template ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:templateTaskID",
            "description": "Filter results by OR group 1 applied to Template Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:topDocObjCode",
            "description": "Filter results by OR group 1 applied to Top Document Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:topObjID",
            "description": "Filter results by OR group 1 applied to Top ObjID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:userID",
            "description": "Filter results by OR group 1 applied to User ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "OR:1:ID_Mod",
            "description": "Filter results by ID using the specified operation. Requires the field `OR:1:ID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:categoryID_Mod",
            "description": "Filter results by Category ID using the specified operation. Requires the field `OR:1:categoryID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:checkOutTimestamp_Mod",
            "description": "Filter results by checkOutTimestamp using the specified operation. Requires the field `OR:1:checkOutTimestamp`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:checkedOutByID_Mod",
            "description": "Filter results by checkedOutByID using the specified operation. Requires the field `OR:1:checkedOutByID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:currentVersionID_Mod",
            "description": "Filter results by Current Version ID using the specified operation. Requires the field `OR:1:currentVersionID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:customerID_Mod",
            "description": "Filter results by Customer ID using the specified operation. Requires the field `OR:1:customerID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:description_Mod",
            "description": "Filter results by Description using the specified operation. Requires the field `OR:1:description`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:docObjCode_Mod",
            "description": "Filter results by Document Type using the specified operation. Requires the field `OR:1:docObjCode`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:documentRequestID_Mod",
            "description": "Filter results by documentRequestID using the specified operation. Requires the field `OR:1:documentRequestID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:extRefID_Mod",
            "description": "Filter results by External Reference ID using the specified operation. Requires the field `OR:1:extRefID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:hasNotes_Mod",
            "description": "Filter results by Has Notes using the specified operation. Requires the field `OR:1:hasNotes`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isPrivate_Mod",
            "description": "Filter results by Is Private using the specified operation. Requires the field `OR:1:isPrivate`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:isPublic_Mod",
            "description": "Filter results by Is Public using the specified operation. Requires the field `OR:1:isPublic`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:iterationID_Mod",
            "description": "Filter results by Iteration ID using the specified operation. Requires the field `OR:1:iterationID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastModDate_Mod",
            "description": "Filter results by Last Modified using the specified operation. Requires the field `OR:1:lastModDate`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastNoteID_Mod",
            "description": "Filter results by Last Note ID using the specified operation. Requires the field `OR:1:lastNoteID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastSyncDate_Mod",
            "description": "Filter results by lastSyncDate using the specified operation. Requires the field `OR:1:lastSyncDate`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastUpdateDate_Mod",
            "description": "Filter results by Last Update Date using the specified operation. Requires the field `OR:1:lastUpdateDate`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastUpdatedByID_Mod",
            "description": "Filter results by Last Updated By ID using the specified operation. Requires the field `OR:1:lastUpdatedByID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:lastVersionNum_Mod",
            "description": "Filter results by lastVersionNum using the specified operation. Requires the field `OR:1:lastVersionNum`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:name_Mod",
            "description": "Filter results by Name using the specified operation. Requires the field `OR:1:name`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:objID_Mod",
            "description": "Filter results by ObjID using the specified operation. Requires the field `OR:1:objID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:opTaskID_Mod",
            "description": "Filter results by Issue ID using the specified operation. Requires the field `OR:1:opTaskID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:ownerID_Mod",
            "description": "Filter results by Owner ID using the specified operation. Requires the field `OR:1:ownerID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:portfolioID_Mod",
            "description": "Filter results by Portfolio ID using the specified operation. Requires the field `OR:1:portfolioID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:programID_Mod",
            "description": "Filter results by Program ID using the specified operation. Requires the field `OR:1:programID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:projectID_Mod",
            "description": "Filter results by Project ID using the specified operation. Requires the field `OR:1:projectID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:publicToken_Mod",
            "description": "Filter results by publicToken using the specified operation. Requires the field `OR:1:publicToken`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:referenceNumber_Mod",
            "description": "Filter results by Reference Number using the specified operation. Requires the field `OR:1:referenceNumber`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:releaseVersionID_Mod",
            "description": "Filter results by Release Version ID using the specified operation. Requires the field `OR:1:releaseVersionID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:securityRootID_Mod",
            "description": "Filter results by securityRootID using the specified operation. Requires the field `OR:1:securityRootID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:securityRootObjCode_Mod",
            "description": "Filter results by securityRootObjCode using the specified operation. Requires the field `OR:1:securityRootObjCode`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:taskID_Mod",
            "description": "Filter results by Task ID using the specified operation. Requires the field `OR:1:taskID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:templateID_Mod",
            "description": "Filter results by Template ID using the specified operation. Requires the field `OR:1:templateID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:templateTaskID_Mod",
            "description": "Filter results by Template Task ID using the specified operation. Requires the field `OR:1:templateTaskID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:topDocObjCode_Mod",
            "description": "Filter results by Top Document Type using the specified operation. Requires the field `OR:1:topDocObjCode`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:topObjID_Mod",
            "description": "Filter results by Top ObjID using the specified operation. Requires the field `OR:1:topObjID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "OR:1:userID_Mod",
            "description": "Filter results by User ID using the specified operation. Requires the field `OR:1:userID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "ID",
            "description": "Filter results by OR group 0 applied to ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "categoryID",
            "description": "Filter results by OR group 0 applied to Category ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "checkOutTimestamp",
            "description": "Filter results by OR group 0 applied to checkOutTimestamp. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "checkedOutByID",
            "description": "Filter results by OR group 0 applied to checkedOutByID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "currentVersionID",
            "description": "Filter results by OR group 0 applied to Current Version ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "customerID",
            "description": "Filter results by OR group 0 applied to Customer ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "description",
            "description": "Filter results by OR group 0 applied to Description. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "docObjCode",
            "description": "Filter results by OR group 0 applied to Document Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "documentRequestID",
            "description": "Filter results by OR group 0 applied to documentRequestID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "extRefID",
            "description": "Filter results by OR group 0 applied to External Reference ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "hasNotes",
            "description": "Filter results by OR group 0 applied to Has Notes. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "isPrivate",
            "description": "Filter results by OR group 0 applied to Is Private. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "isPublic",
            "description": "Filter results by OR group 0 applied to Is Public. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          },
          {
            "in": "query",
            "name": "iterationID",
            "description": "Filter results by OR group 0 applied to Iteration ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "lastModDate",
            "description": "Filter results by OR group 0 applied to Last Modified. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "lastNoteID",
            "description": "Filter results by OR group 0 applied to Last Note ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "lastSyncDate",
            "description": "Filter results by OR group 0 applied to lastSyncDate. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "lastUpdateDate",
            "description": "Filter results by OR group 0 applied to Last Update Date. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/dateTime.json"
            }
          },
          {
            "in": "query",
            "name": "lastUpdatedByID",
            "description": "Filter results by OR group 0 applied to Last Updated By ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "lastVersionNum",
            "description": "Filter results by OR group 0 applied to lastVersionNum. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "name",
            "description": "Filter results by OR group 0 applied to Name. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "objID",
            "description": "Filter results by OR group 0 applied to ObjID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "opTaskID",
            "description": "Filter results by OR group 0 applied to Issue ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "ownerID",
            "description": "Filter results by OR group 0 applied to Owner ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "portfolioID",
            "description": "Filter results by OR group 0 applied to Portfolio ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "programID",
            "description": "Filter results by OR group 0 applied to Program ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "projectID",
            "description": "Filter results by OR group 0 applied to Project ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "publicToken",
            "description": "Filter results by OR group 0 applied to publicToken. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "referenceNumber",
            "description": "Filter results by OR group 0 applied to Reference Number. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/post/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/int.json"
            }
          },
          {
            "in": "query",
            "name": "releaseVersionID",
            "description": "Filter results by OR group 0 applied to Release Version ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "securityRootID",
            "description": "Filter results by OR group 0 applied to securityRootID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "securityRootObjCode",
            "description": "Filter results by OR group 0 applied to securityRootObjCode. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "taskID",
            "description": "Filter results by OR group 0 applied to Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "templateID",
            "description": "Filter results by OR group 0 applied to Template ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "templateTaskID",
            "description": "Filter results by OR group 0 applied to Template Task ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "topDocObjCode",
            "description": "Filter results by OR group 0 applied to Top Document Type. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "topObjID",
            "description": "Filter results by OR group 0 applied to Top ObjID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "userID",
            "description": "Filter results by OR group 0 applied to User ID. Multiple fields in the same OR group are ANDed.",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "ID_Mod",
            "description": "Filter results by ID using the specified operation. Requires the field `ID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "categoryID_Mod",
            "description": "Filter results by Category ID using the specified operation. Requires the field `categoryID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "checkOutTimestamp_Mod",
            "description": "Filter results by checkOutTimestamp using the specified operation. Requires the field `checkOutTimestamp`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "checkedOutByID_Mod",
            "description": "Filter results by checkedOutByID using the specified operation. Requires the field `checkedOutByID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "currentVersionID_Mod",
            "description": "Filter results by Current Version ID using the specified operation. Requires the field `currentVersionID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "customerID_Mod",
            "description": "Filter results by Customer ID using the specified operation. Requires the field `customerID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "description_Mod",
            "description": "Filter results by Description using the specified operation. Requires the field `description`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "docObjCode_Mod",
            "description": "Filter results by Document Type using the specified operation. Requires the field `docObjCode`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "documentRequestID_Mod",
            "description": "Filter results by documentRequestID using the specified operation. Requires the field `documentRequestID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "extRefID_Mod",
            "description": "Filter results by External Reference ID using the specified operation. Requires the field `extRefID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "hasNotes_Mod",
            "description": "Filter results by Has Notes using the specified operation. Requires the field `hasNotes`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "isPrivate_Mod",
            "description": "Filter results by Is Private using the specified operation. Requires the field `isPrivate`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "isPublic_Mod",
            "description": "Filter results by Is Public using the specified operation. Requires the field `isPublic`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "iterationID_Mod",
            "description": "Filter results by Iteration ID using the specified operation. Requires the field `iterationID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "lastModDate_Mod",
            "description": "Filter results by Last Modified using the specified operation. Requires the field `lastModDate`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "lastNoteID_Mod",
            "description": "Filter results by Last Note ID using the specified operation. Requires the field `lastNoteID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "lastSyncDate_Mod",
            "description": "Filter results by lastSyncDate using the specified operation. Requires the field `lastSyncDate`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "lastUpdateDate_Mod",
            "description": "Filter results by Last Update Date using the specified operation. Requires the field `lastUpdateDate`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "lastUpdatedByID_Mod",
            "description": "Filter results by Last Updated By ID using the specified operation. Requires the field `lastUpdatedByID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "lastVersionNum_Mod",
            "description": "Filter results by lastVersionNum using the specified operation. Requires the field `lastVersionNum`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "name_Mod",
            "description": "Filter results by Name using the specified operation. Requires the field `name`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "objID_Mod",
            "description": "Filter results by ObjID using the specified operation. Requires the field `objID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "opTaskID_Mod",
            "description": "Filter results by Issue ID using the specified operation. Requires the field `opTaskID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "ownerID_Mod",
            "description": "Filter results by Owner ID using the specified operation. Requires the field `ownerID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "portfolioID_Mod",
            "description": "Filter results by Portfolio ID using the specified operation. Requires the field `portfolioID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "programID_Mod",
            "description": "Filter results by Program ID using the specified operation. Requires the field `programID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "projectID_Mod",
            "description": "Filter results by Project ID using the specified operation. Requires the field `projectID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "publicToken_Mod",
            "description": "Filter results by publicToken using the specified operation. Requires the field `publicToken`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "referenceNumber_Mod",
            "description": "Filter results by Reference Number using the specified operation. Requires the field `referenceNumber`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "releaseVersionID_Mod",
            "description": "Filter results by Release Version ID using the specified operation. Requires the field `releaseVersionID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "securityRootID_Mod",
            "description": "Filter results by securityRootID using the specified operation. Requires the field `securityRootID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "securityRootObjCode_Mod",
            "description": "Filter results by securityRootObjCode using the specified operation. Requires the field `securityRootObjCode`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "taskID_Mod",
            "description": "Filter results by Task ID using the specified operation. Requires the field `taskID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "templateID_Mod",
            "description": "Filter results by Template ID using the specified operation. Requires the field `templateID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "templateTaskID_Mod",
            "description": "Filter results by Template Task ID using the specified operation. Requires the field `templateTaskID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "topDocObjCode_Mod",
            "description": "Filter results by Top Document Type using the specified operation. Requires the field `topDocObjCode`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "topObjID_Mod",
            "description": "Filter results by Top ObjID using the specified operation. Requires the field `topObjID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "userID_Mod",
            "description": "Filter results by User ID using the specified operation. Requires the field `userID`.",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/39/schema",
              "x-miro": "swagger/v10.0/schemas/field_Mod.yml"
            }
          },
          {
            "in": "query",
            "name": "ID_Sort",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false,
            "description": "ID"
          },
          {
            "in": "query",
            "name": "accessorIDs_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "accessorIDs"
          },
          {
            "in": "query",
            "name": "advancedProofingOptions_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "advancedProofingOptions"
          },
          {
            "in": "query",
            "name": "categoryID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Category ID"
          },
          {
            "in": "query",
            "name": "checkOutTimestamp_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "checkOutTimestamp"
          },
          {
            "in": "query",
            "name": "checkedOutByID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "checkedOutByID"
          },
          {
            "in": "query",
            "name": "createProof_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "createProof"
          },
          {
            "in": "query",
            "name": "currentVersionID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Current Version ID"
          },
          {
            "in": "query",
            "name": "customerID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Customer ID"
          },
          {
            "in": "query",
            "name": "description_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Description"
          },
          {
            "in": "query",
            "name": "docObjCode_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Document Type"
          },
          {
            "in": "query",
            "name": "documentRequestID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "documentRequestID"
          },
          {
            "in": "query",
            "name": "downloadURL_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "downloadURL"
          },
          {
            "in": "query",
            "name": "extRefID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "External Reference ID"
          },
          {
            "in": "query",
            "name": "hasNotes_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Has Notes"
          },
          {
            "in": "query",
            "name": "isPrivate_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Is Private"
          },
          {
            "in": "query",
            "name": "isPublic_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Is Public"
          },
          {
            "in": "query",
            "name": "iterationID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Iteration ID"
          },
          {
            "in": "query",
            "name": "lastModDate_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Last Modified"
          },
          {
            "in": "query",
            "name": "lastNoteID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Last Note ID"
          },
          {
            "in": "query",
            "name": "lastSyncDate_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "lastSyncDate"
          },
          {
            "in": "query",
            "name": "lastUpdateDate_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Last Update Date"
          },
          {
            "in": "query",
            "name": "lastUpdatedByID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Last Updated By ID"
          },
          {
            "in": "query",
            "name": "lastVersionNum_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "lastVersionNum"
          },
          {
            "in": "query",
            "name": "name_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Name"
          },
          {
            "in": "query",
            "name": "objID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "ObjID"
          },
          {
            "in": "query",
            "name": "opTaskID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Issue ID"
          },
          {
            "in": "query",
            "name": "ownerID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Owner ID"
          },
          {
            "in": "query",
            "name": "portfolioID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Portfolio ID"
          },
          {
            "in": "query",
            "name": "previewURL_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "previewURL"
          },
          {
            "in": "query",
            "name": "programID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Program ID"
          },
          {
            "in": "query",
            "name": "projectID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Project ID"
          },
          {
            "in": "query",
            "name": "publicToken_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "publicToken"
          },
          {
            "in": "query",
            "name": "referenceNumber_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Reference Number"
          },
          {
            "in": "query",
            "name": "referenceObjCode_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "referenceObjCode"
          },
          {
            "in": "query",
            "name": "referenceObjID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "referenceObjID"
          },
          {
            "in": "query",
            "name": "referenceObjectClosed_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "referenceObjectClosed"
          },
          {
            "in": "query",
            "name": "referenceObjectName_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "referenceObjectName"
          },
          {
            "in": "query",
            "name": "releaseVersionID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Release Version ID"
          },
          {
            "in": "query",
            "name": "securityRootID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "securityRootID"
          },
          {
            "in": "query",
            "name": "securityRootObjCode_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "securityRootObjCode"
          },
          {
            "in": "query",
            "name": "taskID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Task ID"
          },
          {
            "in": "query",
            "name": "templateID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Template ID"
          },
          {
            "in": "query",
            "name": "templateTaskID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Template Task ID"
          },
          {
            "in": "query",
            "name": "topDocObjCode_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Top Document Type"
          },
          {
            "in": "query",
            "name": "topObjID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "Top ObjID"
          },
          {
            "in": "query",
            "name": "userID_Sort",
            "schema": {
              "$ref": "#/paths/~1docu~1search/get/parameters/381/schema",
              "x-miro": "swagger/v10.0/schemas/field_Sort.yml"
            },
            "required": false,
            "description": "User ID"
          },
          {
            "$ref": "#/paths/~1docu/post/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/fields.yml"
          },
          {
            "in": "query",
            "name": "$$LIMIT",
            "schema": {
              "type": "integer",
              "maximum": 2000,
              "minimum": 1,
              "default": 100
            },
            "description": "Max number of results to include in the response."
          },
          {
            "in": "query",
            "name": "$$FIRST",
            "schema": {
              "type": "integer"
            },
            "description": "The first result to include in the response. Used with $$LIMIT and _Sort for pagination."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/paths/~1docu~1report/get/parameters/1/content/application~1json/schema",
                            "x-miro": "swagger/v10.0/schemas/resources/DOCU/read.json"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/docu/calculateDataExtension": {
      "put": {
        "operationId": "putDOCUActioncalculateDataExtensionWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1docu/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          }
        ],
        "summary": "Document calculateDataExtension",
        "description": "Performs the calculateDataExtension action on the Document object",
        "tags": [
          "DOCU",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {}
                  },
                  {
                    "type": "object",
                    "properties": {
                      "documentIDs": {
                        "$ref": "#/paths/~1docu/put/parameters/2/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "documentVersionID": {
                        "$ref": "#/paths/~1docu/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "advancedProofingOptions": {
                        "$ref": "#/paths/~1docu/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "documentIDs": {
                        "$ref": "#/paths/~1docu/put/parameters/2/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      },
                      "includeLinked": {
                        "$ref": "#/paths/~1docu/put/parameters/5/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "documentID": {
                        "$ref": "#/paths/~1docu/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objID": {
                        "$ref": "#/paths/~1docu/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      },
                      "docObjCode": {
                        "$ref": "#/paths/~1docu/put/parameters/1/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "ids": {
                        "$ref": "#/paths/~1docu/put/parameters/2/schema",
                        "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                      }
                    }
                  }
                ]
              },
              "examples": {
                "putDOCUActioncalculateDataExtensionWithId": {
                  "value": {}
                },
                "putDOCUActioncheckInWithId": {
                  "value": {}
                },
                "putDOCUActioncheckOutWithId": {
                  "value": {}
                },
                "putDOCUActioncreateProofWithId": {
                  "value": {}
                },
                "putDOCUActiongetTotalSizeForDocumentsWithId": {
                  "value": {}
                },
                "putDOCUActionisLinkedDocumentWithId": {
                  "value": {}
                },
                "putDOCUActionisProofAutoGenrationEnabledWithId": {
                  "value": {}
                },
                "putDOCUActionmoveWithId": {
                  "value": {}
                },
                "putDOCUActionunlinkDocumentsWithId": {
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "examples": {
                  "putDOCUActioncalculateDataExtensionWithId": {
                    "value": {}
                  },
                  "putDOCUActioncheckInWithId": {
                    "value": {}
                  },
                  "putDOCUActioncheckOutWithId": {
                    "value": {}
                  },
                  "putDOCUActioncreateProofWithId": {
                    "value": {}
                  },
                  "putDOCUActiongetTotalSizeForDocumentsWithId": {
                    "value": {}
                  },
                  "putDOCUActionisLinkedDocumentWithId": {
                    "value": {}
                  },
                  "putDOCUActionisProofAutoGenrationEnabledWithId": {
                    "value": {}
                  },
                  "putDOCUActionmoveWithId": {
                    "value": {}
                  },
                  "putDOCUActionunlinkDocumentsWithId": {
                    "value": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/docu/{ID}/calculateDataExtension": {
      "put": {
        "operationId": "putDOCUActioncalculateDataExtensionWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1docu~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          }
        ],
        "summary": "Document calculateDataExtension",
        "description": "Performs the calculateDataExtension action on the Document object",
        "tags": [
          "DOCU",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/docu/checkIn": {
      "put": {
        "operationId": "putDOCUActioncheckInWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1docu/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "documentIDs",
            "description": "documentIDs",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/2/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Document checkIn is used to check in a document that has been checked out. Only a an admin or the user who checked out the document can check that document in. A specific document can be selected by using the DocumentIDs parameter.",
        "description": "Performs the checkIn action on the Document object using the documentIDs parameter.",
        "tags": [
          "DOCU",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "documentIDs": {
                    "$ref": "#/paths/~1docu/put/parameters/2/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/docu/{ID}/checkIn": {
      "put": {
        "operationId": "putDOCUActioncheckInWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1docu~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "documentIDs",
            "description": "documentIDs",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/2/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Document checkIn by ID is used to check in a document with the corresponding {ID} that has been checked out. Only a an admin or the user who checked out the document can check that document in. A specific document can be selected by using the DocumentIDs parameter.",
        "description": "Performs the checkIn action on the Document object with the corresponding {ID}.",
        "tags": [
          "DOCU",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "documentIDs": {
                    "$ref": "#/paths/~1docu/put/parameters/2/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/docu/checkOut": {
      "put": {
        "operationId": "putDOCUActioncheckOutWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1docu/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "documentIDs",
            "description": "documentIDs",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/2/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Document checkOut is used to check out a document for review. This means the document can't be modified or updated until the user who checked the document out or an administrator checks the document back in. The DocumentIDs parameter allows you to select specific documents for checkout.",
        "description": "Performs the checkOut action on the Document object. The DocumentIDs parameter allows you to select specific documents for checkout.",
        "tags": [
          "DOCU",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "documentIDs": {
                    "$ref": "#/paths/~1docu/put/parameters/2/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/docu/{ID}/checkOut": {
      "put": {
        "operationId": "putDOCUActioncheckOutWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1docu~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "documentIDs",
            "description": "documentIDs",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/2/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Document checkOut by ID is used to check out a document with the corresponding {ID} for review. This means the document can't be modified or updated until the user who checked the document out or an administrator checks the document back in. The DocumentIDs parameter allows you to select specific documents for checkout.",
        "description": "Performs the checkOut action on the Document object with the corresponding {ID}.",
        "tags": [
          "DOCU",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "documentIDs": {
                    "$ref": "#/paths/~1docu/put/parameters/2/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/docu/createProof": {
      "put": {
        "operationId": "putDOCUActioncreateProofWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1docu/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "documentVersionID",
            "description": "documentVersionID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "advancedProofingOptions",
            "description": "advancedProofingOptions",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Document createProof is used to create a proof from an existing document. You can specify field values for documentVersionID and advancedProofingOptions.",
        "description": "Performs the createProof action on the Document object. You can specify field values for documentVersionID and advancedProofingOptions.",
        "tags": [
          "DOCU",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "documentVersionID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "advancedProofingOptions": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/docu/{ID}/createProof": {
      "put": {
        "operationId": "putDOCUActioncreateProofWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1docu~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "documentVersionID",
            "description": "documentVersionID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "advancedProofingOptions",
            "description": "advancedProofingOptions",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Document createProof ID is used to create a proof from an existing document with the corresponding {ID}. You can specify field values for documentVersionID and advancedProofingOptions.",
        "description": "Performs the createProof action on the Document object with the corresponding {ID}. You can specify field values for documentVersionID and advancedProofingOptions.",
        "tags": [
          "DOCU",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "documentVersionID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "advancedProofingOptions": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/docu/getTotalSizeForDocuments": {
      "put": {
        "operationId": "putDOCUActiongetTotalSizeForDocumentsWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1docu/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "documentIDs",
            "description": "documentIDs",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/2/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "includeLinked",
            "description": "includeLinked",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          }
        ],
        "summary": "Document getTotalSizeForDocuments",
        "description": "Performs the getTotalSizeForDocuments action on the Document object",
        "tags": [
          "DOCU",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "documentIDs": {
                    "$ref": "#/paths/~1docu/put/parameters/2/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "includeLinked": {
                    "$ref": "#/paths/~1docu/put/parameters/5/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/docu/{ID}/getTotalSizeForDocuments": {
      "put": {
        "operationId": "putDOCUActiongetTotalSizeForDocumentsWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1docu~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "documentIDs",
            "description": "documentIDs",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/2/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          },
          {
            "in": "query",
            "name": "includeLinked",
            "description": "includeLinked",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/5/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
            }
          }
        ],
        "summary": "Document getTotalSizeForDocuments",
        "description": "Performs the getTotalSizeForDocuments action on the Document object",
        "tags": [
          "DOCU",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "documentIDs": {
                    "$ref": "#/paths/~1docu/put/parameters/2/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  },
                  "includeLinked": {
                    "$ref": "#/paths/~1docu/put/parameters/5/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/boolean.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/docu/isLinkedDocument": {
      "put": {
        "operationId": "putDOCUActionisLinkedDocumentWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1docu/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "documentID",
            "description": "documentID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Document isLinkedDocument allows you to check if a document has link associations with objects outside of Workfront. You can select specific documents using the documentID parameter.",
        "description": "Performs the isLinkedDocument action on the Document object. You can select specific documents using the documentID parameter.",
        "tags": [
          "DOCU",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "documentID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/docu/{ID}/isLinkedDocument": {
      "put": {
        "operationId": "putDOCUActionisLinkedDocumentWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1docu~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "documentID",
            "description": "documentID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Document isLinkedDocument ID allows you to check if a document with the corresponding {ID} has link associations with objects outside of Workfront.",
        "description": "Performs the isLinkedDocument action on the Document object with the corresponding {ID}.",
        "tags": [
          "DOCU",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "documentID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/docu/isProofAutoGenrationEnabled": {
      "put": {
        "operationId": "putDOCUActionisProofAutoGenrationEnabledWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1docu/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          }
        ],
        "summary": "Document isProofAutoGenrationEnabled is used to check if proof automation is enabled on the document object.",
        "description": "Performs the isProofAutoGenrationEnabled action on the Document object.",
        "tags": [
          "DOCU",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/docu/{ID}/isProofAutoGenrationEnabled": {
      "put": {
        "operationId": "putDOCUActionisProofAutoGenrationEnabledWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1docu~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          }
        ],
        "summary": "Document isProofAutoGenrationEnabled ID is used to check if proof automation is enabled on the document object with the corresponding {ID}.",
        "description": "Performs the isProofAutoGenrationEnabled action on the Document object with the corresponding {ID}.",
        "tags": [
          "DOCU",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/docu/move": {
      "put": {
        "operationId": "putDOCUActionmoveWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1docu/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "objID",
            "description": "objID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "docObjCode",
            "description": "docObjCode",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Document move",
        "description": "Performs the move action on the Document object",
        "tags": [
          "DOCU",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "objID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "docObjCode": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/docu/{ID}/move": {
      "put": {
        "operationId": "putDOCUActionmoveWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1docu~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "objID",
            "description": "objID",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          },
          {
            "in": "query",
            "name": "docObjCode",
            "description": "docObjCode",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/1/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
            }
          }
        ],
        "summary": "Document move",
        "description": "Performs the move action on the Document object",
        "tags": [
          "DOCU",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "objID": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  },
                  "docObjCode": {
                    "$ref": "#/paths/~1docu/put/parameters/1/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string.json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/docu/unlinkDocuments": {
      "put": {
        "operationId": "putDOCUActionunlinkDocumentsWithAction",
        "parameters": [
          {
            "$ref": "#/paths/~1docu/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/query/ID.yml"
          },
          {
            "in": "query",
            "name": "ids",
            "description": "ids",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/2/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Document unlinkDocuments allows you to unlink documents from objects and/or associations made outside of Workfront.",
        "description": "Performs the unlinkDocuments action on the Document object to remove associations and/or objects outside of Workfront.",
        "tags": [
          "DOCU",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "$ref": "#/paths/~1docu/put/parameters/2/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/docu/{ID}/unlinkDocuments": {
      "put": {
        "operationId": "putDOCUActionunlinkDocumentsWithIdAction",
        "parameters": [
          {
            "$ref": "#/paths/~1docu~1%7BID%7D/put/parameters/0",
            "x-miro": "swagger/v10.0/parameters/path/ID.yml"
          },
          {
            "in": "query",
            "name": "ids",
            "description": "ids",
            "schema": {
              "$ref": "#/paths/~1docu/put/parameters/2/schema",
              "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
            }
          }
        ],
        "summary": "Document unlinkDocuments ID allows you to unlink the document(s) with the corresponding {ID}(s) from objects and/or associations made outside of Workfront.",
        "description": "Performs the unlinkDocuments action on the Document object(s) with the corresponding {ID}(s) to remove associations and/or objects outside of Workfront.",
        "tags": [
          "DOCU",
          "action"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "$ref": "#/paths/~1docu/put/parameters/2/schema",
                    "x-miro": "swagger/v10.0/schemas/fieldTypes/string[].json"
                  }
                }
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1docu/put/responses/200/content/application~1json/schema/anyOf/1",
                      "x-miro": "swagger/v10.0/schemas/errorResponse.yml"
                    }
                  ]
                },
                "example": {}
              }
            }
          }
        }
      }
    }
  }
}
